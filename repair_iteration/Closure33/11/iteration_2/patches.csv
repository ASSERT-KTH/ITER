bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  -  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  -  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames  -  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames  -  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  i  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  i  -  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  i  -  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties  -  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties  -  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations?  MAX_PRETTY_PRINTED_PROPERTIES  :  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations?  MAX_PRETTY_PRINTED_PROPERTIES  :  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations?  MAX_PRETTY_PRINTED_PROPERTIES  :  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNOTATIONS);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNOTATIONS);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNOTATIONS);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
15	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
16	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
17	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
18	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
19	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
20	[BUG]  [BUGGY]  Annotations  <  ObjectType.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
22	[BUG]  [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  implicitPrototypeFallback.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
23	[BUG]  [BUGGY]  Annotations  <  inferred.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  inferred.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  inferred.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
24	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
25	[BUG]  [BUGGY]  Annotations  <  typeFallback.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  typeFallback.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  typeFallback.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
26	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  implicitPrototypeFallback.getImplicitPrototype();	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
27	[BUG]  [BUGGY]  prettyPrint  = "native  type  ' "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  ' "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  ' "  +  this.implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
28	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  forAnnotations.getImplicitPrototype();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
29	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype()  + "' ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype()  + "' ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype()  + "' ";	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
30	[BUG]  [BUGGY]  prettyPrint  = "Native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  i,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  i,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  i,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(properties,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
36	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
37	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
38	[BUG]  [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
39	[BUG]  [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(implicitPrototypeFallback  ==  null  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
40	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
41	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
42	[BUG]  [BUGGY]  prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
43	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getImplicitPrototypeFallback();	  prettyPrint    =       "native    type   "    +    getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
44	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
45	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
46	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  forAnnotations.toString();	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  prettyPrint  = "immutable "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "immutable "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "immutable "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
50	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
51	[BUG]  [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
52	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations.getImplicitPrototypeName();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
54	[BUG]  [BUGGY]  prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
55	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototype.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototype.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototype.getImplicitPrototypeName();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getType()  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	149	None	replace
57	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getPrettyPrint()  :  null;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getPrettyPrint()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getPrettyPrint()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	149	None	replace
58	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getParent()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getParent()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	149	None	replace
59	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
60	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size()  -  1)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.size()  -  1)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size()  -  1)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
61	[BUG]  [BUGGY]  Annotations  <  implementationPrototypeFallback.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implementationPrototypeFallback.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implementationPrototypeFallback.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
62	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size()  ||  forAnnotations)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.size()  ||  forAnnotations)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size()  ||  forAnnotations)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
63	[BUG]  [BUGGY]  Annotations  <  inputPrototypeFallback.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  inputPrototypeFallback.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  inputPrototypeFallback.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
64	[BUG]  [BUGGY]  Annotations  <  inferredPrototype.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  inferredPrototype.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  inferredPrototype.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  1,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  1,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  1,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations,  inferred);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(this.implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(this.implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(this.implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
70	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInferredPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInferredPrototype()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInferredPrototype()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
71	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getReferenceName()  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getReferenceName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getReferenceName()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
72	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newHashSet(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newHashSet(forAnnotations);	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
73	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newTreeSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newTreeSet();	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
74	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet(prettyPrint);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newHashSet(prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newHashSet(prettyPrint);	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
75	[BUG]  [BUGGY]  forAnnotations  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newLinkedHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newLinkedHashSet();	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
76	[BUG]  [BUGGY]  forAnnotations  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newArrayList();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newArrayList();	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
77	[BUG]  [BUGGY]  prettyPrint  =   "implicitPrototypeFallback ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "implicitPrototypeFallback ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "implicitPrototypeFallback ";	  prettyPrint    =       "implicitable   ";    	non-compiled	[CE]  <identifier>  expected	158	None	replace
78	[BUG]  [BUGGY]  prettyPrint  =   "implicitablePrototypeFallback ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "implicitablePrototypeFallback ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "implicitablePrototypeFallback ";	  prettyPrint    =       "implicitable   ";    	non-compiled	[CE]  <identifier>  expected	158	None	replace
79	[BUG]  [BUGGY]  prettyPrint  = "implicitPrototype   ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "implicitPrototype   ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "implicitPrototype   ";	  prettyPrint    =       "implicitable   ";    	non-compiled	[CE]  <identifier>  expected	158	None	replace
80	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getNativeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations.getNativeType();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
81	[BUG]  [BUGGY]  prettyPrint  = "Native  type: "  +  forAnnotations.getNativeType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: "  +  forAnnotations.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: "  +  forAnnotations.getNativeType();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
82	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  implicitPrototype.getNativeType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  implicitPrototype.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  implicitPrototype.getNativeType();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  forAnnotations  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames.size(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames.size(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames.size(),  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  localCount++,  forAnnotations  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  localCount++,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  localCount++,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTS,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyName,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  forAnnotations  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPER,  localCount++,  forAnnotations  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPER,  localCount++,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPER,  localCount++,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  0,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  0,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  0);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
108	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations:  %s "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations:  %s "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations:  %s "  +  implicitPrototypeFallback;	  prettyPrint    =       "native    type    forAnnotations:    %s   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
109	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations:  %s "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations:  %s "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations:  %s "  +  forAnnotations;	  prettyPrint    =       "native    type    forAnnotations:    %s   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
110	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  % "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  % "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations:  % "  +  forAnnotations;	  prettyPrint    =       "native    type    forAnnotations:    %s   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
111	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations:  %s "  +  inferred;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations:  %s "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations:  %s "  +  inferred;	  prettyPrint    =       "native    type    forAnnotations:    %s   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
112	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
113	[BUG]  [BUGGY]  Annotations  <  inferredPrototypeFallback.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  inferredPrototypeFallback.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  inferredPrototypeFallback.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
114	[BUG]  [BUGGY]  Annotations  <  inferred.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  inferred.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  inferred.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
115	[BUG]  [BUGGY]  Annotations  <  forAnnotations)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  forAnnotations)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  forAnnotations)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
116	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  true;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  true;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
117	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.length  -  1)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.length  -  1)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.length  -  1)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
118	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
119	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
120	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype).getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype).getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
121	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getPrettyPrint();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
122	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
123	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
124	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
125	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  implicitPrototypeFallback.getName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
126	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "unknown  type "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type "  +  forAnnotations;	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
127	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "unknown  type: "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type: "  +  forAnnotations;	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
128	[BUG]  [BUGGY]  sb.append( "unknown  type ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( "unknown  type ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( "unknown  type ");	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
129	[BUG]  [BUGGY]  prettyPrint  = "Unknown  type ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Unknown  type ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Unknown  type ";	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
130	[BUG]  [BUGGY]  prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
131	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	151	None	replace
132	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	151	None	replace
133	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	151	None	replace
134	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	151	None	replace
135	[BUG]  [BUGGY]  prettyPrint  &=  FOR_NOT_IMPLEMENTED;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  FOR_NOT_IMPLEMENTED;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  FOR_NOT_IMPLEMENTED;	  prettyPrint    |=    FOR_NOT_IMPLEMENTED;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
136	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED  &&  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED  &&  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTED  &&  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTED;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
137	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED  ||  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTED  ||  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTED;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
138	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED  +  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTED  +  1;	  prettyPrint    |=    FOR_NOT_IMPLEMENTED;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
139	[BUG]  [BUGGY]  prettyPrint  &=  FOR_Annotations;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  FOR_Annotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  FOR_Annotations;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
140	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATIONS  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
141	[BUG]  [BUGGY]  prettyPrint  &=  FOR_ANNotations;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  FOR_ANNotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  FOR_ANNotations;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
142	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATIONS;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
143	[BUG]  [BUGGY]  prettyPrint  |=  FOR_Annotations  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_Annotations  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_Annotations  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
144	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
145	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    forAnnotations.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
146	[BUG]  [BUGGY]  prettyPrint  = "Native  type   "  +  forAnnotations.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type   "  +  forAnnotations.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type   "  +  forAnnotations.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    forAnnotations.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
147	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototype());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
148	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
149	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototype());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  localCount);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  localCount);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  localCount,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  localCount,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  i,  localCount,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  i,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  propertyNames,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  localCount,  propertyNames,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  properties,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  properties,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  localCount,  properties,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
156	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype(),  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype(),  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype(),  forAnnotations);	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
157	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
158	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
159	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
160	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHtml(forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newHtml(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newHtml(forAnnotations);	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
161	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newBoolean(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newBoolean(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newBoolean(forAnnotations);	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
162	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newStringHashSet();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newStringHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newStringHashSet();	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
163	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newStringBuilder();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newStringBuilder();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newStringBuilder();	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
164	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  implicitPrototypeFallback;	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
165	[BUG]  [BUGGY]  prettyPrint  = "Native  type: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: "  +  forAnnotations;	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
166	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  forAnnotations.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  forAnnotations.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  forAnnotations.toString();	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
167	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  nativeType;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  nativeType;	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
168	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  forAnnotations  + ";n ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  forAnnotations  + ";n ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  forAnnotations  + ";n ";	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
169	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  inferred;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  inferred;	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
170	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
171	[BUG]  [BUGGY]  Annotations  <  ObjectType>  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  prettyPrint  =  false;	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
172	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  inferred);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties,  inferred);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
179	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newTreeSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
180	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	List  <  String>  propertyNames  =  Sets.newTreeSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
181	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
182	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeList();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeList();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	List  <  String>  propertyNames  =  Sets.newTreeList();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
183	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName(),  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName(),  forAnnotations);	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
184	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
185	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
186	[BUG]  [BUGGY]  prettyPrint  =  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
187	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  inferred);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
188	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(propertyNames);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
189	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(properties);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(properties);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(properties);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
190	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this,  forAnnotations);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
191	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  false);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  false);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  false);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
192	[BUG]  [BUGGY]  prettyPrint  = "native  type  ' "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  ' "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  ' "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
193	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName()  + "' ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName()  + "' ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName()  + "' ";	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
194	[BUG]  [BUGGY]  prettyPrint  = "Native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
195	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
196	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(0);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
197	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(false);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(false);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
198	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  forAnnotations.toString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "null "  +  forAnnotations.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  forAnnotations.toString();	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
199	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  forAnnotations.booleanValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "null "  +  forAnnotations.booleanValue();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  forAnnotations.booleanValue();	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
200	[BUG]  [BUGGY]  prettyPrint  = "null "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "null "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "null "  +  implicitPrototypeFallback;	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
201	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getConstructor()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getConstructor()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getConstructor()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
202	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstanceType()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstanceType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstanceType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
203	[BUG]  [BUGGY]  prettyPrint  &=  FOR_NOT_IMPLEMENTAL;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  FOR_NOT_IMPLEMENTAL;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  FOR_NOT_IMPLEMENTAL;	  prettyPrint    |=    FOR_NOT_IMPLEMENTAL;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
204	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  ||  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTAL  ||  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTAL;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
205	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  &&  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  &&  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTAL  &&  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTAL;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
206	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  +  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTAL  +  1;	  prettyPrint    |=    FOR_NOT_IMPLEMENTAL;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
207	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTAL  +  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTAL;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
208	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  forAnnotations.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    forAnnotations.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	179	None	replace
209	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null ",  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null ",  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( "null ",  forAnnotations);	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
210	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( "[null] ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  new  StringBuilder().append( "[null] ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( "[null] ");	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
211	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null ").append(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( "null ").append(forAnnotations);	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
212	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( "Null ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  new  StringBuilder().append( "Null ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( "Null ");	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  forAnnotations  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
214	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames.size(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames.size(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames.size(),  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  localCount,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  localCount,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  localCount,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
221	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
222	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
223	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
224	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
225	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
226	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
227	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
229	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
230	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(properties,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  className,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  className,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  className,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  type,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  type,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  type,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
235	[BUG]  [BUGGY]  prettyPrint  = "[null] "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[null] "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[null] "  +  forAnnotations;	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
236	[BUG]  [BUGGY]  prettyPrint  = "[null] ",  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[null] ",  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[null] ",  forAnnotations);	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
237	[BUG]  [BUGGY]  prettyPrint  = "[null] "  +  getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[null] "  +  getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[null] "  +  getName();	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
238	[BUG]  [BUGGY]  prettyPrint  = "[null] "  +  getReferenceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[null] "  +  getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[null] "  +  getReferenceName();	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
239	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
240	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
241	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
242	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
243	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
244	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  propertyNames.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  propertyNames.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  propertyNames.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
245	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATIONS  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
246	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getPrettyPrint();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getPrettyPrint();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	134	None	replace
247	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  inferred;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  inferred;	  prettyPrint    =   "native    type    forAnnotations:   "    +    prettyPrint;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
248	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(interfaceType)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(interfaceType)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(interfaceType)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
249	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalPrototypeFallback)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalPrototypeFallback)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalPrototypeFallback)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
250	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
251	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
252	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalType)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalType)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalType)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
253	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
254	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalType)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalType)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(internalType)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
255	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  inferred.toString();	  prettyPrint    =   "native    type    forAnnotations:   "    +    inferred;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
256	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred  + ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred  + ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  inferred  + ";	  prettyPrint    =   "native    type    forAnnotations:   "    +    inferred;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
257	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	12	None	replace
258	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	12	None	replace
259	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
260	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
263	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getPrettyPrint();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getPrettyPrint();	  prettyPrint    =       "native    type   "    +    getName();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
264	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getName();	  prettyPrint    =       "native    type   "    +    getName();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
265	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  getName();	  prettyPrint    =       "native    type   "    +    getName();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
266	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback!=    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
267	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback!=    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
268	[BUG]  [BUGGY]  prettyPrint  =(implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback!=    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
269	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint(),  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint(),  forAnnotations);	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getPrettyPrint());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
270	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getPrettyPrint());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
271	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getPrettyPrint());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
272	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getPrettyPrint());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
273	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredPrototype());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getPrettyPrint());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
274	[BUG]  [BUGGY]  prettyPrint  =  '['  +  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  +  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  +  forAnnotations);	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
275	[BUG]  [BUGGY]  prettyPrint  =  '['  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  +  forAnnotations;	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
276	[BUG]  [BUGGY]  prettyPrint  =  '['  +  forAnnotations  + "]';  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  +  forAnnotations  + "]';  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  +  forAnnotations  + "]';	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
277	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null);	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
278	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null);	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
279	[BUG]  [BUGGY]  prettyPrint  =  '[',  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '[',  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '[',  forAnnotations);	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
280	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getInferredPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations.getInferredPrototype();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
281	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getName();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
282	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getInferredType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getInferredType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getInferredType();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getInferredType();    	non-compiled	[CE]  <identifier>  expected	178	None	replace
283	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getInferredType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getInferredType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getInferredType();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getInferredType();    	non-compiled	[CE]  <identifier>  expected	178	None	replace
284	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
285	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
286	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implictPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implictPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implictPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
287	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
288	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName()  + ": "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName()  + ": "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName()  + ": "  +  forAnnotations;	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
289	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName()  + ", "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName()  + ", "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName()  + ", "  +  forAnnotations;	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
290	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName()  + "property ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName()  + "property ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName()  + "property ";	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
291	[BUG]  [BUGGY]  String  propertyName  =  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getImplicitPrototype();	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
292	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName()  + "_ "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName()  + "_ "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName()  + "_ "  +  forAnnotations;	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
293	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newHashSet(forAnnotations);	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
294	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newNativeSet();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newNativeSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newNativeSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
295	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newArrayList();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newArrayList();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
296	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
297	[BUG]  [BUGGY]  prettyPrint  &=  FOR_ANNOTATION;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  FOR_ANNOTATION;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  FOR_ANNOTATION;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
298	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
299	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  &&  forAnnotations;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  &&  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  &&  forAnnotations;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
300	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
301	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||!forAnnotations;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||!forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  ||!forAnnotations;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
302	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback(forAnnotations);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback(forAnnotations);	  ObjectType    implicitPrototypeFallback    =    getInferredPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
303	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback(prettyPrint);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback(prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback(prettyPrint);	  ObjectType    implicitPrototypeFallback    =    getInferredPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
304	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getPrimitivePrototypeFallback();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getPrimitivePrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getPrimitivePrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    getInferredPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
305	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInterfaceFallback();  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInterfaceFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getInterfaceFallback();	  ObjectType    implicitPrototypeFallback    =    getInferredPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
306	[BUG]  [BUGGY]  prettyPrint  = "native  type  ' "  +  implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  ' "  +  implicitPrototypeFallback.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  ' "  +  implicitPrototypeFallback.getNativeType();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
307	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getName();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
308	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
309	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getInferredType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getInferredType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getInferredType();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
310	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
311	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
312	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
313	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
314	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
315	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
316	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(getReferenceName(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingClass(getReferenceName(),  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingClass(getReferenceName(),  forAnnotations);	  aughtExceptionHandler.handleMissingClass(getReferenceName());    	non-compiled	[CE]  <identifier>  expected	175	None	replace
317	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingClass(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingClass(forAnnotations);	  aughtExceptionHandler.handleMissingClass(getReferenceName());    	non-compiled	[CE]  <identifier>  expected	175	None	replace
318	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(prettyPrint);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingClass(prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingClass(prettyPrint);	  aughtExceptionHandler.handleMissingClass(getReferenceName());    	non-compiled	[CE]  <identifier>  expected	175	None	replace
319	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getPrettyPrint();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getNativeType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
320	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
321	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrint(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrint(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrint(forAnnotations);	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
322	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  getPrettyPrint()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  getPrettyPrint()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  getPrettyPrint()  :  null;	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
323	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrint()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrint()  +  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrint()  +  1;	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
324	[BUG]  [BUGGY]  prettyPrint  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getImplicitPrototypeFallback();	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
325	[BUG]  [BUGGY]  prettyPrint  =  inferred?  getPrettyPrint()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  inferred?  getPrettyPrint()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  inferred?  getPrettyPrint()  :  null;	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
326	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrint().toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrint().toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrint().toString();	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
327	[BUG]  [BUGGY]  Annotations  inferred  =  prettyPrint;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  prettyPrint;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  prettyPrint;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
328	[BUG]  [BUGGY]  Annotations  inferred  =  this.forAnnotations;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  this.forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  this.forAnnotations;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
329	[BUG]  [BUGGY]  Annotations  inferred  =  true;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  true;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
330	[BUG]  [BUGGY]  Annotations  inferred  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  false;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
331	[BUG]  [BUGGY]  Annotations  inferred  =!forAnnotations;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =!forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =!forAnnotations;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
332	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations.size()  >  0;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations.size()  >  0;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations.size()  >  0;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
333	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations  ||  prettyPrint;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations  ||  prettyPrint;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations  ||  prettyPrint;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
334	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrinter(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter(forAnnotations);	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
335	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter().toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrinter().toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter().toString();	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
336	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrinter()  +  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter()  +  1;	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
337	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter()  &&  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrinter()  &&  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter()  &&  forAnnotations;	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
338	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrinter(),  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter(),  forAnnotations);	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
339	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
340	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
341	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
342	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
343	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
344	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
345	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  forAnnotations;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
346	[BUG]  [BUGGY]  Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback.getNativeType()  :  null;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
347	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototype.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototype.getNativeType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototype.getNativeType()  :  null;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
348	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  this;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  this;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
349	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
350	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  implicitPrototypeFallback,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  implicitPrototypeFallback,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  implicitPrototypeFallback,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
351	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  this.forAnnotations,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  this.forAnnotations,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  this.forAnnotations,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
352	[BUG]  [BUGGY]  System.arraycopy(sb,  implicitPrototypeFallback,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(sb,  implicitPrototypeFallback,  propertyNames,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(sb,  implicitPrototypeFallback,  propertyNames,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
353	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
354	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  this.forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  this.forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  this.forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
356	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  properties);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  properties);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  properties);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
357	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  forAnnotations,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  forAnnotations,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  forAnnotations,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
358	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTS);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTS);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTS);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
359	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  FORANNotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  FORANNotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  FORANNotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
360	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
361	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
362	[BUG]  [BUGGY]  System.arraycopy(forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
363	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  FORANNotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  FORANNotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  FORANNotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
364	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  inferred;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  inferred;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	126	None	replace
365	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  this;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  this;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	126	None	replace
366	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.toString();	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
367	[BUG]  [BUGGY]  return  toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  return  toStringHelper(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	return  toStringHelper(forAnnotations);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
368	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  return  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  return  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  return  implicitPrototypeFallback.toString();	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
369	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.equals(propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.equals(propertyName);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.equals(propertyName);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
370	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.toStringHelper(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.toStringHelper(implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  return  implicitPrototypeFallback.toStringHelper(implicitPrototypeFallback);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
371	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
372	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
373	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
374	[BUG]  [BUGGY]  prettyPrint  = "not  implemented:  {  0  }   "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "not  implemented:  {  0  }   "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "not  implemented:  {  0  }   "  +  forAnnotations;	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
375	[BUG]  [BUGGY]  prettyPrint  = "Not  implemented:  {  0  }   ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Not  implemented:  {  0  }   ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Not  implemented:  {  0  }   ";	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
376	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }  forAnnotations ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }  forAnnotations ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  {  0  }  forAnnotations ";	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
377	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }  forAnnotations; ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }  forAnnotations; ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  {  0  }  forAnnotations; ";	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
378	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
379	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
380	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
382	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRET  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRET  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRET	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
383	[BUG]  [BUGGY]  prettyPrint  =' "'  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =' "'  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =' "'  +  forAnnotations;	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
384	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.getName();	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
385	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
386	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.append(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.append(implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  ' "'  :  implicitPrototypeFallback.append(implicitPrototypeFallback);	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
387	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?  ' "'  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?  ' "'  :  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?  ' "'  :  implicitPrototypeFallback.getName();	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
388	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  this;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  this;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
389	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getImplicitPrototype()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
390	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  defaultPrototype;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  defaultPrototype;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  defaultPrototype;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
391	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  new  HashSet  <  String>();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  new  HashSet  <  String>();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  new  HashSet  <  String>();	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
392	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	7	None	replace
393	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	7	None	replace
394	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	7	None	replace
395	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations.getPrettyPrint();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
396	[BUG]  [BUGGY]  prettyPrint  = "Native  type: "  +  forAnnotations.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: "  +  forAnnotations.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: "  +  forAnnotations.getPrettyPrint();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
397	[BUG]  [BUGGY]  prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
398	[BUG]  [BUGGY]  prettyPrint  &=  forAnnotations;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  forAnnotations;	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
399	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
400	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback;	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
401	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
402	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  inferred;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  inferred;	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
403	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototypeName();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
404	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
405	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototypeName();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
406	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototypeName()  + ") ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototypeName()  + ") ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototypeName()  + ") ";	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
407	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  implicitPrototypeFallback;	  prettyPrint    =   "Native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
408	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations.toString();	  prettyPrint    =   "Native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
409	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  prettyPrint;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  prettyPrint;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  prettyPrint;	  prettyPrint    =   "Native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
410	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  implicitPrototype;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  implicitPrototype;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  implicitPrototype;	  prettyPrint    =   "Native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
411	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented  for "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented  for "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented  for "  +  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
412	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented  with  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented  with  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented  with  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
413	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented. "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented. "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented. "  +  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
414	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
415	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  forAnnotations  not  implemented "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  forAnnotations  not  implemented "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  forAnnotations  not  implemented "  +  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
416	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  implicitPrototypeFallback;	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
417	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  forAnnotations.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type "  +  forAnnotations.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  forAnnotations.toString();	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
418	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  + ": "  +  inferred;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  + ": "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations  + ": "  +  inferred;	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
419	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	156	None	replace
420	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	156	None	replace
421	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	156	None	replace
422	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	156	None	replace
423	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
424	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  forAnnotations,  localCount);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  forAnnotations,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  forAnnotations,  localCount);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
425	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback!=    null)?       "null   "    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
426	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback!=    null)?       "null   "    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
427	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getNativeType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.getNativeType();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
428	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
429	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  inferred.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  inferred.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  inferred.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
430	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  inferred.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  inferred.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  inferred.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
431	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.getPrettyPrint();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
432	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
433	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  true;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
434	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
435	[BUG]  [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  implicitPrototypeFallback)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
436	[BUG]  [BUGGY]  patterns  ||  inferred)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  patterns  ||  inferred)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	patterns  ||  inferred)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
437	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  prettyPrint  =  true;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
438	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	10	None	replace
439	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	10	None	replace
440	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	10	None	replace
441	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototype.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototype.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototype.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
442	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
443	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
444	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
445	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
446	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName()  + ": "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getReferenceName()  + ": "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName()  + ": "  +  forAnnotations;	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
447	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName()  + ", "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getReferenceName()  + ", "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName()  + ", "  +  forAnnotations;	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
448	[BUG]  [BUGGY]  String  propertyName  =  getPrettyPrint();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPrettyPrint();	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
449	[BUG]  [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
450	[BUG]  [BUGGY]  prettyPrint  =  'n'  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  +  forAnnotations;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
451	[BUG]  [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  ||  forAnnotations;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
452	[BUG]  [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
453	[BUG]  [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
454	[BUG]  [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
455	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
456	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
457	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
458	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	List  <  String>  propertyNames  =  Sets.newArrayList();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
459	[BUG]  [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	HashSet  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
460	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceURI()  :  null;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceURI()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceURI()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
461	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  this;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  this;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
462	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getInstance()  :  null;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getInstance()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getInstance()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
463	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  forAnnotations.getInstance()  :  null;  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  forAnnotations.getInstance()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  forAnnotations.getInstance()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
464	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
465	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  implicitPrototypeFallback;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
466	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  null;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
467	[BUG]  [BUGGY]  prettyPrint  =!forAnnotations?  this.implicitPrototypeFallback  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =!forAnnotations?  this.implicitPrototypeFallback  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =!forAnnotations?  this.implicitPrototypeFallback  :  null;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
468	[BUG]  [BUGGY]  prettyPrint  =!forAnnotations?  this.implicitPrototypeFallback  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =!forAnnotations?  this.implicitPrototypeFallback  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =!forAnnotations?  this.implicitPrototypeFallback  :  forAnnotations;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
469	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.restrictByNotNullOrUndefined();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback.restrictByNotNullOrUndefined();	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
470	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
471	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  i,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
472	[BUG]  [BUGGY]  System.arraycopy(i,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(i,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(i,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
473	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  i);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  i);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  i);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
474	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  i);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  i);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  i);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
475	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  i);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  i);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  i);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
476	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
477	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback  :  null;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback    :    null;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
478	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  forAnnotations;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback    :    null;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
479	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  interfaceType;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  interfaceType;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback    :    null;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
480	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  prettyPrint;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  prettyPrint;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  prettyPrint;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback    :    null;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
481	[BUG]  [BUGGY]  Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback  :  null;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback    :    null;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
482	[BUG]  [BUGGY]  prettyPrint  &=  FOR_NOT_IMPLEMENTS;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  FOR_NOT_IMPLEMENTS;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  FOR_NOT_IMPLEMENTS;	  prettyPrint    |=    FOR_NOT_IMPLEMENTS;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
483	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTS  &&  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTS  &&  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTS  &&  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTS;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
484	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTS  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTS  ||  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTS  ||  forAnnotations;	  prettyPrint    |=    FOR_NOT_IMPLEMENTS;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
485	[BUG]  [BUGGY]  prettyPrint  /=  FOR_NOT_IMPLEMENTS;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  /=  FOR_NOT_IMPLEMENTS;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  /=  FOR_NOT_IMPLEMENTS;	  prettyPrint    |=    FOR_NOT_IMPLEMENTS;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
486	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getNativeType();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	122	None	replace
487	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
488	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
489	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
490	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback!=  null)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
491	[BUG]  [BUGGY]  if(forAnnotations  ||  prettyPrint)  {  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  prettyPrint)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  prettyPrint)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
492	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
493	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototype.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototype.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototype.getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
494	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototypeFallback();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
495	[BUG]  [BUGGY]  Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  prettyPrint?  implicitPrototypeFallback.getNativeObjectType()  :  null;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
496	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localeCount);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
497	[BUG]  [BUGGY]  System.arraycopy(localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localeCount);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
498	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localeCount);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
499	[BUG]  [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
500	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
501	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
502	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
503	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
504	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
505	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
506	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(inferred);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(prettyPrint);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
507	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(required);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(required);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(required);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(prettyPrint);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
508	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  forAnnotations  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
509	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
510	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  i,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
511	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  forAnnotations  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
512	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  localCount++,  forAnnotations  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  localCount++,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PRO,  localCount++,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
513	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
514	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
515	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
516	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
517	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
518	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
519	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
520	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
521	[BUG]  [BUGGY]  prettyPrint  =   "nativeType: ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "nativeType: ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "nativeType: ";	  prettyPrint    =       "nativeType   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
522	[BUG]  [BUGGY]  prettyPrint  =   "NativeType ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "NativeType ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "NativeType ";	  prettyPrint    =       "nativeType   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
523	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType().toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType().toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType().toString();	  prettyPrint    =       "native    type   "    +    getNativeType();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
524	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType();	  prettyPrint    =       "native    type   "    +    getNativeType();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
525	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType();	  prettyPrint    =       "native    type   "    +    getNativeType();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
526	[BUG]  [BUGGY]  prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: "  +  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
527	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getReferenceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getReferenceName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getReferenceName();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
528	[BUG]  [BUGGY]  APPLICATIONS  ||  forAnnotations  ||  inferred.contains(propertyNames))  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  forAnnotations  ||  inferred.contains(propertyNames))  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  forAnnotations  ||  inferred.contains(propertyNames))  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
529	[BUG]  [BUGGY]  APPLICATIONS  ||  forAnnotations  ||!inferred.contains(propertyNames))  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  forAnnotations  ||!inferred.contains(propertyNames))  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  forAnnotations  ||!inferred.contains(propertyNames))  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
530	[BUG]  [BUGGY]  APPLICATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
531	[BUG]  [BUGGY]  APPLICATIONS  ||  forAnnotations  ||  inferred.contains(implicitPrototypeFallback))  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  forAnnotations  ||  inferred.contains(implicitPrototypeFallback))  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  forAnnotations  ||  inferred.contains(implicitPrototypeFallback))  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
532	[BUG]  [BUGGY]  APPLICATIONS  ||  forAnnotations  ||!inferred.contains(propertyName))  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  forAnnotations  ||!inferred.contains(propertyName))  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  forAnnotations  ||!inferred.contains(propertyName))  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
533	[BUG]  [BUGGY]  APPLICATIONS  ||  forAnnotations  ||  inferred.contains(propertyName))  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  forAnnotations  ||  inferred.contains(propertyName))  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  forAnnotations  ||  inferred.contains(propertyName))  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
534	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getNativeType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  forAnnotations.getNativeType();	  prettyPrint    =       "native    type   "    +    forAnnotations.getNativeType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
535	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
536	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
537	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
538	[BUG]  [BUGGY]  prettyPrint  |=  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  true;	  prettyPrint    |=    false;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
539	[BUG]  [BUGGY]  prettyPrint  &=  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  &=  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  &=  false;	  prettyPrint    |=    false;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
540	[BUG]  [BUGGY]  prettyPrint  |=  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  null;	  prettyPrint    |=    false;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
541	[BUG]  [BUGGY]  PrettyPrint  =  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
542	[BUG]  [BUGGY]  PrettyPrint  =  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  null;	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
543	[BUG]  [BUGGY]  PrettyPrint  |=  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  |=  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  |=  false;	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
544	[BUG]  [BUGGY]  PrettyPrint  = " ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  = " ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  = " ";	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
545	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototype.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototype.getNativeType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototype.getNativeType()  :  null;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
546	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  PREFIX;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  PREFIX;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  PREFIX;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
547	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE,  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE,  forAnnotations);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
548	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(UNKNOWN_TYPE);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType(UNKNOWN_TYPE);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
549	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(UNKNOWN_TYPE);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType(UNKNOWN_TYPE);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
550	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(UNKNOWN_TYPE,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(UNKNOWN_TYPE,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType(UNKNOWN_TYPE,  forAnnotations);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
551	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(NO_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(NO_TYPE);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(NO_TYPE);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
552	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  0);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
553	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  1);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
554	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  3);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  3);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
555	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  4);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  4);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
556	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.forAnnotations,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.forAnnotations,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  this.forAnnotations,  0);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
557	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
558	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
559	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype).getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype).getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
560	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	9	None	replace
561	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	9	None	replace
562	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implictPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	9	None	replace
563	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	9	None	replace
564	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	9	None	replace
565	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	8	None	replace
566	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	8	None	replace
567	[BUG]  [BUGGY]  sb.append( ",n ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",n ").append(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",n ").append(forAnnotations);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
568	[BUG]  [BUGGY]  sb.append( ",   ").append(prettyPrint);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",   ").append(prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",   ").append(prettyPrint);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
569	[BUG]  [BUGGY]  sb.append( ",' ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",' ").append(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",' ").append(forAnnotations);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
570	[BUG]  [BUGGY]  sb.append( ",   ").append(propertyName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",   ").append(propertyName);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",   ").append(propertyName);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
571	[BUG]  [BUGGY]  sb.append(',').append(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append(',').append(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append(',').append(forAnnotations);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
572	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getPadding();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getPadding();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getPadding();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getPadding();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
573	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  this.forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  this.forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  this.forAnnotations;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
574	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  prettyPrint;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  prettyPrint;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  prettyPrint;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
575	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  true;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
576	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.values();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.values();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.values();	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
577	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.iterator().next();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.iterator().next();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.iterator().next();	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
578	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.size();	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
579	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  false;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  false;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
580	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getNativeType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
581	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  PREFIX;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  PREFIX;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  PREFIX;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
582	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
583	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
584	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
585	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
586	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
587	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
588	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(prettyPrint);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(prettyPrint);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
589	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  forAnnotations.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  forAnnotations.getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    forAnnotations.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
590	[BUG]  [BUGGY]  prettyPrint  = "Native  type   "  +  forAnnotations.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type   "  +  forAnnotations.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type   "  +  forAnnotations.getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    forAnnotations.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
591	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  ||  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  ||  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  ||  implicitPrototypeFallback;	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
592	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
593	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
594	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
595	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  inferred;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  inferred;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
596	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.instance  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.instance  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.instance  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
597	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  this;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  this;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
598	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.instance  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.instance  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.instance  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
599	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  new  ObjectType[]  {  }  ;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  new  ObjectType[]  {  }  ;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  new  ObjectType[]  {  }  ;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
600	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
601	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
602	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(prettyPrint)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
603	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
604	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototype.equals(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
605	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
606	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
607	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
608	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
609	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
610	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  implicitPrototypeFallback,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(sb,  0,  implicitPrototypeFallback,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(sb,  0,  implicitPrototypeFallback,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
611	[BUG]  [BUGGY]  System.arraycopy(this.implicitPrototypeFallback,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(this.implicitPrototypeFallback,  0,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(this.implicitPrototypeFallback,  0,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
612	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  inferred);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
613	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
614	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
615	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
616	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  1,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
617	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
618	[BUG]  [BUGGY]  prettyPrint  = "Native  type: ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type: ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type: ";	  prettyPrint    =       "Native    type   ";    	non-compiled	[CE]  <identifier>  expected	24	None	replace
619	[BUG]  [BUGGY]  prettyPrint  =   "Native  type( "  +  forAnnotations  + ") ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type( "  +  forAnnotations  + ") ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type( "  +  forAnnotations  + ") ";	  prettyPrint    =       "Native    type   ";    	non-compiled	[CE]  <identifier>  expected	24	None	replace
620	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getNativeObjectType()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getNativeObjectType()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getNativeObjectType()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
621	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
622	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getReferenceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getReferenceName();	  prettyPrint    =       "native    type   "    +    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
623	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getReferenceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getReferenceName();	  prettyPrint    =       "native    type   "    +    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
624	[BUG]  [BUGGY]  prettyPrint  = "Native  type   "  +  getReferenceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type   "  +  getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type   "  +  getReferenceName();	  prettyPrint    =       "native    type   "    +    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
625	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(propertyName,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(propertyName,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(propertyName,  forAnnotations);	  aughtExceptionHandler.handleMissingName(propertyName);    	non-compiled	[CE]  <identifier>  expected	172	None	replace
626	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(name);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(name);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(name);	  aughtExceptionHandler.handleMissingName(propertyName);    	non-compiled	[CE]  <identifier>  expected	172	None	replace
627	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(className);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(className);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(className);	  aughtExceptionHandler.handleMissingName(propertyName);    	non-compiled	[CE]  <identifier>  expected	172	None	replace
628	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	157	None	replace
629	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	157	None	replace
630	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	157	None	replace
631	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	157	None	replace
632	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
633	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
634	[BUG]  [BUGGY]  prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type   "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
635	[BUG]  [BUGGY]  sb.append( ",   ").append(forAnnotations).append( ",n ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",   ").append(forAnnotations).append( ",n ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",   ").append(forAnnotations).append( ",n ");	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
636	[BUG]  [BUGGY]  sb.append( ",n ").append(forAnnotations).append( "n, ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",n ").append(forAnnotations).append( "n, ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",n ").append(forAnnotations).append( "n, ");	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
637	[BUG]  [BUGGY]  sb.append( ",n ").append(forAnnotations).append( "n ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",n ").append(forAnnotations).append( "n ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",n ").append(forAnnotations).append( "n ");	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
638	[BUG]  [BUGGY]  sb.append( ",n ").append(forAnnotations).append( ",n ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",n ").append(forAnnotations).append( ",n ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",n ").append(forAnnotations).append( ",n ");	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
639	[BUG]  [BUGGY]  sb.append( ",   ").append(forAnnotations).append( ",' ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",   ").append(forAnnotations).append( ",' ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",   ").append(forAnnotations).append( ",' ");	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
640	[BUG]  [BUGGY]  sb.append( ",   ").append(forAnnotations).append( ", ",  inferred);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",   ").append(forAnnotations).append( ", ",  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",   ").append(forAnnotations).append( ", ",  inferred);	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
641	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  null  :  forAnnotations;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  null  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  null  :  forAnnotations;	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
642	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  null  :  forAnnotations.iterator().next();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  null  :  forAnnotations.iterator().next();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  null  :  forAnnotations.iterator().next();	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
643	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  null  :  forAnnotations.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  null  :  forAnnotations.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  null  :  forAnnotations.toString();	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
644	[BUG]  [BUGGY]  prettyPrint  =  sb.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  sb.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  sb.toString();	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
645	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
646	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getInferredPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getInferredPrototype()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getInferredPrototype()  :  null;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
647	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  this;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  this;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
648	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitType()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitType()  :  null;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
649	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototype.getImplicitPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototype.getImplicitPrototype()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototype.getImplicitPrototype()  :  null;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
650	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  new  HashSet  <  String>();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  new  HashSet  <  String>();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  new  HashSet  <  String>();	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
651	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  prettyPrint);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  prettyPrint);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    prettyPrint);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
652	[BUG]  [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    properties);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
653	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    properties);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
654	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  forAnnotations.getImplicitPrototype();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
655	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
656	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototype().getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototype().getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototype().getImplicitPrototype();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
657	[BUG]  [BUGGY]  prettyPrint  = "Native  type:  {  0  }   ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type:  {  0  }   ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type:  {  0  }   ";	  prettyPrint    =       "native    type:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
658	[BUG]  [BUGGY]  prettyPrint  = "native  type:  {  0  }   "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type:  {  0  }   "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type:  {  0  }   "  +  forAnnotations;	  prettyPrint    =       "native    type:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
659	[BUG]  [BUGGY]  prettyPrint  = "[native  type:  {  0  }   ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[native  type:  {  0  }   ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[native  type:  {  0  }   ";	  prettyPrint    =       "native    type:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
660	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newTreeSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newTreeSet(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newTreeSet(forAnnotations);	  String    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
661	[BUG]  [BUGGY]  if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
662	[BUG]  [BUGGY]  if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
663	[BUG]  [BUGGY]  if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(prettyPrint)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
664	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
665	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
666	[BUG]  [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
667	[BUG]  [BUGGY]  Annotations  <  forAnnotations.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  forAnnotations.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  forAnnotations.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
668	[BUG]  [BUGGY]  Annotations  <  ObjectType.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
669	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size(),  forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  implicitPrototypeFallback.size(),  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size(),  forAnn	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
670	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getReferenceName()  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getReferenceName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getReferenceName()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
671	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getReferenceName()  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getReferenceName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getReferenceName()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
672	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getReferenceName()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getReferenceName()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getReferenceName()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
673	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitReferenceName()  :  null;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitReferenceName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitReferenceName()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
674	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	7	None	replace
675	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  nativeType;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  nativeType;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
676	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  interfaceType;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  interfaceType;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
677	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  defaultPrototypeFallback;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  defaultPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  defaultPrototypeFallback;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
678	[BUG]  [BUGGY]  if(forAnnotations  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  nativeType)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  nativeType)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
679	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
680	[BUG]  [BUGGY]  if(!forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!forAnnotations  &&  inferred)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!forAnnotations  &&  inferred)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
681	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
682	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
683	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
684	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
685	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
686	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
687	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
688	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
689	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
690	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  inferred;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  inferred;	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
691	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  +  implicitPrototypeFallback;	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
692	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  +  inferred;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  +  inferred;	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
693	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
694	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  interfaceType;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  interfaceType;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
695	[BUG]  [BUGGY]  Annotations  nativeType  =  implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  implicitPrototypeFallback.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  implicitPrototypeFallback.getNativeType();	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
696	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
697	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
698	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  forAnnotations;	  prettyPrint    =       "Native    type   ";    	non-compiled	[CE]  <identifier>  expected	24	None	replace
699	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getImplicitPrototypeFallback();	  prettyPrint    =       "Native    type   ";    	non-compiled	[CE]  <identifier>  expected	24	None	replace
700	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
701	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getPadding();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getPadding();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getPadding();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
702	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
703	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  FOR_NOT_IMPLEMENTS;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  FOR_NOT_IMPLEMENTS;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  FOR_NOT_IMPLEMENTS;	  prettyPrint    |=    FOR_NOT_IMPLEMENTS;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
704	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  ==  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  ==  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  ==  null;	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
705	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  ==  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  ==  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  ==  null;	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
706	[BUG]  [BUGGY]  prettyPrint  =  '['  +  getPrettyPrint());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  +  getPrettyPrint());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  +  getPrettyPrint());	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
707	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)!=  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)!=  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)!=  null;	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
708	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(currentPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(currentPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(currentPrototypeFallback)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
709	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  n "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  n "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  n "  +  forAnnotations;	  prettyPrint    =       "not    implemented:   ";    	non-compiled	[CE]  <identifier>  expected	3	None	replace
710	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(getImplicitPrototype())||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
711	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
712	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
713	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  inferred.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  inferred.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototype())||  inferred.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
714	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredType());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredType());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredType());	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getInferredType();    	non-compiled	[CE]  <identifier>  expected	178	None	replace
715	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInferredType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInferredType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInferredType();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getInferredType();    	non-compiled	[CE]  <identifier>  expected	178	None	replace
716	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getInferredType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getInferredType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.getInferredType();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getInferredType();    	non-compiled	[CE]  <identifier>  expected	178	None	replace
717	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.getName();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
718	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
719	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
720	[BUG]  [BUGGY]  prettyPrint  = "[null] "  +  System.identityHashCode(forAnnotations)+ "] ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[null] "  +  System.identityHashCode(forAnnotations)+ "] ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[null] "  +  System.identityHashCode(forAnnotations)+ "] ";	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
721	[BUG]  [BUGGY]  prettyPrint  = "[null] "  +  System.identityHashCode(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "[null] "  +  System.identityHashCode(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "[null] "  +  System.identityHashCode(forAnnotations);	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
722	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented.  Please  try  again. ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented.  Please  try  again. ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented.  Please  try  again. ";	  prettyPrint    =       "not    implemented.   ";    	non-compiled	[CE]  <identifier>  expected	4	None	replace
723	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  interfaceType;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  interfaceType;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
724	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getInstanceType()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getInstanceType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getInstanceType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
725	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getInstanceType()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getInstanceType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getInstanceType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
726	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  this;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  this;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
727	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstanceType()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstanceType()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstanceType()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
728	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback())||  inferred.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback())||  inferred.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(getImplicitPrototypeFallback())||  inferred.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
729	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
730	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(propertyName)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
731	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getImplicitPrototypeFallback();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
732	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getNativePrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getNativePrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getNativePrototype();	  prettyPrint    =       "native    type   "    +    forAnnotations.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	179	None	replace
733	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(forAnnotations);	  prettyPrint    =       "native    type   "    +    getNativeType();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
734	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTS);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
735	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
736	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype()));  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype()));	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
737	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitReferenceName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitReferenceName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitReferenceName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
738	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(nativeType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(nativeType);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
739	[BUG]  [BUGGY]  prettyPrint  +=  FOR_NOT_IMPLEMENTED;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  +=  FOR_NOT_IMPLEMENTED;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  +=  FOR_NOT_IMPLEMENTED;	  prettyPrint    |=    FOR_NOT_IMPLEMENTED;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
740	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPadding());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPadding());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPadding());	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getPadding();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
741	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getPadding();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getPadding();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getPadding();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getPadding();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
742	[BUG]  [BUGGY]  System.arraycopy(properties,  1,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  1,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  1,  implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
743	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
744	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
745	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getReferenceName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getReferenceName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getReferenceName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
746	[BUG]  [BUGGY]  Annotations  <  propertyNames.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  propertyNames.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  propertyNames.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
747	[BUG]  [BUGGY]  Annotations  <  typeFallback.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  typeFallback.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  typeFallback.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
748	[BUG]  [BUGGY]  Annotations  <  nativeType.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  nativeType.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  nativeType.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
749	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newStringSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newStringSet(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newStringSet(forAnnotations);	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
750	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName()  + "properties ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName()  + "properties ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName()  + "properties ";	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
751	[BUG]  [BUGGY]  String  propertyName  =  getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getImplicitPrototypeName();	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
752	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName(prop);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName(prop);	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
753	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName()  + "/.* ";  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getPropertyName()  + "/.* ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName()  + "/.* ";	  String    propertyName    =    getPropertyName();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
754	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
755	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  -1,  inferred);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  -1,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  -1,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
756	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  inferred);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
757	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getInstance()  :  null;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getInstance()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getInstance()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
758	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstance()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstance()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getInstance()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
759	[BUG]  [BUGGY]  Annotations  <  this.implicitPrototypeFallback.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  this.implicitPrototypeFallback.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  this.implicitPrototypeFallback.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
760	[BUG]  [BUGGY]  Annotations  <  nativeType.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  nativeType.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  nativeType.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
761	[BUG]  [BUGGY]  Annotations  <  ObjectType.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
762	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
763	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  prettyPrint,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  prettyPrint,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  prettyPrint,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    prettyPrint);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
764	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  prettyPrint);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  prettyPrint);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    prettyPrint);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
765	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
766	[BUG]  [BUGGY]  System.arraycopy(properties,  0,  this.properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  0,  this.properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  0,  this.properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
767	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  this.implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  this.implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  this.implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
768	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  MAX_PRETTY_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
769	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrintForAnnotations();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrintForAnnotations();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrintForAnnotations();	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
770	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrintInferred();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrintInferred();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrintInferred();	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
771	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrint()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrint()  -  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrint()  -  1;	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
772	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
773	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  0,  implicitPrototypeFallback.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  0,  implicitPrototypeFallback.length);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  0,  implicitPrototypeFallback.length);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
774	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.hasImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.hasImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.hasImplicitPrototype();	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
775	[BUG]  [BUGGY]  prettyPrint  = "implicitable   "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "implicitable   "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "implicitable   "  +  forAnnotations;	  prettyPrint    =       "implicitable   ";    	non-compiled	[CE]  <identifier>  expected	158	None	replace
776	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(prettyPrint);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(prettyPrint);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(prettyPrint);	  aughtExceptionHandler.handleMissingName(propertyName);    	non-compiled	[CE]  <identifier>  expected	172	None	replace
777	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(prop,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(prop,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(prop,  forAnnotations);	  aughtExceptionHandler.handleMissingName(propertyName);    	non-compiled	[CE]  <identifier>  expected	172	None	replace
778	[BUG]  [BUGGY]  PrettyPrint  =  new  StringBuilder().append( "null ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  new  StringBuilder().append( "null ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  new  StringBuilder().append( "null ");	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
779	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null. ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( "null. ");	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
780	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  implicitPrototypeFallback;	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
781	[BUG]  [BUGGY]  prettyPrint  =   "immutable[ "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable[ "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable[ "  +  forAnnotations;	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
782	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  inferred;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  inferred;	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
783	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  forAnnotations  +  implicitPrototypeFallback;	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
784	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
785	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
786	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
787	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
788	[BUG]  [BUGGY]  if(forAnnotations  ||  nativeType)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  nativeType)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  nativeType)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
789	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  +  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  +  1;	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
790	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newLinkedHashSet();	  String    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
791	[BUG]  [BUGGY]  prettyPrint  =  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
792	[BUG]  [BUGGY]  prettyPrint  +=  FOR_NOT_IMPLEMENTAL;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  +=  FOR_NOT_IMPLEMENTAL;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  +=  FOR_NOT_IMPLEMENTAL;	  prettyPrint    |=    FOR_NOT_IMPLEMENTAL;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
793	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
794	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName().toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getReferenceName().toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName().toString();	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
795	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName()  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getReferenceName()  +  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName()  +  1;	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
796	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  localCount);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  localCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
797	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getImplicitPrototype()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
798	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  interfaceType;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  interfaceType;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
799	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getImplicitPrototype()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getImplicitPrototype()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getImplicitPrototype()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
800	[BUG]  [BUGGY]  Annotations  <  this.implicitPrototypeFallback.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  this.implicitPrototypeFallback.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  this.implicitPrototypeFallback.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
801	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
802	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
803	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
804	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
805	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  interfaceType;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  interfaceType;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
806	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getNativeType()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getNativeType()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getNativeType()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
807	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback.getNativeType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
808	[BUG]  [BUGGY]  if(prettyPrint)  {  prettyPrint  =  ' "';  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(prettyPrint)  {  prettyPrint  =  ' "';  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(prettyPrint)  {  prettyPrint  =  ' "';  }	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
809	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashMap();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newHashMap();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newHashMap();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
810	[BUG]  [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred  ||  forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
811	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
812	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
813	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
814	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
815	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
816	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implictPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implictPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implictPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
817	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
818	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
819	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter()  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrinter()  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter()  +  forAnnotations;	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
820	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
821	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
822	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPER,  localCount++,  forAnnotations  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPER,  localCount++,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  MAX_PRETTY_PRINTED_PROPER,  localCount++,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
823	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
824	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototype();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
825	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
826	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
827	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  nativeType.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  nativeType.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  nativeType.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
828	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getNativePrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getNativePrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.getNativePrototype();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
829	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.toString();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
830	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  nativeType;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  nativeType;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
831	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  this.inferred;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  this.inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  this.inferred;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
832	[BUG]  [BUGGY]  return  toStringHelper(nativeType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  return  toStringHelper(nativeType,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	return  toStringHelper(nativeType,  forAnnotations);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
833	[BUG]  [BUGGY]  sb.append('n');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append('n');  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append('n');	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
834	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  nativeType  + "  inferred;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  nativeType  + "  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  nativeType  + "  inferred;	  prettyPrint    =       "native    type    forAnnotations:   "    +    nativeType;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
835	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented "  +  forAnnotations  +  implicitPrototypeFallback;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
836	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented  by  default "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented  by  default "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented  by  default "  +  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
837	[BUG]  [BUGGY]  prettyPrint  =  true  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  true  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  true  +  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
838	[BUG]  [BUGGY]  forAnnotations  =  Sets.newStringSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newStringSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newStringSet();	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
839	[BUG]  [BUGGY]  prettyPrint  =(nativeType  ==  null  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(nativeType  ==  null  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(nativeType  ==  null  ||  forAnnotations  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
840	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
841	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototypeName();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
842	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  this.implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  this.implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  this.implicitPrototypeFallback;	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
843	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  isImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  isImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  isImplicitPrototypeFallback();	  prettyPrint    |=    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
844	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  forAnnotations;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
845	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
846	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(userFunction)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(userFunction)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(userFunction)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
847	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  [ "  +  implicitPrototypeFallback  + "] ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  [ "  +  implicitPrototypeFallback  + "] ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations:  [ "  +  implicitPrototypeFallback  + "] ";	  prettyPrint    =   "native    type    forAnnotations:   "    +    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
848	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
849	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  interfaceType;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  interfaceType;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	126	None	replace
850	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  this;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  this;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	126	None	replace
851	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  inferred;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  inferred;	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	126	None	replace
852	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
853	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
854	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  nativeType;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  nativeType;	  prettyPrint    =   "Native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
855	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype.getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype.getImplicitPrototype());	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
856	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototype.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototype.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototype.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
857	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototype.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototype.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  implicitPrototype.getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
858	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
859	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations  +  implicitPrototypeFallback;	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
860	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  nativeType;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  nativeType;	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
861	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred;	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
862	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  interfaceType;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  interfaceType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  interfaceType;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
863	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  nativeType;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  nativeType;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
864	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitReferenceName()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitReferenceName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitReferenceName()  :  null;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
865	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }   "  +  forAnnotations.size();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }   "  +  forAnnotations.size();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  {  0  }   "  +  forAnnotations.size();	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
866	[BUG]  [BUGGY]  prettyPrint  =   "nativeType  {  0  }   ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "nativeType  {  0  }   ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "nativeType  {  0  }   ";	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
867	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations  +  implicitPrototypeFallback;	  prettyPrint    =       "native    type:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
868	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
869	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
870	[BUG]  [BUGGY]  Annotations  inferred  =  nativeType;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  nativeType;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
871	[BUG]  [BUGGY]  Annotations  inferred  =  prettyPrint  &&  forAnnotations;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  prettyPrint  &&  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  prettyPrint  &&  forAnnotations;	  Annotations    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
872	[BUG]  [BUGGY]  prettyPrint  |=!forAnnotations;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=!forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=!forAnnotations;	  prettyPrint    |=    false;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
873	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototype.getNativeType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototype.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  implicitPrototype.getNativeType();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getNativeType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
874	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getPadding();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getPadding();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getPadding();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getNativeType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
875	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getReferenceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getReferenceName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getReferenceName();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
876	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  this.implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  this.implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  this.implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
877	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
878	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
879	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(interfaceType)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(interfaceType)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(interfaceType)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
880	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(current)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
881	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
882	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  localeCount);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  localeCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  localeCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localeCount);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
883	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    getName();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
884	[BUG]  [BUGGY]  prettyPrint  =!this.implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =!this.implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =!this.implicitPrototypeFallback;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
885	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
886	[BUG]  [BUGGY]  prettyPrint  = "  {  0  }   ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "  {  0  }   ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "  {  0  }   ";	  prettyPrint    =       "native    type:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
887	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
888	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeFallback().getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeFallback().getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getImplicitPrototypeFallback().getName();	  prettyPrint    =       "native    type   "    +    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
889	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
890	[BUG]  [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
891	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
892	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type "  +  getReferenceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "unknown  type "  +  getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type "  +  getReferenceName();	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
893	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type "  +  getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "unknown  type "  +  getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type "  +  getName();	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
894	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
895	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  0);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
896	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback.getNativeType();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	122	None	replace
897	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototype.getImplicitPrototypeName());	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
898	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototype.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototype.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototype.getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
899	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
900	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
901	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  inferred;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "null "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  inferred;	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
902	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  forAnnotations  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "null "  +  forAnnotations  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  forAnnotations  +  implicitPrototypeFallback;	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
903	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  prettyPrint;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "null "  +  prettyPrint;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  prettyPrint;	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
904	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
905	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
906	[BUG]  [BUGGY]  Annotations  <=  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <=  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <=  implicitPrototypeFallback.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
907	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
908	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
909	[BUG]  [BUGGY]  Annotations  <  nativeType.class)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  nativeType.class)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  nativeType.class)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
910	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  this;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  this;	  Annotations    nativeType    =    inferred?    implicitPrototypeFallback    :    null;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
911	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
912	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
913	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
914	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getNativeObjectType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getNativeObjectType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback!=  null)?  'n'  :  implicitPrototypeFallback.getNativeObjectType();	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
915	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getNativeObjectType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getNativeObjectType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  &&  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getNativeObjectType();	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
916	[BUG]  [BUGGY]  PrettyPrint  =  true;  }  else  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  }  else  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;  }  else  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  }	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
917	[BUG]  [BUGGY]  PrettyPrint  =  true;  }  else  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  }  else  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;  }  else  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  0,  forAnnotations);  }	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
918	[BUG]  [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()  ==  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()  ==  forAnnotations)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()  ==  forAnnotations)  {	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
919	[BUG]  [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()!=  null  &&  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()!=  null  &&  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()!=  null  &&	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
920	[BUG]  [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()!=  null);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getImplicitPrototype()!=  null);	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
921	[BUG]  [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isImplicitPrototype())  {  return  implicitPrototypeFallback.getImplicitPrototype()  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isImplicitPrototype())  {  return  implicitPrototypeFallback.getImplicitPrototype()  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  true;  }  else  {  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isImplicitPrototype())  {  return  implicitPrototypeFallback.getImplicitPrototype()	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
922	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    properties);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
923	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	157	None	replace
924	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	157	None	replace
925	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
926	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
927	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
928	[BUG]  [BUGGY]  prettyPrint  =   "nativeType( "  +  forAnnotations  + ") ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "nativeType( "  +  forAnnotations  + ") ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "nativeType( "  +  forAnnotations  + ") ";	  prettyPrint    =       "nativeType   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
929	[BUG]  [BUGGY]  prettyPrint  = "nativeType   "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "nativeType   "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "nativeType   "  +  forAnnotations;	  prettyPrint    =       "nativeType   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
930	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  nativeType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  nativeType);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
931	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  forAnnotations,  localCount);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  forAnnotations,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  forAnnotations,  localCount);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
932	[BUG]  [BUGGY]  System.arraycopy(localCount,  implicitPrototypeFallback,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(localCount,  implicitPrototypeFallback,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(localCount,  implicitPrototypeFallback,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
933	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
934	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.startsWith(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.startsWith(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.startsWith(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
935	[BUG]  [BUGGY]  safely())  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  safely())  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	safely())  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
936	[BUG]  [BUGGY]  safely()  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  safely()  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	safely()  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
937	[BUG]  [BUGGY]  safely())  {  prettyPrint  =  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  safely())  {  prettyPrint  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	safely())  {  prettyPrint  =  true;	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
938	[BUG]  [BUGGY]  safely())  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  safely())  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	safely())  {  prettyPrint  =  false;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
939	[BUG]  [BUGGY]  piePrint  =  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  piePrint  =  true;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	piePrint  =  true;	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
940	[BUG]  [BUGGY]  safely()  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  safely()  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	safely()  {  prettyPrint  =  false;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
941	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
942	[BUG]  [BUGGY]  System.arraycopy(properties,  0,  forAnnotations,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  0,  forAnnotations,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  0,  forAnnotations,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
943	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.implicitPrototypeFallback,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.implicitPrototypeFallback,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  this.implicitPrototypeFallback,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
944	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  Arrays.asList(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  Arrays.asList(forAnnotations));  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  Arrays.asList(forAnnotations));	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
945	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
946	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
947	[BUG]  [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
948	[BUG]  [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback!=  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback!=  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  implicitPrototypeFallback!=  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
949	[BUG]  [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
950	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  this.implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  this.implicitPrototypeFallback.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  this.implicitPrototypeFallback.getInferredPrototype();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
951	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getPadding();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getPadding();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getPadding();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
952	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  nativeType.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  nativeType.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  nativeType.getInferredPrototype();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
953	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  FORANNotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  FORANNotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  FORANNotations,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
954	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLongHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLongHashSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newLongHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
955	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  this.implicitPrototypeFallback.getInferredPrototype();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
956	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  %d "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  %d "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations:  %d "  +  forAnnotations;	  prettyPrint    =       "native    type    forAnnotations:    %s   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
957	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  %s "  +  nativeType;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  %s "  +  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations:  %s "  +  nativeType;	  prettyPrint    =       "native    type    forAnnotations:    %s   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
958	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
959	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  forAnnotations  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
960	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
961	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
962	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
963	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getName()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getName()  :  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  null?  implicitPrototypeFallback.getName()  :  forAnnotations;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	149	None	replace
964	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getName()  :  null;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  inferred?  implicitPrototypeFallback.getName()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	149	None	replace
965	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  i);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  i);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
966	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  i);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  i);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  i);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
967	[BUG]  [BUGGY]  sb.append( ",n ").append(forAnnotations).append( "n,n ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",n ").append(forAnnotations).append( "n,n ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",n ").append(forAnnotations).append( "n,n ");	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
968	[BUG]  [BUGGY]  sb.append( ",' ").append(forAnnotations).append( "',');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",' ").append(forAnnotations).append( "',');  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",' ").append(forAnnotations).append( "',');	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
969	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(this,  getReferenceName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingClass(this,  getReferenceName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingClass(this,  getReferenceName());	  aughtExceptionHandler.handleMissingClass(getReferenceName());    	non-compiled	[CE]  <identifier>  expected	175	None	replace
970	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
971	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getNativeType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
972	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  implicitPrototypeFallback?  implicitPrototypeFallback.getNativeObjectType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
973	[BUG]  [BUGGY]  sb.append( "  }   ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( "  }   ").append(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( "  }   ").append(forAnnotations);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
974	[BUG]  [BUGGY]  sb.append( "   ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( "   ").append(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( "   ").append(forAnnotations);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
975	[BUG]  [BUGGY]  sb.append( ",   ").append(inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ",   ").append(inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ",   ").append(inferred);	  sb.append(   ",   ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
976	[BUG]  [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  &&  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
977	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  implicitPrototypeFallback;	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
978	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  + "  inferred: "  +  nativeType;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations  + "  inferred: "  +  nativeType;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations  + "  inferred: "  +  nativeType;	  prettyPrint    =       "not    implemented:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
979	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  ||  prettyPrint)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  ||  prettyPrint)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  ||  prettyPrint)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
980	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback!=  null)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
981	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  ||  nativeType)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  ||  nativeType)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
982	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ==  null)  {	  if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	174	None	replace
983	[BUG]  [BUGGY]  readAnnotations();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  readAnnotations();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	readAnnotations();	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	94	None	replace
984	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  prop,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  prop,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  prop,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
985	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  null,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  null,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  null,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
986	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
987	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  forAnnotations,  inferred);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  forAnnotations,  inferred);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
988	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
989	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
990	[BUG]  [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(!inferred)  {  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
991	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(prop,  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(prop,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(prop,  propertyNames);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	12	None	replace
992	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
993	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATIONS  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATIONS  &&  implicitPrototypeFallback.equals(propertyNames)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
994	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(propertyNames);    	non-compiled	[CE]  <identifier>  expected	183	None	replace
995	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
996	[BUG]  [BUGGY]  prettyPrint  =   "[native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "[native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "[native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
997	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getRawClass()  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getRawClass()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getRawClass()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	149	None	replace
998	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  propertyNames.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  propertyNames.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  propertyNames.getImplicitPrototypeName();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
999	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTS,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
1000	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  getPrettyPrinter()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  getPrettyPrinter()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  getPrettyPrinter()  :  null;	  prettyPrint    =    getPrettyPrinter();    	non-compiled	[CE]  <identifier>  expected	177	None	replace
1001	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION  ||  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    FOR_ANNOTATION;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1002	[BUG]  [BUGGY]  if(forAnnotations)  {  aughtExceptionHandler.handleMissingName(propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  aughtExceptionHandler.handleMissingName(propertyName);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  aughtExceptionHandler.handleMissingName(propertyName);  }	  aughtExceptionHandler.handleMissingName(propertyName);    	non-compiled	[CE]  <identifier>  expected	172	None	replace
1003	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	151	None	replace
1004	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback!=  null?  null  :  implicitPrototypeFallback.getPrettyPrint());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback!=  null?  null  :  implicitPrototypeFallback.getPrettyPrint());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback!=  null?  null  :  implicitPrototypeFallback.getPrettyPrint());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getPrettyPrint());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1005	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getSimpleName()  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getSimpleName()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getSimpleName()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1006	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getReferenceName()  :  this;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getReferenceName()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getReferenceName()  :  this;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getReferenceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1007	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName().toLowerCase();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getReferenceName().toLowerCase();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName().toLowerCase();	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
1008	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName()  + "property ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyName  =  getReferenceName()  + "property ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName()  + "property ";	  String    propertyName    =    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
1009	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  inferred.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  inferred.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  inferred.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    inferred.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
1010	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this.forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this.forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this.forAnnotations);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(prettyPrint);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
1011	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations: "  +  nativeType  + "  inferred: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  forAnnotations: "  +  nativeType  + "  inferred: "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations: "  +  nativeType  + "  inferred: "  +  forAnnotations;	  prettyPrint    =       "native    type    forAnnotations:   "    +    nativeType;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1012	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  native;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  native;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  native;	  Annotations    inferred    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1013	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  defaultPrototypeFallback;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  defaultPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  defaultPrototypeFallback;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1014	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  inferred;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  this.implicitPrototypeFallback  :  inferred;	  prettyPrint    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1015	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE,  FOR_ANNOTATIONS);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE,  FOR_ANNOTATIONS);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE,  FOR_ANNOTATIONS);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
1016	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(UNKNOWN_TYPE);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType(UNKNOWN_TYPE);	  prettyPrint    =       "native    type   "    +    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
1017	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
1018	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	13	None	replace
1019	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  2,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  2,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  2,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1020	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getRawType()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getRawType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getRawType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
1021	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getObjectType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getObjectType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeObjectType()    :    null;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
1022	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getPrototype();	  prettyPrint    =       "native    type   "    +    getReferenceName();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
1023	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  interfaceType.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  interfaceType.getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  interfaceType.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	134	None	replace
1024	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1025	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  this.forAnnotations;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "null "  +  this.forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  this.forAnnotations;	  prettyPrint    =       "null   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1026	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getInstanceType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getInstanceType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getInstanceType();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getNativeType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
1027	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getReferenceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getReferenceName();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getNativeType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
1028	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredPrototypeName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getInferredPrototypeName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
1029	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
1030	[BUG]  [BUGGY]  prettyPrint  |=  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  0;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  0;	  prettyPrint    |=    false;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
1031	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
1032	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
1033	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
1034	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	143	None	replace
1035	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.properties,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.properties,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  this.properties,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1036	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  this.forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1037	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1038	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1039	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1040	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTE    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1041	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?       "null   "    :    implicitPrototypeFallback.getName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1042	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  ||  implicitPrototypeFallback  ==  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  ||  implicitPrototypeFallback  ==  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  ||  implicitPrototypeFallback  ==  null;	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1043	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  ||  implicitPrototypeFallback!=  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  ||  implicitPrototypeFallback!=  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  ||  implicitPrototypeFallback!=  null;	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1044	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  implicitPrototypeFallback  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  implicitPrototypeFallback  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  implicitPrototypeFallback  :  null;	  prettyPrint    =    null;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1045	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type "  +  System.identityHashCode(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "unknown  type "  +  System.identityHashCode(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type "  +  System.identityHashCode(forAnnotations);	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
1046	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type "  +  getClass().getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "unknown  type "  +  getClass().getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type "  +  getClass().getName();	  prettyPrint    =       "unknown    type   ";    	non-compiled	[CE]  <identifier>  expected	20	None	replace
1047	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  properties  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  properties  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  properties	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1048	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  inferred;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  inferred;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
1049	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  new  ObjectType[0];  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  new  ObjectType[0];  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  new  ObjectType[0];	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstance()    :    null;    	non-compiled	[CE]  <identifier>  expected	150	None	replace
1050	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  properties  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  properties  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER,  properties	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	11	None	replace
1051	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototype());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  getImplicitPrototypeFallback().getImplicitPrototype());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
1052	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallbackForAnnotations();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallbackForAnnotations();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallbackForAnnotations();	  ObjectType    implicitPrototypeFallback    =    getInferredPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
1053	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  this.properties,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  this.properties,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  this.properties,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    properties);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
1054	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newNumberSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newNumberSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newNumberSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
1055	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1056	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1057	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1058	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1059	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1060	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    inferred);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
1061	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  sb.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  sb.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  sb.getImplicitPrototypeName();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
1062	[BUG]  [BUGGY]  prettyPrint  =   "[null] "  +  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "[null] "  +  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "[null] "  +  forAnnotations);	  prettyPrint    =       "[null]   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
1063	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
1064	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	7	None	replace
1065	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet(properties);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newHashSet(properties);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newHashSet(properties);	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1066	[BUG]  [BUGGY]  forAnnotations  =  Sets.newNumberSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  forAnnotations  =  Sets.newNumberSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newNumberSet();	  forAnnotations    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1067	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    prettyPrint);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
1068	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1069	[BUG]  [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(properties,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1070	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback  ==  null?  implicitPrototypeFallback.toString()  : "native  type ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback  ==  null?  implicitPrototypeFallback.toString()  : "native  type ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback  ==  null?  implicitPrototypeFallback.toString()  : "native  type ";	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1071	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback  ==  null? "null "  :  implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback  ==  null? "null "  :  implicitPrototypeFallback.getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback  ==  null? "null "  :  implicitPrototypeFallback.getNativeType();	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1072	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback!=  null?  implicitPrototypeFallback.toString()  : "native  type ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback!=  null?  implicitPrototypeFallback.toString()  : "native  type ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations  &&  implicitPrototypeFallback!=  null?  implicitPrototypeFallback.toString()  : "native  type ";	  prettyPrint    =       "native    type   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1073	[BUG]  [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  implicitPrototypeFallback.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1074	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1075	[BUG]  [BUGGY]  Annotations  <  type>.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  type>.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  type>.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1076	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getClassName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getClassName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getClassName();	  prettyPrint    =       "native    type   "    +    getName();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
1077	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getClass();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getClass();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getClass();	  prettyPrint    =       "native    type   "    +    getName();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
1078	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  i,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1079	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1080	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(prop,  getReferenceName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  aughtExceptionHandler.handleMissingClass(prop,  getReferenceName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingClass(prop,  getReferenceName());	  aughtExceptionHandler.handleMissingClass(getReferenceName());    	non-compiled	[CE]  <identifier>  expected	175	None	replace
1081	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  createImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  ObjectType  implicitPrototypeFallback  =  createImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  createImplicitPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
1082	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
1083	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
1084	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
1085	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(nativeType)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
1086	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(intermediatePrototypeFallback)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(intermediatePrototypeFallback)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(intermediatePrototypeFallback)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(nativeType);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
1087	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations? "not  implemented. "  : "not  implemented. ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations? "not  implemented. "  : "not  implemented. ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations? "not  implemented. "  : "not  implemented. ";	  prettyPrint    =       "not    implemented.   ";    	non-compiled	[CE]  <identifier>  expected	4	None	replace
1088	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations? "not  implemented "  : "not  implemented. ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations? "not  implemented "  : "not  implemented. ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations? "not  implemented "  : "not  implemented. ";	  prettyPrint    =       "not    implemented.   ";    	non-compiled	[CE]  <identifier>  expected	4	None	replace
1089	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred  + ", ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred  + ", ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  inferred  + ", ";	  prettyPrint    =   "native    type    forAnnotations:   "    +    inferred;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
1090	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties.size()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties.size()  -  1);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties.size()  -  1);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    -    1);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
1091	[BUG]  [BUGGY]  System.arraycopy(localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localeCount);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1092	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localeCount);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localeCount);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localeCount);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localeCount);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1093	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
1094	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.startsWith(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.startsWith(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.startsWith(getImplicitPrototypeFallback())||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
1095	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  getReferenceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  getReferenceName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  getReferenceName();	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
1096	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  new  ObjectType(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  new  ObjectType(implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  new  ObjectType(implicitPrototypeFallback);	  Annotations    nativeType    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
1097	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    properties,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1098	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type  ' "  +  getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  getImplicitPrototype();	  prettyPrint    =       "native    type    '   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
1099	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  implicitPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  implicitPrototypeFallback);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
1100	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
1101	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }   "  +  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }   "  +  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  {  0  }   "  +  forAnnotations);	  prettyPrint    =       "not    implemented:    {    0    }       ";    	non-compiled	[CE]  <identifier>  expected	124	None	replace
1102	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  forAnnotations  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  +  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	105	None	replace
1103	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newTextSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newTextSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newTextSet();	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1104	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newBooleanSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  String  propertyNames  =  Sets.newBooleanSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newBooleanSet();	  String    propertyNames    =    Sets.newStringSet();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1105	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  forAnnotations.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  forAnnotations.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  forAnnotations.getPrettyPrint();	  prettyPrint    =       "native    type   "    +    forAnnotations.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
1106	[BUG]  [BUGGY]  sb.append( ", ").append(forAnnotations);  return  sb.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ", ").append(forAnnotations);  return  sb.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ", ").append(forAnnotations);  return  sb.toString();	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1107	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ", ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ", ");	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1108	[BUG]  [BUGGY]  return  sb.toString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  return  sb.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	return  sb.toString();	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1109	[BUG]  [BUGGY]  sb.append('n');  return  sb.toString();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append('n');  return  sb.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append('n');  return  sb.toString();	  [Delete]    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1110	[BUG]  [BUGGY]  Annotations  <  Class  <?>  inferred  =  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  Class  <?>  inferred  =  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  Class  <?>  inferred  =  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1111	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1112	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINT_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINT_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  true;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINT_PROPERTIES,  forAnnotations);	  Annotations    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1113	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  1;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  1;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1114	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  2;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  2;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations.size()  >  2;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1115	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  super.inferred;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  inferred  =  super.inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  super.inferred;	  Annotations    <    ObjectType>    inferred    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1116	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTations  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  FOR_ANNOTations  ||  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTations  ||  forAnnotations;	  prettyPrint    |=    FOR_Annotations;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
1117	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType();	  prettyPrint    =       "native    type   "    +    getNativeType();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
1118	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getPrettyPrinter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getPrettyPrinter();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getPrettyPrinter();	  prettyPrint    =       "native    type   "    +    getNativeType();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
1119	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
1120	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_    	non-compiled	[CE]  <identifier>  expected	154	None	replace
1121	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  new  ObjectType[0];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  new  ObjectType[0];  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  new  ObjectType[0];	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.instance    :    null;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1122	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  sb,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  sb,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  sb,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    localCount,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
1123	[BUG]  [BUGGY]  sb.append( ", ").append(forAnnotations).append( ",');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  sb.append( ", ").append(forAnnotations).append( ",');  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ", ").append(forAnnotations).append( ",');	  sb.append(   ",   ").append(forAnnotations).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	136	None	replace
1124	[BUG]  [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  implicitPrototypeFallback.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1125	[BUG]  [BUGGY]  Annotations  <  type>.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  type>.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  type>.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1126	[BUG]  [BUGGY]  Annotations  <  typeFallback.length)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  typeFallback.length)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  typeFallback.length)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1127	[BUG]  [BUGGY]  Annotations  <  initialCount)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  initialCount)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  initialCount)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.length)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1128	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrintInternal();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  getPrettyPrintInternal();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrintInternal();	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
1129	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations?  getPrettyPrint()  : " ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations?  getPrettyPrint()  : " ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations?  getPrettyPrint()  : " ";	  prettyPrint    =    getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	129	None	replace
1130	[BUG]  [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback!=  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback!=  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback!=  null;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
1131	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  'n'  :  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
1132	[BUG]  [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null);	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
1133	[BUG]  [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n'  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null;	  prettyPrint    =    'n';    	non-compiled	[CE]  <identifier>  expected	131	None	replace
1134	[BUG]  [BUGGY]  prettyPrint  =(this.forAnnotations  ||  implicitPrototypeFallback  ==  null)?  null  :  this.implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(this.forAnnotations  ||  implicitPrototypeFallback  ==  null)?  null  :  this.implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(this.forAnnotations  ||  implicitPrototypeFallback  ==  null)?  null  :  this.implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
1135	[BUG]  [BUGGY]  prettyPrint  =(prettyPrint  ||  forAnnotations)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =(prettyPrint  ||  forAnnotations)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(prettyPrint  ||  forAnnotations)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =(forAnnotations    ||    implicitPrototypeFallback    ==    null)?    null    :    implicitPrototypeFallback.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
1136	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isUnknownType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isUnknownType());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isUnknownType());	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1137	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isNative();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isNative();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isNative();	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1138	[BUG]  [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback.isNative();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback.isNative();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '['  ||  forAnnotations  ||  implicitPrototypeFallback.isNative();	  prettyPrint    =    '[';    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1139	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1140	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    1,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
1141	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  forAnnotations.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  forAnnotations.getInferredPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  forAnnotations.getInferredPrototype();	  prettyPrint    =       "native    type   "    +    forAnnotations.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	179	None	replace
1142	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  FORANNotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  FORANNotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  FORANNotations);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    FORANNotations);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
1143	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type: "  +  getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  getImplicitPrototype();	  prettyPrint    =       "native    type:   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1144	[BUG]  [BUGGY]  prettyPrint  = "native  type: "  +  getClass().getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type: "  +  getClass().getName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: "  +  getClass().getName();	  prettyPrint    =   "native    type:   ";    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1145	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1146	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1147	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  1,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  1,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  1,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1148	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1149	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getInferredPrototypeName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getInferredPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getInferredPrototypeName();	  prettyPrint    =       "native    type   "    +    forAnnotations.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1150	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototypeFallback();	  prettyPrint    =       "native    type   "    +    forAnnotations.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1151	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  this.forAnnotations;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  this.forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  this.forAnnotations;	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
1152	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations  &&  implicitPrototypeFallback!=  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations  &&  implicitPrototypeFallback!=  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  forAnnotations  &&  implicitPrototypeFallback!=  null;	  prettyPrint    =       "immutable   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
1153	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  this;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  this;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  this;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
1154	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  inferred;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  inferred;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
1155	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  defaultPrototype;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  defaultPrototype;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  defaultPrototype;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
1156	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  new  ObjectType[0];  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  new  ObjectType[0];  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  new  ObjectType[0];	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getNativeType()    :    null;    	non-compiled	[CE]  <identifier>  expected	147	None	replace
1157	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newNumberSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Set  <  String>  propertyNames  =  Sets.newNumberSet();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newNumberSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
1158	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    0);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
1159	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  for "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented:  for "  +  forAnnotations;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  for "  +  forAnnotations;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1160	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented "  +  inferred;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented "  +  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented "  +  inferred;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1161	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations  ||  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations  ||  implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented "  +  forAnnotations  ||  implicitPrototypeFallback;	  prettyPrint    =       "not    implemented   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1162	[BUG]  [BUGGY]  Annotations  <  ObjectType>  mockingAnnotations)  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  mockingAnnotations)  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  mockingAnnotations)  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
1163	[BUG]  [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  ObjectType>  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  implicitPrototypeFallback  =  getImplicitPrototypeFallback();	  Annotations    <    implicitPrototypeFallback.class)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	165	None	replace
1164	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  inferred;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  inferred;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  inferred;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getImplicitPrototype()    :    null;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
1165	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations  + ", ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations  + ", ";  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations  + ", ";	  prettyPrint    =   "Native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
1166	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getPrettyPrinter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getPrettyPrinter();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getPrettyPrinter();	  prettyPrint    =       "native    type   "    +    forAnnotations.getNativeType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
1167	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  inferred.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1168	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  inferred.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1169	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  inferred.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1170	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  inferred.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES);	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1171	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  inferred.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1172	[BUG]  [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  forAnnotations  &&  inferred.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  forAnnotations  &&  inferred.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1173	[BUG]  [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1174	[BUG]  [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1175	[BUG]  [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1176	[BUG]  [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1177	[BUG]  [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	APPLICATIONS  ||  FOR_ANNOTATIONS  ||  FOR_ANNOTATIONS  ||  forAnnotations)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    true;    }    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1178	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
1179	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  className++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  className++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  className++,  MAX_PRETTY_PRINTED_PRO	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
1180	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  properties  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  properties  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO,  properties	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
1181	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PROPERTIES,  forAnnotations  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PROPERTIES,  forAnnotations  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PROPERTIES,  forAnnotations	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	5	None	replace
1182	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  Arrays.asList(forAnnotations),  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  Arrays.asList(forAnnotations),  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  Arrays.asList(forAnnotations),  0);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
1183	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.properties,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  this.properties,  0);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  this.properties,  0);	  System.arraycopy(implicitPrototypeFallback,    0,    forAnnotations,    0);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
1184	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1185	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1186	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1187	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInstanceType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInstanceType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInstanceType();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1188	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInterfaceType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInterfaceType();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInterfaceType();	  prettyPrint    =       "native    type   "    +    this.implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1189	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  properties,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTS,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1190	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1191	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(this.implicitPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1192	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(defaultPrototypeFallback)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1193	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(properties)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    |=    forAnnotations    &&    implicitPrototypeFallback.equals(forAnnotations)||    implicitPrototypeFallback.equals(defaultPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1194	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
1195	[BUG]  [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(inferred)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations    ||    inferred)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED    	non-compiled	[CE]  <identifier>  expected	155	None	replace
1196	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  ' "';  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  if(forAnnotations)  {  prettyPrint  =  ' "';  }  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  ' "';  }	  prettyPrint    ='   "';    	non-compiled	[CE]  <identifier>  expected	132	None	replace
1197	[BUG]  [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1198	[BUG]  [BUGGY]  prettyPrint  =   "[native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "[native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "[native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();	  prettyPrint    =       "native    type   "    +    getNativeType(implicitPrototypeFallback).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1199	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getInferredPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getInferredPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getInferredPrototypeName();	  prettyPrint    =       "native    type   "    +    implicitPrototype.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1200	[BUG]  [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]);	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
1201	[BUG]  [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]));  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]));	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
1202	[BUG]  [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]).toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]).toString();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ]).toString();	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
1203	[BUG]  [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ],  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ],  false);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  ],  false);	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
1204	[BUG]  [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  *  2  +  1]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  *  2  +  1]);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  = "Failed  to  instantiate  native  type: "  +  forAnnotations.toArray(new  String[forAnnotations.size()  *  2  +  1]);	  PrettyPrint    =    false;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
1205	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeFallbackName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeFallbackName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getImplicitPrototypeFallbackName();	  prettyPrint    =       "native    type   "    +    getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
1206	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  this.implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  this.implicitPrototypeFallback;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  this.implicitPrototypeFallback;	  prettyPrint    =   "native    type    forAnnotations:   "    +    implicitPrototype;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1207	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instanceType()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instanceType()  :  null;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instanceType()  :  null;	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1208	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  new  ObjectType[0];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  new  ObjectType[0];  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  new  ObjectType[0];	  Annotations    implicitPrototypeFallback    =    forAnnotations?    implicitPrototypeFallback.getInstanceType()    :    null;    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1209	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  this.implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
1210	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  sb.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =   "native  type( "  +  sb.getImplicitPrototypeName();  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  sb.getImplicitPrototypeName();	  prettyPrint    =       "native    type(   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
1211	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( ".prototype. ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  prettyPrint  =  new  StringBuilder().append( ".prototype. ");  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( ".prototype. ");	  prettyPrint    =    new    StringBuilder().append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1212	[BUG]  [BUGGY]  Annotations  <  localCount.size())  {  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  Annotations  <  localCount.size())  {  prettyPrint  =  false;  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  localCount.size())  {  prettyPrint  =  false;	  Annotations    <    implicitPrototypeFallback.size())    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnn    	non-compiled	[CE]  <identifier>  expected	164	None	replace
1213	[BUG]  [BUGGY]  System.arraycopy(propertyNames,  0,  this.propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {        [BUGGY]  System.arraycopy(propertyNames,  0,  this.propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(propertyNames,  0,  this.propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localeCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
