bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  if(!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  if(propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  if(!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isInterface())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isInterface())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isUnknownType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isUnknownType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isConstructor())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isConstructor())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isInterface())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterface())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isInstanceType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isInstanceType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isNativeType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isNativeType())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getInstanceType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  propType  =  constraintObj.getInstanceType();  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getInstanceType();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  if(propType!=  null  ||!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!isConstructorDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isConstructorDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  if(propType!=  null  ||!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!isImmutableTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeDeclared(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(propType!=  null  &&!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isImmutableTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  if(!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  if(propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  if(!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  if(propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isInferred())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isInferred())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isInferred())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isSubtype(this))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||  propType.isSubtype(this))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isSubtype(this))  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeDeclared(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isPrototypeTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeTypeDeclared(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeDeclared(prop))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
53	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeDeclared(prop))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  if(propType!=  null  ||!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!isPrototypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPrototypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!isPrototypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isPrototypeDeclared(prop))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
58	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
59	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
60	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!isPrototypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isPrototypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  if(propType!=  null  ||!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!isRecordTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isRecordTypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  if(propType  >=  null  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  >=  null  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  thatObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop);  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  thatObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
70	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  ObjectType  propType  =  thatObj.getPrototype();  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  thatObj.getPrototype();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isUnknownType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnionType())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isUnionType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnionType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
76	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isInstanceType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInstanceType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  if(propType!=  null  &&  propType  instanceof  Class  <?>)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType  instanceof  Class  <?>)  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType  instanceof  Class  <?>)  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isNativeObjectType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isNativeObjectType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isUnknownType())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
80	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||  propType.isInterface())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isInterface())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
81	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||  propType.isInstanceType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isInstanceType())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isUnionType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||  propType.isUnionType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isUnionType())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  &&  propType.isUnknownType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isUnknownType())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType  ==  null  ||  propType.isConstructor())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isConstructor())  {	  if(propType    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(proptype))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(proptype))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(proptype))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
86	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(prop))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(prop))  {	  if(propType!=    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
87	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isUnknownType())  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType())  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  if(propType!=  null  &&!isImmutableType(propType))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isImmutableType(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isImmutableType(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferredPrototype(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);    [BUGGY]  if(propType!=  null  &&!isInferredPrototype(propType))  {  [BUGGY]    JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferredPrototype(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
