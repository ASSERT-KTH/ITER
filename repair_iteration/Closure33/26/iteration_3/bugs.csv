bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
2	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
3	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isNative()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isNative()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isNative()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
4	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  ||!isConstructorDeclared(propType))  {	  if(propType!=    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
5	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isNativeType())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
6	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isInterface())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
7	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isConstructor())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isConstructor())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
8	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
9	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
10	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
11	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
12	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getRecordType();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getRecordType();	  JSType    propType    =    constraintObj.getInstanceType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
13	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getInstanceType(prop);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getInstanceType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getInstanceType(prop);	  JSType    propType    =    constraintObj.getInstanceType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
14	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isInterface())  {	  if(propType    ==    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
15	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isFunctionType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isFunctionType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isFunctionType())  {	  if(propType    ==    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
16	[BUG]  [BUGGY]  if(propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(propType.isInterface()  ||  isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isInterface()  ||  isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInterface()  ||  isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  if(propType.isNative()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isNative()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isNative()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  if(propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isNativeObjectType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isNativeObjectType())  {	  if(propType!=    null    &&    propType.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
23	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterfaceType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInterfaceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterfaceType())  {	  if(propType!=    null    &&    propType.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
24	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isNativeType())  {	  if(propType!=    null    &&    propType.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
25	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
26	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
27	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
28	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isNativeType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
29	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInterfaceType())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInterfaceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInterfaceType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
30	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
31	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
32	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
33	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototype();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
34	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getRecordType();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
35	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPrototype();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
36	[BUG]  [BUGGY]  ObjectType  propType  =  constraintsObj.getPrototype();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintsObj.getPrototype();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintsObj.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
37	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeFallback();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeFallback();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPrototypeFallback();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
38	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPrototypeDeclared(propType))  {	  if(propType!=    null    &&!isPrototypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
39	[BUG]  [BUGGY]  if(propType!=  null  &&!isInterfaceDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInterfaceDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInterfaceDeclared(propType))  {	  if(propType!=    null    &&!isPrototypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
40	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeDefined(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPrototypeDefined(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeDefined(propType))  {	  if(propType!=    null    &&!isPrototypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
41	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isConstructorDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
42	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
43	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
44	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
45	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isRecordTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
46	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isUnionType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isUnionType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isUnionType())  {	  if(propType!=    null    &&    propType.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
47	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isFunctionType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isFunctionType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isFunctionType())  {	  if(propType!=    null    &&    propType.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
48	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
49	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
50	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
51	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  ||!isConstructorDeclared(prop))  {	  if(propType!=    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
54	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
57	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isConstructor())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isConstructor())  {	  if(propType    ==    null    ||    propType.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
58	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
59	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
60	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
61	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isNativeType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isNativeType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isNativeType()  ||!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
62	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
63	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
64	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  ||!isConstructorDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
65	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
66	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isConstructorDeclared(prop))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
67	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
68	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isImmutableTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isImmutableTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isImmutableTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
69	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
70	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isNative()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isNative()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isNative()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
71	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInstanceType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInstanceType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInstanceType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
72	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
73	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
74	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isConstructorDeclared(prop))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
75	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isImmutableTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isImmutableTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isImmutableTypeDeclared(prop))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
77	[BUG]  [BUGGY]  if(propType!=  null  ||  isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
78	[BUG]  [BUGGY]  if(propType  ==  null  &&  isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
79	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(prop)||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(prop)||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(prop)||  propType.isInterface())  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
80	[BUG]  [BUGGY]  if(propType!=  null  &&  isImmutablePrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isImmutablePrototypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isImmutablePrototypeDeclared(prop))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
81	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isNativeType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isNativeType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isNativeType()  ||!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
82	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
83	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  ||!isConstructorDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
84	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
85	[BUG]  [BUGGY]  if(propType  ==  null  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isConstructorDeclared(propType))  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
86	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(propType,  propType))  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
87	[BUG]  [BUGGY]  if(propType!=  null  &&  isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isConstructorDeclared(propType))  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
88	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDefined(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDefined(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDefined(propType))  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
89	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
90	[BUG]  [BUGGY]  if(!propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(!propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isConstructor()  &&!isPropertyTypeDeclared(prop))  {	  if(!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
91	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  property);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  property);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  property);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
94	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  type);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  type);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  type);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
95	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getRecordType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
96	[BUG]  [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintsObj.getPropertyType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
97	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
98	[BUG]  [BUGGY]  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
99	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
100	[BUG]  [BUGGY]  typeToInfer[0]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer[0]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer[0]  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
101	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
102	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
103	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isConstructorDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
104	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
105	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isImmutableTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
106	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isInterfaceDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isInterfaceDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isInterfaceDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
107	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
108	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
109	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propertyName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propertyName))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propertyName))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
110	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
111	[BUG]  [BUGGY]  if(propType!=  null  &&!isImmutableTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isImmutableTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isImmutableTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
112	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  type))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  type))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(prop,  type))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
114	[BUG]  [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
115	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
116	[BUG]  [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
118	[BUG]  [BUGGY]  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
119	[BUG]  [BUGGY]  if(propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
120	[BUG]  [BUGGY]  if(!propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(!propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
121	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
122	[BUG]  [BUGGY]  if(!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
123	[BUG]  [BUGGY]  if(propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
124	[BUG]  [BUGGY]  if(propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isConstructor()  ||!isPropertyTypeDeclared(propType))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
125	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isUnionType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isUnionType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isUnionType())  {	  if(propType    ==    null    ||    propType.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
126	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isInterfaceType())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isInterfaceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isInterfaceType())  {	  if(propType    ==    null    ||    propType.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
127	[BUG]  [BUGGY]  if(propType!=  null  ||!isImmutableType(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isImmutableType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isImmutableType(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
128	[BUG]  [BUGGY]  if(propType  ==  null  &&!isImmutableType(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isImmutableType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isImmutableType(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
129	[BUG]  [BUGGY]  if(propType!=  null  &&!isInterfaceType(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInterfaceType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInterfaceType(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
130	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
131	[BUG]  [BUGGY]  if(propType!=  null  &&!isVoidType(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isVoidType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isVoidType(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
132	[BUG]  [BUGGY]  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
133	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
134	[BUG]  [BUGGY]  typeToInfer[0]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer[0]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer[0]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
135	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
136	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
137	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
138	[BUG]  [BUGGY]  if(propType  ==  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
139	[BUG]  [BUGGY]  if(propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isConstructor()  ||!isPropertyTypeDeclared(prop))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
140	[BUG]  [BUGGY]  if(propType!=  null  ||!isPrototypeTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPrototypeTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPrototypeTypeDeclared(propType))  {	  if(propType!=    null    &&!isPrototypeTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
141	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPrototypeTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPrototypeTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPrototypeTypeDeclared(propType))  {	  if(propType!=    null    &&!isPrototypeTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
142	[BUG]  [BUGGY]  if(propType!=  null  &&!isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInterfaceTypeDeclared(propType))  {	  if(propType!=    null    &&!isPrototypeTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
143	[BUG]  [BUGGY]  if(propType  ==  null  &&!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isImmutableTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    &&!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
144	[BUG]  [BUGGY]  if(propType!=  null  &&!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isVoidTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isVoidTypeDeclared(propType))  {	  if(propType!=    null    &&!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
145	[BUG]  [BUGGY]  if(propType!=  null  &&!isImmutableTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isImmutableTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isImmutableTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
146	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getRecordType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
147	[BUG]  [BUGGY]  ObjectType  propType  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintsObj.getPropertyType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintsObj.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
148	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getConstructorType(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getConstructorType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getConstructorType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
149	[BUG]  [BUGGY]  if(propType.isUnknownType()  ||  isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  ||  isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  ||  isPropertyTypeDeclared(propType))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
150	[BUG]  [BUGGY]  if(propType.isUnknownType()  ||  propType.isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  ||  propType.isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  ||  propType.isPropertyTypeDeclared(propType))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
151	[BUG]  [BUGGY]  if(propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
152	[BUG]  [BUGGY]  if(propType.isUnknownType()  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  &&!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  &&!isConstructorDeclared(propType))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
153	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
154	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
155	[BUG]  [BUGGY]  if(propType  ==  null  &&!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isRecordTypeDeclared(propType))  {	  if(propType!=    null    ||!isRecordTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
156	[BUG]  [BUGGY]  if(propType  ==  null  ||!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isRecordTypeDeclared(propType))  {	  if(propType!=    null    ||!isRecordTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
157	[BUG]  [BUGGY]  if(propType!=  null  &&  isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isRecordTypeDeclared(propType))  {	  if(propType!=    null    ||!isRecordTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
158	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeDefined(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isRecordTypeDefined(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeDefined(propType))  {	  if(propType!=    null    &&!isRecordTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
159	[BUG]  [BUGGY]  if(propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  ||!isPropertyTypeDeclared(prop))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
160	[BUG]  [BUGGY]  if(propType.isUnknownType()  ||  propType.isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  ||  propType.isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  ||  propType.isPropertyTypeDeclared(prop))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
161	[BUG]  [BUGGY]  if(propType.isUnknownType()  ||  isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  ||  isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  ||  isPropertyTypeDeclared(prop))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
162	[BUG]  [BUGGY]  if(propType.isUnknownType()  &&!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isUnknownType()  &&!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isUnknownType()  &&!isConstructorDeclared(prop))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
163	[BUG]  [BUGGY]  if(propType!=  null  ||!isUnknownType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isUnknownType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
164	[BUG]  [BUGGY]  if(propType  ==  null  &&!isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isUnknownType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
165	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructor())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructor())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructor())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
166	[BUG]  [BUGGY]  if(propType!=  null  &&  isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isUnknownType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
167	[BUG]  [BUGGY]  if(propType!=  null  &&!isFunctionType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isFunctionType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isFunctionType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
168	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
169	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
170	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
171	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
172	[BUG]  [BUGGY]  if(propType!=  null  ||  isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
173	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
174	[BUG]  [BUGGY]  if(propType  ==  null  &&  isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
175	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  isNativeType(JSTypeNative.UNKNOWN_TYPE))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  isNativeType(JSTypeNative.UNKNOWN_TYPE))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  isNativeType(JSTypeNative.UNKNOWN_TYPE))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
176	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  getNativeType(JSTypeNative.UNKNOWN_TYPE))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
177	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType)||  propType.isInterface())  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
178	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isInstanceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isInstanceType())  {	  if(propType    ==    null    ||    propType.isInstanceType())    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
179	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType  instanceof  Class  <?>)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType  instanceof  Class  <?>)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType  instanceof  Class  <?>)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
180	[BUG]  [BUGGY]  if(propType!=  null  ||  propType  instanceof  Class  <?>)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType  instanceof  Class  <?>)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType  instanceof  Class  <?>)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
181	[BUG]  [BUGGY]  if(propType!=  null  &&  propType  instanceof  String)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType  instanceof  String)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType  instanceof  String)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
182	[BUG]  [BUGGY]  if(propType!=  null  &&  propType  instanceof  Type  <?>)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType  instanceof  Type  <?>)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType  instanceof  Type  <?>)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
183	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType  instanceof  Class  <?>)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType  instanceof  Class  <?>)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType  instanceof  Class  <?>)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
184	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isSubtype(this))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isSubtype(this))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isSubtype(this))  {	  if(propType!=    null    ||    propType.isSubtype(this))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
185	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isSubtype(this))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isSubtype(this))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isSubtype(this))  {	  if(propType!=    null    ||    propType.isSubtype(this))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
186	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isSubtype(this))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isSubtype(this))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isSubtype(this))  {	  if(propType!=    null    ||    propType.isSubtype(this))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
187	[BUG]  [BUGGY]  if(propType!=  null  ||!isInterfaceDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isInterfaceDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isInterfaceDeclared(propType))  {	  if(propType    ==    null    ||!isPrototypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
188	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInferred())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInferred())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInferred())  {	  if(propType!=    null    ||    propType.isInferred())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
189	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isInferred())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isInferred())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isInferred())  {	  if(propType!=    null    ||    propType.isInferred())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
190	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isInferred())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isInferred())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isInferred())  {	  if(propType!=    null    ||    propType.isInferred())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
191	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isUnknownType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
192	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isConstructorDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
193	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isNativeType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
194	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isNativeType())  {	  if(propType!=    null    ||    propType.isNativeType())    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
195	[BUG]  [BUGGY]  if(propType!=  null  ||!isImmutableTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isImmutableTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isImmutableTypeDeclared(prop))  {	  if(propType    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
196	[BUG]  [BUGGY]  if(propType!=  null  ||!isRecordTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isRecordTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isRecordTypeDeclared(prop))  {	  if(propType!=    null    &&!isRecordTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
197	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isRecordTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
198	[BUG]  [BUGGY]  if(propType  ==  null  ||!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!isImmutableTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    ||!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
199	[BUG]  [BUGGY]  if(propType!=  null  &&  isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isImmutableTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isImmutableTypeDeclared(propType))  {	  if(propType!=    null    ||!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
200	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPrototypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPrototypeDeclared(prop))  {	  if(propType    ==    null    ||!isPrototypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
201	[BUG]  [BUGGY]  if(propType!=  null  ||!isPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPrototypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPrototypeDeclared(prop))  {	  if(propType    ==    null    ||!isPrototypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
202	[BUG]  [BUGGY]  if(propType!=  null  ||!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isConstructorDeclared(prop))  {	  if(propType    ==    null    ||!isPrototypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
203	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDefined(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDefined(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDefined(propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(proptype))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
204	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isConstructorDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
205	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
206	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
207	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isImmutableTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isImmutableTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isImmutableTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
208	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isNative()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isNative()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isNative()  ||!isPropertyTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
209	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isConstructorDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
210	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
211	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
212	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isRecordTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isRecordTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isRecordTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
213	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
214	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
215	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
216	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
217	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
218	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
219	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propertyName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propertyName))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propertyName))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
220	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPropertyTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
222	[BUG]  [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
223	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
224	[BUG]  [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
226	[BUG]  [BUGGY]  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
227	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  null);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
228	[BUG]  [BUGGY]  if(propType!=  null  ||!isInferredPrototype(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isInferredPrototype(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isInferredPrototype(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
229	[BUG]  [BUGGY]  if(propType  ==  null  &&!isInferredPrototype(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isInferredPrototype(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isInferredPrototype(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
230	[BUG]  [BUGGY]  if(propType!=  null  &&!isImmutablePrototype(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isImmutablePrototype(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isImmutablePrototype(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
231	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructor(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructor(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructor(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
232	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownPrototype(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownPrototype(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownPrototype(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
233	[BUG]  [BUGGY]  if(propType  ==  null  ||!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isConstructorDeclared(propType))  {	  if(propType!=    null    ||!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
234	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(prop))  {	  if(propType!=    null    &&!isPrototypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
235	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
236	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
237	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
238	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
239	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  propType;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  propType;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  propType;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
240	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isPrototypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
241	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
242	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPrototypeType();	  JSType    propType    =    constraintObj.getInstanceType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
243	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop);	  JSType    propType    =    constraintObj.getInstanceType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
244	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isConstructorDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isConstructorDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isConstructorDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
245	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!hasProperty(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!hasProperty(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
246	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
247	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferred(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInferred(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferred(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
248	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPrototypeType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
249	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  propertyName);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  propertyName);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
250	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
251	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferred(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInferred(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferred(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
252	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isPrototypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
253	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isFunctionTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isFunctionTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isFunctionTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
254	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
255	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  type);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
256	[BUG]  [BUGGY]  if(propType!=  null  ||!isInferred(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isInferred(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isInferred(propType))  {	  if(propType    ==    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
257	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeFallback(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPrototypeFallback(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeFallback(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
258	[BUG]  [BUGGY]  if(propType!=  null  &&!isInterface(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInterface(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInterface(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
259	[BUG]  [BUGGY]  if(propType!=  null  &&  isPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPrototypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPrototypeDeclared(prop))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
260	[BUG]  [BUGGY]  if(propType!=  null  &&  isInferredPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isInferredPrototypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isInferredPrototypeDeclared(prop))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
261	[BUG]  [BUGGY]  if(propType  ==  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
262	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
263	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  constraintObj.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  constraintObj.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  constraintObj.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
264	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
265	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||!isPropertyTypeDeclared(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
266	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInterface())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
267	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInferredType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInferredType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType)&&  propType.isInferredType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
268	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
269	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isConstructorDeclared(propType))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
270	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
271	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceDeclared(propType))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
272	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isPrototypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
273	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.hasUnknownType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.hasUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.hasUnknownType())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
274	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototype(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototype(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getPrototype(prop);	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
275	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPrototype(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  thatObj.getPrototype(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  thatObj.getPrototype(prop);	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
276	[BUG]  [BUGGY]  if(propType  ==  null  &&  propType.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&  propType.isNativeObjectType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&  propType.isNativeObjectType())  {	  if(propType!=    null    &&    propType.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
277	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
278	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
279	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isConstructor()  &&!isPropertyTypeDeclared(propType))  {	  if(!propType.isConstructor()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
280	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isRecordTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
281	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isPrototypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
282	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
283	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isInterface()  &&!isPropertyTypeDeclared(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
284	[BUG]  [BUGGY]  if(propType.isInterface()  &&!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isInterface()  &&!hasProperty(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInterface()  &&!hasProperty(prop))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
285	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getConstructorType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getConstructorType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getConstructorType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
286	[BUG]  [BUGGY]  if(propType!=  null  &&  isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPrototypeDeclared(propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
287	[BUG]  [BUGGY]  if(propType!=  null  &&  isImmutablePrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isImmutablePrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isImmutablePrototypeDeclared(propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
288	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getInstanceType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintObj.getInstanceType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintObj.getInstanceType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
289	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
290	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isPrototypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
291	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferred(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInferred(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferred(prop))  {	  if(propType!=    null    &&!isPrototypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
292	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isFunctionPrototype())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isFunctionPrototype())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isFunctionPrototype())  {	  if(propType    ==    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
293	[BUG]  [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
294	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
295	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
296	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
297	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
298	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferredPrototypeTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInferredPrototypeTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferredPrototypeTypeDeclared(propType))  {	  if(propType!=    null    &&!isPrototypeTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
299	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  constraintObj.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  constraintObj.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  constraintObj.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
300	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
301	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
302	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
303	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInstanceType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInstanceType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInstanceType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
304	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isFunction()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isFunction()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isFunction()  ||!isPropertyTypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
305	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  ||!isPrototypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
306	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
307	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInferredPrototypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInferredPrototypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isInferredPrototypeDeclared(prop))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
308	[BUG]  [BUGGY]  if(propType!=  null  &&!isNativeType(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isNativeType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isNativeType(propType))  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
309	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferredType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInferredType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferredType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
310	[BUG]  [BUGGY]  if(propType!=  null  ||!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isVoidTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isVoidTypeDeclared(propType))  {	  if(propType!=    null    ||!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
311	[BUG]  [BUGGY]  if(propType!=  null  ||!isUnknownTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isUnknownTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isUnknownTypeDeclared(propType))  {	  if(propType!=    null    ||!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
312	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isPrimitive())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isPrimitive())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isPrimitive())  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
313	[BUG]  [BUGGY]  if(propType!=  null  &&  propType  instanceof  Class  >=?>)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType  instanceof  Class  >=?>)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType  instanceof  Class  >=?>)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
314	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
315	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
316	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
317	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  ||!isRecordTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
318	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isRecordType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isRecordType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isRecordType())  {	  if(propType!=    null    ||    propType.isInferred())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
319	[BUG]  [BUGGY]  if(propType  ==  null  &&!isRecordTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isRecordTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isRecordTypeDeclared(prop))  {	  if(propType!=    null    &&!isRecordTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
320	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(proptype))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(proptype))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeDeclared(proptype))  {	  if(propType!=    null    &&!isRecordTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
321	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeInferred(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPrototypeInferred(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeInferred(propType))  {	  if(propType!=    null    &&!isPrototypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
322	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
323	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownTypeDeclared(propType))  {	  if(propType!=    null    &&!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
324	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPrototypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
325	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isRecordTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
326	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
327	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isFunctionPrototypeType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isFunctionPrototypeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isFunctionPrototypeType())  {	  if(propType    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
328	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isUnknownType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
329	[BUG]  [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(proptype))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  &&!isPropertyTypeDeclared(proptype))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  &&!isPropertyTypeDeclared(proptype))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(proptype))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
330	[BUG]  [BUGGY]  if(propType!=  null  ||!isInferred(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isInferred(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isInferred(prop))  {	  if(propType    ==    null    ||!isPrototypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
331	[BUG]  [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
332	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitRecordCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
333	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
334	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isInterface())  {	  if(propType!=    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
335	[BUG]  [BUGGY]  if(propType  [Delete]  null  &&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  [Delete]  null  &&  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  [Delete]  null  &&  propType.isInterface())  {	  if(propType!=    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
336	[BUG]  [BUGGY]  if(propType  >>  null  &&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >>  null  &&  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >>  null  &&  propType.isInterface())  {	  if(propType!=    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
337	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterface()  ||!isPropertyTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
338	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isUnknownType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isInterface()  ||!isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isInterface()  ||!isUnknownType())  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
339	[BUG]  [BUGGY]  if(propType!=  null  ||  propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||  propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||  propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
340	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isUnknownType())  {	  if(propType!=    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
341	[BUG]  [BUGGY]  if(propType  [Delete]  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  [Delete]  null  &&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  [Delete]  null  &&  propType.isUnknownType())  {	  if(propType!=    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
342	[BUG]  [BUGGY]  if(pType!=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(pType!=  null  &&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(pType!=  null  &&  propType.isUnknownType())  {	  if(propType!=    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
343	[BUG]  [BUGGY]  if(propType!=  null  &&!isRecordTypeVisible(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isRecordTypeVisible(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isRecordTypeVisible(propType))  {	  if(propType!=    null    &&!isRecordTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
344	[BUG]  [BUGGY]  if(propType!=  null  &&  isInferredPrototype(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isInferredPrototype(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isInferredPrototype(propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
345	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_PROPERTY);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
346	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_OBJECT);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_OBJECT);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_OBJECT);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
347	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInferredType(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInferredType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isInferredType(propType))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
348	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isUnknownType())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
349	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isVoidType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isVoidType())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
350	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isNativeObjectType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isNativeObjectType())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
351	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isInstanceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||  propType.isInstanceType())  {	  if(propType!=    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
352	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  thatObj.getPropertyType(prop,  thisInterface);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
353	[BUG]  [BUGGY]  ObjectType  propType  =  constraintstObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  constraintstObj.getPropertyType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  constraintstObj.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
354	[BUG]  [BUGGY]  if(propType!=  null  ||!isInferredType(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isInferredType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isInferredType(propType))  {	  if(propType    ==    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
355	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isNativeType()  ||  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isNativeType()  ||  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isNativeType()  ||  propType.isNativeType())  {	  if(propType!=    null    ||    propType.isNativeType())    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
356	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isNativeType())  {	  if(propType!=    null    ||    propType.isNativeType())    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
357	[BUG]  [BUGGY]  if(propType  [Delete]  null  &&  propType.isNativeType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  [Delete]  null  &&  propType.isNativeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  [Delete]  null  &&  propType.isNativeType())  {	  if(propType!=    null    ||    propType.isNativeType())    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
358	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isConstructor()  ||  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isConstructor()  ||  propType.isConstructor())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isConstructor()  ||  propType.isConstructor())  {	  if(propType!=    null    ||    propType.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
359	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isConstructor())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isConstructor())  {	  if(propType!=    null    ||    propType.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
360	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isPrototypeType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isPrototypeType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isPrototypeType())  {	  if(propType!=    null    &&    propType.isInstanceType())    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
361	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isNativeObjectType()  ||  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isNativeObjectType()  ||  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isNativeObjectType()  ||  propType.isUnknownType())  {	  if(propType!=    null    &&    propType.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
362	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
363	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterface()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    ||!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
364	[BUG]  [BUGGY]  if(propType.isInstanceType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType.isInstanceType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType.isInstanceType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
365	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
366	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isVoidTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isVoidTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
367	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInferredType(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInferredType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isInferredType(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
368	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableType(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isImmutableType(propType))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
369	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.restrictByNotNullOrUndefined()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.restrictByNotNullOrUndefined()))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.restrictByNotNullOrUndefined()))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
370	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  typeToInfer))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType,  typeToInfer))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
371	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.restrictByNotNullOrUndefined))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.restrictByNotNullOrUndefined))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.restrictByNotNullOrUndefined))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
372	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.toString()))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.toString()))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(propType,  propType.toString()))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(propType,    propType))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
373	[BUG]  [BUGGY]  if(propType!=  null  &&!isAllTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isAllTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isAllTypeDeclared(propType))  {	  if(propType!=    null    &&!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
374	[BUG]  [BUGGY]  if(propType!=  null  &&!isInferredType(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInferredType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInferredType(propType))  {	  if(propType!=    null    &&!isImmutableType(propType))    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
375	[BUG]  [BUGGY]  if(propType!=  null  &&!isExported(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isExported(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isExported(propType))  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
376	[BUG]  [BUGGY]  if(propType!=  null  &&!isInterface())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isInterface())  {	  if(propType!=    null    &&!isInferredPrototype(propType))    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
377	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isPropertyTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
378	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInterfaceTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInterfaceTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isInterfaceTypeDeclared(prop))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
379	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
380	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInstanceType()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInstanceType()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInstanceType()  &&!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
381	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isVoidTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isVoidTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
382	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isUnknownType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isUnknownType())  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
383	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType,  typeToInfer))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isPropertyTypeDeclared(propType,  typeToInfer))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
384	[BUG]  [BUGGY]  if(propType  >=  null  &&!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&!isPrototypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&!isPrototypeDeclared(propType))  {	  if(propType!=    null    ||!isPrototypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
385	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnionType()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnionType()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnionType()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
386	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isNone()  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isNone()  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isNone()  ||!isPropertyTypeDeclared(propType))  {	  if(propType!=    null    &&!propType.isInterface()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
387	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterface()  &&!isPropertyTypeDeclared(propType))  {	  if(propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
388	[BUG]  [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isPropertyTypeDeclared(propType,  typeToInfer))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isPropertyTypeDeclared(propType,  typeToInfer))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
389	[BUG]  [BUGGY]  if(propType!=  null  &&  isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  isInterfaceTypeDeclared(propType))  {	  if(propType!=    null    &&    isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
390	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isInferred())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isInferred())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isInferred())  {	  if(propType!=    null    ||    propType.isInferred())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
391	[BUG]  [BUGGY]  if(propType  [Delete]  null  &&  propType.isInferred())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  [Delete]  null  &&  propType.isInferred())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  [Delete]  null  &&  propType.isInferred())  {	  if(propType!=    null    ||    propType.isInferred())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
392	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
393	[BUG]  [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null  &&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null  &&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
394	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDefinable(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDefinable(propType)&&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDefinable(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isPropertyTypeDeclared(propType)&&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
395	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.NULL_TYPE);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.NULL_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.NULL_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
396	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
397	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.equals(this))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.equals(this))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.equals(this))  {	  if(propType!=    null    ||    propType.isSubtype(this))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
398	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isSubtype(this))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isSubtype(this))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isSubtype(this))  {	  if(propType!=    null    ||    propType.isSubtype(this))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
399	[BUG]  [BUGGY]  if(propType  >=  null  &&!isConstructorDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&!isConstructorDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&!isConstructorDeclared(propType))  {	  if(propType!=    null    ||!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
400	[BUG]  [BUGGY]  if(propType!=  null  ||!isConstructorDeclared(propType)&&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isConstructorDeclared(propType)&&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isConstructorDeclared(propType)&&  propType.isUnknownType())  {	  if(propType!=    null    ||!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
401	[BUG]  [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propTypeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
402	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isImmutableTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isImmutableTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isImmutableTypeDeclared(prop))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
403	[BUG]  [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!propType.isUnknownType()  ||!isInterfaceTypeDeclared(propType))  {	  if(propType    ==    null    ||!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
404	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  ||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  ||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isUnknownType()  ||  propType.isInterface())  {	  if(propType    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
405	[BUG]  [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  ||  propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  ==  null  ||  propType.isUnknownType()  ||  propType.isVoidType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  ==  null  ||  propType.isUnknownType()  ||  propType.isVoidType())  {	  if(propType    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
406	[BUG]  [BUGGY]  if(propType  >=  null  ||  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  ||  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  ||  propType.isUnknownType())  {	  if(propType    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
407	[BUG]  [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.NULL_TYPE);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.NULL_TYPE);  }  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer[i]  =  getNativeType(JSTypeNative.NULL_TYPE);  }	  if(propType!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer[i]    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
408	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.equals(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.equals(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.equals(propType))  {	  if(propType    ==    null    &&    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
409	[BUG]  [BUGGY]  if(propType!=  null  &&  propType  instanceof  PropertyType)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType  instanceof  PropertyType)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType  instanceof  PropertyType)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
410	[BUG]  [BUGGY]  if(propType!=  null  &&  propType  instanceof  FunctionType)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType  instanceof  FunctionType)  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType  instanceof  FunctionType)  {	  if(propType!=    null    &&    propType    instanceof    Class    <?>)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
411	[BUG]  [BUGGY]  if(propType  >=  null  &&!isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&!isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&!isRecordTypeDeclared(propType))  {	  if(propType!=    null    ||!isRecordTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
412	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isRecordTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isRecordTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isRecordTypeDeclared(propType))  {	  if(propType!=    null    ||!isRecordTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
413	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isInterfaceTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
414	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInferredType(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  ||!isInferredType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  ||!isInferredType(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
415	[BUG]  [BUGGY]  if(propType!=  null  ||!isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  ||!isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  ||!isInterfaceTypeDeclared(propType))  {	  if(propType!=    null    ||!isImmutableTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
416	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  thatObj.getPropertyType(prop,  thisInterface);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
417	[BUG]  [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintstObj.getPropertyType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
418	[BUG]  [BUGGY]  if(propType!=  null  &&!isPrototypeTypeDeclared(propType,  propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPrototypeTypeDeclared(propType,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPrototypeTypeDeclared(propType,  propType))  {	  if(propType!=    null    &&!isPrototypeTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
419	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isVoidTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isVoidTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isVoidTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
420	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isUnknownType()  &&!isInterfaceTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isUnknownType()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
421	[BUG]  [BUGGY]  ObjectType  propType  =  prop.getPrototype();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  prop.getPrototype();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  prop.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
422	[BUG]  [BUGGY]  ObjectType  propType  =  thisObj.getPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  thisObj.getPrototype();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  thisObj.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
423	[BUG]  [BUGGY]  ObjectType  propType  =  this.interface.getPrototype();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  ObjectType  propType  =  this.interface.getPrototype();  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	ObjectType  propType  =  this.interface.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
424	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)[0];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)[0];  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)[0];	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
425	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType.restrictByNotNullOrUndefined()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType.restrictByNotNullOrUndefined()))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType.restrictByNotNullOrUndefined()))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
426	[BUG]  [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType.toString()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType.toString()))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isPropertyTypeDeclared(prop,  propType.toString()))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
427	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorTypeDeclared(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorTypeDeclared(prop,  propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorTypeDeclared(prop,  propType))  {	  if(propType!=    null    &&!isPropertyTypeDeclared(prop,    propType))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
428	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  prop);  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  prop);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
429	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
430	[BUG]  [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isVoidTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!propType.isInterface()  &&!isVoidTypeDeclared(prop))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!propType.isInterface()  &&!isVoidTypeDeclared(prop))  {	  if(propType!=    null    &&!propType.isInterface()    &&!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
431	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isInterface()  ||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isInterface()  ||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isInterface()  ||  propType.isInterface())  {	  if(propType!=    null    &&    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
432	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType()  &&  propType.isInterface())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
433	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isUnknownType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType()  &&  propType.isUnknownType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
434	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isUnionType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isUnionType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType()  &&  propType.isUnionType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
435	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isInstanceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType()  &&  propType.isInstanceType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
436	[BUG]  [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isUnknownType()  &&  propType.isNativeObjectType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isUnknownType()  &&  propType.isNativeObjectType())  {	  if(propType!=    null    &&!isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
437	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType,  thatObj))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType,  thatObj))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(propType,  thatObj))  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
438	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType,  thisInterface))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType,  thisInterface))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(propType,  thisInterface))  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
439	[BUG]  [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType)||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&!isConstructorDeclared(propType)||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&!isConstructorDeclared(propType)||  propType.isInterface())  {	  if(propType!=    null    &&!isConstructorDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
440	[BUG]  [BUGGY]  if(propType  >=  null  &&  propType.isInstanceType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  &&  propType.isInstanceType())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  &&  propType.isInstanceType())  {	  if(propType!=    null    ||    propType.isInstanceType())    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
441	[BUG]  [BUGGY]  if(propType  >=  null  ||  propType.isInterface())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType  >=  null  ||  propType.isInterface())  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType  >=  null  ||  propType.isInterface())  {	  if(propType    ==    null    ||    propType.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
442	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isInterfaceTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isInterfaceTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isInterfaceTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
443	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isVoidTypeDeclared(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isVoidTypeDeclared(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
444	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isInferredType(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);      [BUGGY]  if(propType!=  null  &&  propType.isUnknownType()  &&!isInferredType(propType))  {  [BUGGY]      JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	if(propType!=  null  &&  propType.isUnknownType()  &&!isInferredType(propType))  {	  if(propType!=    null    &&    propType.isUnknownType()    &&!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
