bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType();  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType();	  JSType    propType    =    constraintObj.getRecordType();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPrototype();  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototype();	  JSType    propType    =    constraintObj.getRecordType();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType();  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType();	  JSType    propType    =    constraintObj.getPrototypeType(prop);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  property);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  property);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  property);	  JSType    propType    =    constraintObj.getPropertyType(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  type);	  JSType    propType    =    constraintObj.getPropertyType(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thatCtor);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thatCtor);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  thatCtor);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  this);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  this);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  this);	  JSType    propType    =    constraintObj.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thatInterface);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thatInterface);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  thatInterface);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  className);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  className);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  className);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  name);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  name);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getInstanceType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getInstanceType();  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getInstanceType();	  JSType    propType    =    constraintObj.getRecordType();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeFallbackType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPrototypeFallbackType();  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeFallbackType();	  JSType    propType    =    constraintObj.getRecordType();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thisInterface);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thisInterface);	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thatObj);	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop  +  1);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop  +  1);	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thisInterface);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop,  thisInterface);	  JSType    propType    =    constraintObj.getPrototypeType(prop);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thatObj);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop,  thatObj);	  JSType    propType    =    constraintObj.getPrototypeType(prop);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer);	  JSType    propType    =    constraintObj.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  null);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  null);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thisInterface);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintstObj.getPropertyType(prop,  thisInterface);	  JSType    propType    =    constraintstObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  PROPERTY);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  PROPERTY);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  PROPERTY);	  JSType    propType    =    constraintObj.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thisCtor);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thisCtor);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  thisCtor);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getRecordType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  thatObj.getRecordType();  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getRecordType();	  JSType    propType    =    constraintObj.getRecordType();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  thisInterface);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPropertyType(prop,  thisInterface);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {    [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop,  constraintObj);  [BUGGY]    if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisInterface.getPropertyType(prop,  constraintObj);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
