bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thatCtor);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thatCtor);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintstObj.getPropertyType(prop,  thatCtor);	  JSType    propType    =    constraintstObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
2	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
3	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)&&  constraintObj.hasProperty(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)&&  constraintObj.hasProperty(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)&&  constraintObj.hasProperty(prop);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
5	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thatCtor);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thatCtor);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop,  thatCtor);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
6	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  thatObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  thatObj);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
7	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  DEFAULT_PROPERTY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  DEFAULT_PROPERTY);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  DEFAULT_PROPERTY);	  JSType    propType    =    constraintObj.getPropertyType(prop,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
8	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(0);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(0);	  JSType    propType    =    constraintObj.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
11	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  constraintObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  constraintObj);	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
12	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
14	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisInterface.getPropertyType(prop,  thatObj);	  JSType    propType    =    thisInterface.getPropertyType(prop,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
16	[BUG]  [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisInterface.getPropertyType(prop);	  JSType    propType    =    thisInterface.getPropertyType(prop,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
17	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)||  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)||  constraintObj.isRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)||  constraintObj.isRecordType();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.hasProperty(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.hasProperty(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.hasProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE,  prop);	  JSType    propType    =    getNativeType(JSTypeNative.PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
23	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE)+  1;	  JSType    propType    =    getNativeType(JSTypeNative.PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
24	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE,  constraintObj);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE,  constraintObj);	  JSType    propType    =    getNativeType(JSTypeNative.PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
25	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(thisInterface);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
26	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  propertyName);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  propertyName);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
27	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
28	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
29	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  constraintObj);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  constraintObj);	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
30	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  constraintObj);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  constraintObj);	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
31	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.isRecordType();	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
32	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.hasProperty(prop);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.hasProperty(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  constraintObj.hasProperty(prop);	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
33	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj  +  1);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thatObj  +  1);	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
34	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop  +  1);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop  +  1);	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
35	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type,  forAnnotations);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  type,  forAnnotations);	  JSType    propType    =    constraintObj.getPropertyType(prop,    type);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  null);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  null);	  JSType    propType    =    constraintObj.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
37	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  forAnnotations);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  forAnnotations);	  JSType    propType    =    constraintObj.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
38	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  false);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  typeToInfer,  false);	  JSType    propType    =    constraintObj.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
39	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  propertyName);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
41	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
42	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  property);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  property);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  property);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getRecordType();	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getRecordType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintsObj.getPropertyType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
46	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.OBJECT_TYPE));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.OBJECT_TYPE));  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.OBJECT_TYPE));	  JSType    propType    =    constraintObj.getPropertyType(prop,    this);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.UNKNOWN_TYPE));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.UNKNOWN_TYPE));  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.UNKNOWN_TYPE));	  JSType    propType    =    constraintObj.getPropertyType(prop,    this);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  className,  thisInterface);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  className,  thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  className,  thisInterface);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
49	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  forAnnotations);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  forAnnotations);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
50	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  name,  thisInterface);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  name,  thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  name,  thisInterface);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
51	[BUG]  [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop,  thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintsObj.getPropertyType(prop,  thisInterface);	  JSType    propType    =    thatObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
52	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(thisInterface,  thatObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(thisInterface,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(thisInterface,  thatObj);	  JSType    propType    =    thatObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
53	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
55	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE,  constraintObj);	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
56	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE),  constraintObj);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE),  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE),  constraintObj);	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
57	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)||  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)||  constraintObj.isRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)||  constraintObj.isRecordType();	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
58	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(thisInterface,  propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(thisInterface,  propertyName);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(thisInterface,  propertyName);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
59	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatCtor);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatCtor);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thatCtor);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
60	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeFallback();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeFallback();	  JSType    propType    =    constraintObj.getPrototypeFallbackType();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeFallbackName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeFallbackName();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeFallbackName();	  JSType    propType    =    constraintObj.getPrototypeFallbackType();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
62	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop.toString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop.toString();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop.toString();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)||  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)||  constraintObj.isRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)||  constraintObj.isRecordType();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
66	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)&&  constraintObj.hasProperty(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)&&  constraintObj.hasProperty(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)&&  constraintObj.hasProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
67	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  className,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  className,  null);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  className,  null);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
68	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  this);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  this);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
69	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  name,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  name,  null);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  name,  null);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
70	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  typeToInfer);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  typeToInfer);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
71	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE  +  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE  +  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE  +  prop);	  JSType    propType    =    getNativeType(JSTypeNative.PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
72	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thatObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thatObj);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
73	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thisInterface,  propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  thisInterface,  propertyName);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  thisInterface,  propertyName);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
74	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  inferred);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  inferred);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  inferred);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  properties);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  properties);	  JSType    propType    =    constraintObj.getPropertyType(prop,    className);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
76	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  className);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  className);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  className);	  JSType    propType    =    constraintObj.getPropertyType(prop,    className);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPropertyType(prop,  constraintObj);	  JSType    propType    =    thisInterface.getPropertyType(prop,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
78	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  constraintObj.getLeastSupertype(propType):  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  constraintObj.getLeastSupertype(propType):  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  constraintObj.getLeastSupertype(propType):  getNativeType(JSTypeNative.OBJECT_TYPE);	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
79	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(this,  thatObj);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(this,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(this,  thatObj);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
80	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPrototypeFallbackType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPrototypeFallbackType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPrototypeFallbackType();	  JSType    propType    =    constraintObj.getPrototypeFallbackType();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
81	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
82	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getConstructorType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getConstructorType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getConstructorType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
83	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
86	[BUG]  [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintstObj.getPropertyType(prop,  thatObj);	  JSType    propType    =    constraintstObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
87	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
88	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
89	[BUG]  [BUGGY]  JSType  propType  =  constraintstObj.getRecordType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintstObj.getRecordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintstObj.getRecordType();	  JSType    propType    =    thatObj.getRecordType();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
90	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop  +  2);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop  +  2);	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
91	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj.getLeastSupertype(prop));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj.getLeastSupertype(prop));  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thatObj.getLeastSupertype(prop));	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
92	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop  +  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop  +  3);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop  +  3);	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
93	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE  +  prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE  +  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE  +  prop);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
94	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE  +  prop);	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
95	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getRecordType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getRecordType()  :  null;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getRecordType()  :  null;	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
96	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getPropertyType(prop):  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getPropertyType(prop):  null;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getPropertyType(prop):  null;	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
97	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  DEFAULT_PROTOTYPE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  DEFAULT_PROTOTYPE);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  DEFAULT_PROTOTYPE);	  JSType    propType    =    constraintObj.getPropertyType(prop,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
98	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  constraintObj.getRecordType()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  constraintObj.getRecordType()  :  null;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  constraintObj.getRecordType()  :  null;	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
99	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPrototypeType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPrototypeType();	  JSType    propType    =    constraintObj.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
100	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeName();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeName();	  JSType    propType    =    constraintObj.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.NO_TYPE));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.NO_TYPE));  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  getNativeType(JSTypeNative.NO_TYPE));	  JSType    propType    =    constraintObj.getPropertyType(prop,    this);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
102	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototype(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototype(prop);	  JSType    propType    =    constraintObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
103	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPrototype();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPrototype();	  JSType    propType    =    constraintObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
104	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPropertyType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPropertyType();	  JSType    propType    =    constraintObj.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
105	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  this);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  this);	  JSType    propType    =    constraintObj.getRecordType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
106	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  null);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  null);	  JSType    propType    =    constraintObj.getRecordType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
107	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(this,  thatObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(this,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(this,  thatObj);	  JSType    propType    =    constraintObj.getRecordType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
108	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(thisInterface);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(thisInterface);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
109	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatInterface);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thatInterface);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
110	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thisInterface,  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thisInterface,  inferred);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thisInterface,  inferred);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
111	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPrototypeType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
112	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thatObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  thatObj);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
113	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getInstanceType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getInstanceType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getInstanceType();	  JSType    propType    =    constraintObj.getInstanceType();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
114	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getLeastSupertype(propType):  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getLeastSupertype(propType):  null;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getLeastSupertype(propType):  null;	  ObjectType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
115	[BUG]  [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop,  propertyName,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisInterface.getPropertyType(prop,  propertyName,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisInterface.getPropertyType(prop,  propertyName,  constraintObj);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
116	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisCtor);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisCtor);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisCtor);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
117	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  null);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thisInterface,  null);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
118	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thatInterface);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thatInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  thatInterface);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
119	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPrototypeType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPrototypeType(prop);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
120	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  this);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop,  this);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
121	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(this,  prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(this,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(this,  prop);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
122	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE_OBJECT);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE_OBJECT);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.PROTOTYPE_OBJECT);	  JSType    propType    =    getNativeType(JSTypeNative.PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
123	[BUG]  [BUGGY]  JSType  propType  =  thisCtor.getPropertyType(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisCtor.getPropertyType(prop,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisCtor.getPropertyType(prop,  constraintObj);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thisCtor);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
124	[BUG]  [BUGGY]  JSType  propType  =  thisCtor.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisCtor.getPropertyType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisCtor.getPropertyType(prop);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thisCtor);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
125	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  thisCtor);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getPropertyType(prop,  thisCtor);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getPropertyType(prop,  thisCtor);	  JSType    propType    =    constraintObj.getPropertyType(prop,    thisCtor);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
126	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
127	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop.getName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop.getName();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop.getName();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
128	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thisCtor);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thisCtor);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thisCtor);	  JSType    propType    =    constraintObj.getRecordType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
129	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getRecordType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getRecordType(prop);	  JSType    propType    =    constraintObj.getRecordType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
130	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getRecordType(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getRecordType(prop,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getRecordType(prop,  constraintObj);	  JSType    propType    =    constraintObj.getRecordType(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
131	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_PROPERTY);	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
132	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  prop;	  JSType    propType    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
133	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  prop;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  prop;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  prop;	  JSType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
134	[BUG]  [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintsObj.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintsObj.getPropertyType(prop,  propertyName);	  JSType    propType    =    constraintObj.getPropertyType(prop,    className);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
135	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop).recordType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop).recordType();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(prop).recordType();	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
136	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(0);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(0);	  JSType    propType    =    constraintObj.getRecordType(prop    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
137	[BUG]  [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getLeastSupertype(propType):  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getLeastSupertype(propType):  null;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  constraintObj.getLeastSupertype(propType):  null;	  JSType    propType    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
138	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thatInterface);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop,  thatInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop,  thatInterface);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
139	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPrototypeType(thisInterface,  prop);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
140	[BUG]  [BUGGY]  JSType  propType  =  thisInterface.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisInterface.getPrototypeType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisInterface.getPrototypeType(prop);	  JSType    propType    =    constraintObj.getPrototypeType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  prop;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  prop;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  prop;	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
142	[BUG]  [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE):  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE):  null;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  getNativeType(JSTypeNative.OBJECT_TYPE):  null;	  ObjectType    propType    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
143	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(thisInterface,  prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(thisInterface,  prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getRecordType(thisInterface,  prop);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
144	[BUG]  [BUGGY]  JSType  propType  =  thisInterface.getRecordType(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisInterface.getRecordType(prop,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisInterface.getRecordType(prop,  constraintObj);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
145	[BUG]  [BUGGY]  JSType  propType  =  thatObj.getRecordType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thatObj.getRecordType(prop,  thisInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thatObj.getRecordType(prop,  thisInterface);	  JSType    propType    =    constraintObj.getRecordType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
146	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop)+  1;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop)+  1;	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
147	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  PROPERTY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  PROPERTY);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  PROPERTY);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
148	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  type);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  type);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  propertyName,  type);	  JSType    propType    =    constraintObj.getPropertyType(prop,    propertyName,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
149	[BUG]  [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thatInterface);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  constraintstObj.getPropertyType(prop,  thatInterface);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  constraintstObj.getPropertyType(prop,  thatInterface);	  JSType    propType    =    constraintstObj.getPropertyType(prop,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
150	[BUG]  [BUGGY]  JSType  propType  =  thisObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  thisObj.getPropertyType(prop);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  thisObj.getPropertyType(prop);	  JSType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
151	[BUG]  [BUGGY]  JSType  propType  =  type.getPropertyType(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  JSType  propType  =  type.getPropertyType(prop,  constraintObj);  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	JSType  propType  =  type.getPropertyType(prop,  constraintObj);	  JSType    propType    =    constraintObj.getPropertyType(prop,    type);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
152	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  prop  :  prop;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  prop  :  prop;  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  prop  :  prop;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
153	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  prop.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  prop.toString();  [BUGGY]      if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  prop.toString();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
