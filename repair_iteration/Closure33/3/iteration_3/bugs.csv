bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getFunctionType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	23	None	replace
2	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	23	None	replace
3	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	23	None	replace
4	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
5	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
6	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(ifAnnotations));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(ifAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(ifAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
7	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
8	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  else  {  sb.append(']');  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  else  {  sb.append(']');  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  else  {  sb.append(']');  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
9	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  ++i;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(property));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
10	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
11	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
12	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
13	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
14	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
15	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  ')'  expected	28	None	replace
16	[BUG]  [BUGGY]  sb.append(getStringValue(property).toStringHelper(i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property).toStringHelper(i);	  sb.append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  ')'  expected	28	None	replace
17	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property).toStringHelper(forAnnotations));	  sb.append(getSimpleType(property));    	non-compiled	[CE]  ')'  expected	18	None	replace
18	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property).toStringHelper(forAnnotations);	  sb.append(getSimpleType(property));    	non-compiled	[CE]  ')'  expected	18	None	replace
19	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(ifAnnotations));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(ifAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property).toStringHelper(ifAnnotations));	  sb.append(getSimpleType(property));    	non-compiled	[CE]  ')'  expected	18	None	replace
20	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  i  +  1);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property),  i  +  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property),  i  +  1);	  sb.append(getPropertyType(property),    i);    	non-compiled	[CE]  ')'  expected	7	None	replace
21	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  0);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property),  0);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property),  0);	  sb.append(getPropertyType(property),    i);    	non-compiled	[CE]  ')'  expected	7	None	replace
22	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  1);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property),  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property),  1);	  sb.append(getPropertyType(property),    i);    	non-compiled	[CE]  ')'  expected	7	None	replace
23	[BUG]  [BUGGY]  sb.append(getFunctionType(property),  i);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getFunctionType(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getFunctionType(property),  i);	  sb.append(getPropertyType(property),    i);    	non-compiled	[CE]  ')'  expected	7	None	replace
24	[BUG]  [BUGGY]  sb.append(getNativeType(property),  forAnnotations);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  forAnnotations);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
25	[BUG]  [BUGGY]  sb.append(getNativeType(property),  null,  forAnnotations);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  null,  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  null,  forAnnotations);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
26	[BUG]  [BUGGY]  sb.append(getNativeType(property),  this);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  this);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
27	[BUG]  [BUGGY]  sb.append(getNativeType(property),  propertyName);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  propertyName);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  propertyName);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
28	[BUG]  [BUGGY]  sb.append(getNativeType(property),  FOR_ANNOTATIONS);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  FOR_ANNOTATIONS);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  FOR_ANNOTATIONS);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
29	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(this);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).toStringHelper(this);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	62	None	replace
30	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(property);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).toStringHelper(property);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	62	None	replace
31	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).toStringHelper(i);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	62	None	replace
32	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(inferred);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).toStringHelper(inferred);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	62	None	replace
33	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(localCount);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(localCount);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).toStringHelper(localCount);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	62	None	replace
34	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	5	None	replace
35	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	5	None	replace
36	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelp  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelp  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelp	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  	5	None	replace
37	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	5	None	replace
38	[BUG]  [BUGGY]  sb.append(getProperty(property));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getProperty(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getProperty(property));	  sb.append(getName(property));    	non-compiled	[CE]  ')'  expected	26	None	replace
39	[BUG]  [BUGGY]  sb.append(getName(property),  i);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property),  i);	  sb.append(getName(property));    	non-compiled	[CE]  ')'  expected	26	None	replace
40	[BUG]  [BUGGY]  sb.append(getString(property));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getString(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getString(property));	  sb.append(getName(property));    	non-compiled	[CE]  ')'  expected	26	None	replace
41	[BUG]  [BUGGY]  sb.append(getImmediateParentType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType(property).toStringHelper(forAnnotations));	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
42	[BUG]  [BUGGY]  sb.append(getImmediateParentType(property),  i);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType(property),  i);	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
43	[BUG]  [BUGGY]  sb.append(getImmediateParentType(property),  forAnnotations);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType(property),  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType(property),  forAnnotations);	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
44	[BUG]  [BUGGY]  sb.append(getImmediateParentType(property).toStringHelper());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType(property).toStringHelper());	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
45	[BUG]  [BUGGY]  sb.append(getImmediateParentType(property),  false);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType(property),  false);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType(property),  false);	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
46	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getFunctionType(property).toStringHelper(forAnnotations);	  sb.append(getFunctionType(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	43	None	replace
47	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReturnType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReturnType(property).toStringHelper());	  sb.append(getFunctionType(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	43	None	replace
48	[BUG]  [BUGGY]  sb.append(getType(property).toStringHelper());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getType(property).toStringHelper());	  sb.append(getFunctionType(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	43	None	replace
49	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(this));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	58	None	replace
50	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyNames);	  sb.append(getPropertyType(property).toStringHelper(propertyNames);    	non-compiled	[CE]  not  a  statement	30	None	replace
51	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(propertyNames);    	non-compiled	[CE]  not  a  statement	30	None	replace
52	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(propertyNames);    	non-compiled	[CE]  not  a  statement	30	None	replace
53	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(i,  forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(i,  forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(i,  forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  not  a  statement	63	None	replace
54	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  properties));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  properties));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(this,  properties));	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
55	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  localCount));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(this,  localCount));	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
56	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  inferred));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  inferred));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(this,  inferred));	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
57	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  forAnnotations),  i);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  forAnnotations),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(this,  forAnnotations),  i);	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
58	[BUG]  [BUGGY]  sb.append(getNativeType(property),  inferred).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  inferred).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  inferred).toStringHelper(forAnnotations);	  sb.append(getNativeType(property),    inferred);    	non-compiled	[CE]  ')'  expected	52	None	replace
59	[BUG]  [BUGGY]  sb.append(getNativeType(property),  inferred,  forAnnotations);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  inferred,  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  inferred,  forAnnotations);	  sb.append(getNativeType(property),    inferred);    	non-compiled	[CE]  ')'  expected	52	None	replace
60	[BUG]  [BUGGY]  sb.append(getNativeType(property),  inferred  +  1);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  inferred  +  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  inferred  +  1);	  sb.append(getNativeType(property),    inferred);    	non-compiled	[CE]  ')'  expected	52	None	replace
61	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  i);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property),  i);	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
62	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  getPropertyType(property));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property),  getPropertyType(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property),  getPropertyType(property));	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
63	[BUG]  [BUGGY]  sb.append(getReferenceName(property)+ ": ");  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property)+ ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property)+ ": ");	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
64	[BUG]  [BUGGY]  sb.append(getReferenceName(property)).append( ": ");  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property)).append( ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property)).append( ": ");	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
65	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property),  i);	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
66	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  forAnnotations);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property),  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property),  forAnnotations);	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
67	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback);	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
68	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  false);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property),  false);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property),  false);	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
69	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property)).append( ": ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property)).append( ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property)).append( ": ");	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  not  a  statement	57	None	replace
70	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(localCount));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	39	None	replace
71	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
72	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(i));  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(i));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
73	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(propertyName));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
74	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(property));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
75	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(inferred));  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(inferred));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
76	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyName(property),    forAnnotations);    	non-compiled	[CE]  ')'  expected	27	None	replace
77	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  forAnnotations).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  forAnnotations).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  forAnnotations).toStringHelper(forAnnotations);	  sb.append(getPropertyName(property),    forAnnotations);    	non-compiled	[CE]  ')'  expected	27	None	replace
78	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  properties);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  properties);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  properties);	  sb.append(getPropertyName(property),    forAnnotations);    	non-compiled	[CE]  ')'  expected	27	None	replace
79	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  i  +  1);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  i  +  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  i  +  1);	  sb.append(getPropertyName(property),    i);    	non-compiled	[CE]  ')'  expected	24	None	replace
80	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  1);	  sb.append(getPropertyName(property),    i);    	non-compiled	[CE]  ')'  expected	24	None	replace
81	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property),  i);	  sb.append(getPropertyName(property),    i);    	non-compiled	[CE]  ')'  expected	24	None	replace
82	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  0);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  0);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  0);	  sb.append(getPropertyName(property),    i);    	non-compiled	[CE]  ')'  expected	24	None	replace
83	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  locale);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  locale);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  locale);	  sb.append(getPropertyName(property),    i);    	non-compiled	[CE]  ')'  expected	24	None	replace
84	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).toStringHelper(i);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
85	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).toStringHelper(this);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
86	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).toStringHelper(property);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
87	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
88	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).toStringHelper(inferred);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
89	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(localCount);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(localCount);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).toStringHelper(localCount);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
90	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(forAnnotations);	  sb.append(getNativeType(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	19	None	replace
91	[BUG]  [BUGGY]  sb.append(getClassName(property),  getPropertyType(property).toStringHelper());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property),  getPropertyType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property),  getPropertyType(property).toStringHelper());	  sb.append(getClassName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	45	None	replace
92	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getClassName(property).toStringHelper());  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getClassName(property).toStringHelper());  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getClassName(property).toStringHelper());  }	  sb.append(getClassName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	45	None	replace
93	[BUG]  [BUGGY]  sb.append(getClassName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property),  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(getClassName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	45	None	replace
94	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	37	None	replace
95	[BUG]  [BUGGY]  sb.append(getStringName(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	37	None	replace
96	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  ')'  expected	1	None	replace
97	[BUG]  [BUGGY]  sb.append(getPrototypeType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPrototypeType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPrototypeType(property).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  ')'  expected	1	None	replace
98	[BUG]  [BUGGY]  if(getImplicitPrototype()!=  null)  {  sb.append(getImplicitPrototype());  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(getImplicitPrototype()!=  null)  {  sb.append(getImplicitPrototype());  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(getImplicitPrototype()!=  null)  {  sb.append(getImplicitPrototype());  }	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  ')'  expected	64	None	replace
99	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeFallback());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeFallback());	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  ')'  expected	64	None	replace
100	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()  +  1);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()  +  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()  +  1);	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  ')'  expected	64	None	replace
101	[BUG]  [BUGGY]  if(getImplicitPrototype()!=  null)  {  sb.append(getImplicitPrototype());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getImplicitPrototype()  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(getImplicitPrototype()!=  null)  {  sb.append(getImplicitPrototype());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getImplicitPrototype()  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(getImplicitPrototype()!=  null)  {  sb.append(getImplicitPrototype());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getImplicitPrototype()	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  	64	None	replace
102	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).append(')');  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).append(')');  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).append(')');	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  ')'  expected	64	None	replace
103	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
104	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  ++i;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(property));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
105	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
106	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  ++i;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(i));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
107	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  ++i;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
108	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  ++i;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(this));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
109	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyNames));	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  ')'  expected	35	None	replace
110	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
111	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
112	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
113	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  break;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(property));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
114	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
115	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
116	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations);	  sb.append(getReferenceName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	60	None	replace
117	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getReferenceName(property).toStringHelper());  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getReferenceName(property).toStringHelper());  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getReferenceName(property).toStringHelper());  }	  sb.append(getReferenceName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	60	None	replace
118	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName()).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	21	None	replace
119	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	21	None	replace
120	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	3	None	replace
121	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	3	None	replace
122	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	3	None	replace
123	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelp  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelp  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelp	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  	3	None	replace
124	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(this);	  sb.append(getPropertyType(property).toStringHelper(this);    	non-compiled	[CE]  ')'  expected	32	None	replace
125	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(this);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getFunctionType(property).toStringHelper(this);	  sb.append(getPropertyType(property).toStringHelper(this);    	non-compiled	[CE]  ')'  expected	32	None	replace
126	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount);  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount);  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount);  }	  sb.append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  ')'  expected	29	None	replace
127	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	4	None	replace
128	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  ')'  expected	46	None	replace
129	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  i);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property),  i);	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  ')'  expected	55	None	replace
130	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  forAnnotations);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property),  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property),  forAnnotations);	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
131	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeFallback(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeFallback(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeFallback(forAnnotations));	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
132	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property));	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
133	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property)+ ": ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property)+ ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property)+ ": ");	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
134	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(property).toStringHelper(forAnnotations);  }	  sb.append(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
135	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(forAnnotations)  {  sb.append(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(forAnnotations)  {  sb.append(property).toStringHelper(forAnnotations);  }	  sb.append(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
136	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType);	  sb.append(getPropertyType(property).toStringHelper(nativeType);    	non-compiled	[CE]  not  a  statement	47	None	replace
137	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(nativeType);    	non-compiled	[CE]  not  a  statement	47	None	replace
138	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
139	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
140	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property)).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property)).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property)).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
141	[BUG]  [BUGGY]  sb.append(getStringValue(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property).toStringHelper(forAnnotations));	  sb.append(getStringValue(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	65	None	replace
142	[BUG]  [BUGGY]  sb.append(getStringValue(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property).toStringHelper(forAnnotations);	  sb.append(getStringValue(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	65	None	replace
143	[BUG]  [BUGGY]  sb.append(getStringValue(property),  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property),  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property),  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(getStringValue(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	65	None	replace
144	[BUG]  [BUGGY]  sb.append(getValue(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getValue(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getValue(property).toStringHelper(forAnnotations));	  sb.append(getStringValue(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	65	None	replace
145	[BUG]  [BUGGY]  sb.append(getPropertyValue(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyValue(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyValue(property).toStringHelper(forAnnotations));	  sb.append(getStringValue(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	65	None	replace
146	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	42	None	replace
147	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper());	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	42	None	replace
148	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper());	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	42	None	replace
149	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  getPropertyType(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property),  getPropertyType(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property),  getPropertyType(property));	  sb.append(getSimpleName(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
150	[BUG]  [BUGGY]  sb.append(getSimpleName(property)+ ": ");  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property)+ ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property)+ ": ");	  sb.append(getSimpleName(property));    	non-compiled	[CE]  ')'  expected	25	None	replace
151	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(i));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
152	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(localCount));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
153	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
154	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred));  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(inferred));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
155	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(property));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
156	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferredPrototype));  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferredPrototype));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(inferredPrototype));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
157	[BUG]  [BUGGY]  sb.append(getReturnType(property));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReturnType(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReturnType(property));	  sb.append(getFunctionType(property));    	non-compiled	[CE]  ')'  expected	8	None	replace
158	[BUG]  [BUGGY]  sb.append(getInstanceType(property));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getInstanceType(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getInstanceType(property));	  sb.append(getFunctionType(property));    	non-compiled	[CE]  ')'  expected	8	None	replace
159	[BUG]  [BUGGY]  sb.append(getFunctionType(property)).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getFunctionType(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getFunctionType(property)).toStringHelper(forAnnotations);	  sb.append(getFunctionType(property));    	non-compiled	[CE]  ')'  expected	8	None	replace
160	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType,  forAnnotations));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType,  forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType,  forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  ')'  expected	49	None	replace
161	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(false));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(false));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(false));	  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  ')'  expected	49	None	replace
162	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(ifAnnotations),    i);    	non-compiled	[CE]  ')'  expected	15	None	replace
163	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)+  1);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)+  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations)+  1);	  sb.append(getPropertyType(property).toStringHelper(ifAnnotations),    i);    	non-compiled	[CE]  ')'  expected	15	None	replace
164	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  +  i);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  +  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations)  +  i);	  sb.append(getPropertyType(property).toStringHelper(ifAnnotations),    i);    	non-compiled	[CE]  ')'  expected	15	None	replace
165	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount),  i);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount),  i);	  sb.append(getPropertyType(property).toStringHelper(ifAnnotations),    i);    	non-compiled	[CE]  ')'  expected	15	None	replace
166	[BUG]  [BUGGY]  sb.append(getNativeType(property)).append(':');  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).append(':');  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).append(':');	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
167	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append( ": ");  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).append( ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).append( ": ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
168	[BUG]  [BUGGY]  sb.append(getSimpleType(property)).append( ": ");  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property)).append( ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property)).append( ": ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
169	[BUG]  [BUGGY]  sb.append(getNativeType(property)).append( ":. ");  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).append( ":. ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).append( ":. ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
170	[BUG]  [BUGGY]  sb.append(getNativeType(property)).append( ".: ");  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).append( ".: ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).append( ".: ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
171	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(forAnnotations);	  sb.append(getSimpleName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	44	None	replace
172	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  getPropertyType(property).toStringHelper());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property),  getPropertyType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property),  getPropertyType(property).toStringHelper());	  sb.append(getSimpleName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	44	None	replace
173	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	13	None	replace
174	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(i));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(i));	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	16	None	replace
175	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(localCount));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(localCount));	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	16	None	replace
176	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(inferred));	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	16	None	replace
177	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(property));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(property));	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	16	None	replace
178	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(this));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(this));	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	16	None	replace
179	[BUG]  [BUGGY]  sb.append(getNativeType(property),  i  +  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  i  +  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  i  +  1);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  ')'  expected	17	None	replace
180	[BUG]  [BUGGY]  sb.append(getNativeType(property),  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  0);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  0);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  not  a  statement	17	None	replace
181	[BUG]  [BUGGY]  sb.append(getSimpleType(property),  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property),  i);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  not  a  statement	17	None	replace
182	[BUG]  [BUGGY]  sb.append(getNativeType(property)+  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)+  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)+  1);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  not  a  statement	17	None	replace
183	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	6	None	replace
184	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	6	None	replace
185	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  forAnnotations).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property),  forAnnotations).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property),  forAnnotations).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property),    forAnnotations);    	non-compiled	[CE]  not  a  statement	10	None	replace
186	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReturnType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	12	None	replace
187	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(requires));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(requires));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(requires));	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	16	None	replace
188	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper());  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper());  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper());  }	  sb.append(getReferenceName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	60	None	replace
189	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(inferred));	  sb.append(getSimpleName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	44	None	replace
190	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	40	None	replace
191	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	40	None	replace
192	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(requireAnnotations));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(requireAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(requireAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
193	[BUG]  [BUGGY]  sb.append(getStringValue(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property));	  sb.append(getStringValue(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	65	None	replace
194	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(nativeType);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property)).toStringHelper(nativeType);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	9	None	replace
195	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	9	None	replace
196	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	1	None	replace
197	[BUG]  [BUGGY]  sb.append(getImplicitReturnType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitReturnType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitReturnType(property).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	1	None	replace
198	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  else  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  else  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  }  else  {  sb.append( ", ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	1	None	replace
199	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property).toStringHelper(nativeType);	  sb.append(getPropertyType(property).toStringHelper(nativeType);    	non-compiled	[CE]  not  a  statement	47	None	replace
200	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(nativeType);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(nativeType);	  sb.append(getPropertyType(property).toStringHelper(nativeType);    	non-compiled	[CE]  not  a  statement	47	None	replace
201	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property)).append( ", ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property)).append( ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property)).append( ", ");	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
202	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property)+ ", ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property)+ ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property)+ ", ");	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
203	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper());	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
204	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	2	None	replace
205	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getNativeType(property)).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getNativeType(property)).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getNativeType(property)).toStringHelper(forAnnotations);  }	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	62	None	replace
206	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(nativeType);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).toStringHelper(nativeType);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	62	None	replace
207	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  inferred);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  inferred);	  sb.append(getPropertyName(property),    forAnnotations);    	non-compiled	[CE]  not  a  statement	27	None	replace
208	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  INVALID_PROTOTYPE);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property),  INVALID_PROTOTYPE);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property),  INVALID_PROTOTYPE);	  sb.append(getPropertyName(property),    forAnnotations);    	non-compiled	[CE]  not  a  statement	27	None	replace
209	[BUG]  [BUGGY]  sb.append(getNativeType(property),  INVALID_TYPE);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  INVALID_TYPE);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  INVALID_TYPE);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  not  a  statement	17	None	replace
210	[BUG]  [BUGGY]  sb.append(getNativeType(property),  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  1);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  1);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  not  a  statement	17	None	replace
211	[BUG]  [BUGGY]  sb.append(getNativeType(property),  INVALID_PROTOTYPE);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  INVALID_PROTOTYPE);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  INVALID_PROTOTYPE);	  sb.append(getNativeType(property),    i);    	non-compiled	[CE]  not  a  statement	17	None	replace
212	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	46	None	replace
213	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	46	None	replace
214	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  not  a  statement	64	None	replace
215	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName());	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  not  a  statement	64	None	replace
216	[BUG]  [BUGGY]  sb.append(getImplementedPrototypeFallback());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplementedPrototypeFallback());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplementedPrototypeFallback());	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  not  a  statement	64	None	replace
217	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeType(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediatePrototypeType(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediatePrototypeType(property));	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  not  a  statement	66	None	replace
218	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImmediateParentType(property));  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImmediateParentType(property));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImmediateParentType(property));  }	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  not  a  statement	66	None	replace
219	[BUG]  [BUGGY]  sb.append(getImmediateType(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateType(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateType(property));	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  not  a  statement	66	None	replace
220	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(this));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	53	None	replace
221	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName()).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName()).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	22	None	replace
222	[BUG]  [BUGGY]  sb.append(getSimpleType(property)).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property)).toStringHelper(forAnnotations);	  sb.append(getSimpleType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
223	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(requires));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(requires));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(requires));	  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
224	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(inferred);	  sb.append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	48	None	replace
225	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(inferred);	  sb.append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	48	None	replace
226	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(inferred);	  sb.append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	48	None	replace
227	[BUG]  [BUGGY]  sb.append(getSimpleName(property)+ ", ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property)+ ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property)+ ", ");	  sb.append(getSimpleName(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
228	[BUG]  [BUGGY]  sb.append(property).toStringHelper(property);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(property).toStringHelper(property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(property).toStringHelper(property);	  sb.append(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	54	None	replace
229	[BUG]  [BUGGY]  sb.append(property).toStringHelper(this);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(property).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(property).toStringHelper(this);	  sb.append(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	54	None	replace
230	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	5	None	replace
231	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	5	None	replace
232	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	5	None	replace
233	[BUG]  [BUGGY]  sb.append(getLocalName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getLocalName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getLocalName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
234	[BUG]  [BUGGY]  sb.append(getLocalFunctionName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getLocalFunctionName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getLocalFunctionName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
235	[BUG]  [BUGGY]  sb.append(getLocalName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getLocalName(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getLocalName(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
236	[BUG]  [BUGGY]  sb.append(getReferenceName(property)+ ", ");  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property)+ ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property)+ ", ");	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
237	[BUG]  [BUGGY]  sb.append(getReferenceName(property)).append( ", ");  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property)).append( ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property)).append( ", ");	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
238	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper());  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper());	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
239	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(this));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(this));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
240	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(nativeType));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	39	None	replace
241	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getNativeType(property)).append( ":   ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getNativeType(property)).append( ":   ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getNativeType(property)).append( ":   ");  }	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
242	[BUG]  [BUGGY]  sb.append(getNativeType(property)).append( ":n ");  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).append( ":n ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).append( ":n ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
243	[BUG]  [BUGGY]  sb.append(getNativeType(property)).append( ", ");  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property)).append( ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property)).append( ", ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
244	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount,  forAnnotations));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount,  forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(localCount,  forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
245	[BUG]  [BUGGY]  sb.append(getInstanceType(property).toStringHelper());  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getInstanceType(property).toStringHelper());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getInstanceType(property).toStringHelper());	  sb.append(getFunctionType(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	43	None	replace
246	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(localCount);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(localCount);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(localCount);	  sb.append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  ')'  expected	29	None	replace
247	[BUG]  [BUGGY]  sb.append(getName(property)).append( ", ");  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property)).append( ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property)).append( ", ");	  sb.append(getName(property));    	non-compiled	[CE]  ')'  expected	26	None	replace
248	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(i);	  sb.append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  ')'  expected	28	None	replace
249	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property).toStringHelper(i);	  sb.append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  ')'  expected	28	None	replace
250	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  else  {  sb.append( ": ");  sb.append(getImplicitPrototypeType(property).toStringHelp  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  else  {  sb.append( ": ");  sb.append(getImplicitPrototypeType(property).toStringHelp  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!forAnnotations)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  else  {  sb.append( ": ");  sb.append(getImplicitPrototypeType(property).toStringHelp	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  	3	None	replace
251	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	3	None	replace
252	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  ')'  expected	31	None	replace
253	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  ')'  expected	31	None	replace
254	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  i);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  i);	  sb.append(getPropertyType(property).toStringHelper(ifAnnotations),    i);    	non-compiled	[CE]  ')'  expected	15	None	replace
255	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
256	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	38	None	replace
257	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(i));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  ')'  expected	33	None	replace
258	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(inferredPrototype));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(inferredPrototype));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(inferredPrototype));	  sb.append(getClassName(property).toStringHelper());    	non-compiled	[CE]  ')'  expected	45	None	replace
259	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(if(forAnnotations))  {  sb.append( ", ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(if(forAnnotations))  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property).toStringHelper(if(forAnnotations))  {  sb.append( ", ");  }	  sb.append(getClassName(property).toStringHelper());    	non-compiled	[CE]  	45	None	replace
260	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  ++i;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
261	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  ++i;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
262	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  ')'  expected	6	None	replace
263	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeFallback(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeFallback(property).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  ')'  expected	6	None	replace
264	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	4	None	replace
265	[BUG]  [BUGGY]  sb.append(getNativeType(property),  new  StringBuilder());  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  new  StringBuilder());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  new  StringBuilder());	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
266	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName()).toStringHelper(property));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName()).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	21	None	replace
267	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(localCount));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	34	None	replace
268	[BUG]  [BUGGY]  sb.append(getStringName(property).toStringHelper(localCount));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringName(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	34	None	replace
269	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(this);	  sb.append(getPropertyType(property).toStringHelper(this);    	non-compiled	[CE]  ')'  expected	32	None	replace
270	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(this));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleType(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	23	None	replace
271	[BUG]  [BUGGY]  sb.append(getString(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getString(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getString(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  ')'  expected	35	None	replace
272	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	21	None	replace
273	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	21	None	replace
274	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	21	None	replace
275	[BUG]  [BUGGY]  sb.append(getNativeType(PROPERTY)).append( ": ");  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(PROPERTY)).append( ": ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(PROPERTY)).append( ": ");	  sb.append(getNativeType(property)).append(   ":   ");    	non-compiled	[CE]  ')'  expected	20	None	replace
276	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
277	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
278	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	2	None	replace
279	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
280	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  ')'  expected	41	None	replace
281	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(inferred);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(inferred);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(inferred);	  sb.append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  ')'  expected	48	None	replace
282	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  ')'  expected	12	None	replace
283	[BUG]  [BUGGY]  sb.append(getName(property),  forAnnotations);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(property),  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(property),  forAnnotations);	  sb.append(getPropertyName(property),    forAnnotations);    	non-compiled	[CE]  ')'  expected	27	None	replace
284	[BUG]  [BUGGY]  sb.append(getName(),  forAnnotations);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getName(),  forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getName(),  forAnnotations);	  sb.append(getPropertyType(property),    forAnnotations);    	non-compiled	[CE]  ')'  expected	10	None	replace
285	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));  }	  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  ')'  expected	11	None	replace
286	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	4	None	replace
287	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  else  {  sb.append( ", ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  else  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(sb.length()  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  }  else  {  sb.append( ", ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	4	None	replace
288	[BUG]  [BUGGY]  sb.append(getReferenceName(property,  i));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property,  i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property,  i));	  sb.append(getReferenceName(property));    	non-compiled	[CE]  ')'  expected	56	None	replace
289	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property,  i));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeName(property,  i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeName(property,  i));	  sb.append(getImplicitPrototypeName(property));    	non-compiled	[CE]  ')'  expected	55	None	replace
290	[BUG]  [BUGGY]  sb.append(property).toStringHelper(propertyName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(property).toStringHelper(propertyName);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(property).toStringHelper(propertyName);	  sb.append(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	54	None	replace
291	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  ==  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(property));    	non-compiled	[CE]  ')'  expected	5	None	replace
292	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(UNKNOWN_TYPE));	  sb.append(getSimpleType(property));    	non-compiled	[CE]  ')'  expected	18	None	replace
293	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(this));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	23	None	replace
294	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType()).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  ')'  expected	23	None	replace
295	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferredAnnotations));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferredAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getReferenceName(property).toStringHelper(inferredAnnotations));	  sb.append(getReferenceName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	53	None	replace
296	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	3	None	replace
297	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	3	None	replace
298	[BUG]  [BUGGY]  sb.append(getStringValue(property)).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	9	None	replace
299	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(this);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(this);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(this);	  sb.append(getPropertyType(property).toStringHelper(this);    	non-compiled	[CE]  ')'  expected	32	None	replace
300	[BUG]  [BUGGY]  sb.append(getNativeType(property),  PROPERTY);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  PROPERTY);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  PROPERTY);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
301	[BUG]  [BUGGY]  sb.append(getNativeType(property),  property);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property),  property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property),  property);	  sb.append(getNativeType(property),    null);    	non-compiled	[CE]  ')'  expected	51	None	replace
302	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getNativeType(property).toStringHelper(forAnnotations));  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getNativeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getNativeType(property).toStringHelper(forAnnotations));  }	  sb.append(getNativeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	16	None	replace
303	[BUG]  [BUGGY]  if(getImmediateParentType(property)!=  null)  {  sb.append(getImmediateParentType(property));  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(getImmediateParentType(property)!=  null)  {  sb.append(getImmediateParentType(property));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(getImmediateParentType(property)!=  null)  {  sb.append(getImmediateParentType(property));  }	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
304	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(getImmediateParentType(property));  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(sb!=  null)  {  sb.append(getImmediateParentType(property));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(sb!=  null)  {  sb.append(getImmediateParentType(property));  }	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
305	[BUG]  [BUGGY]  sb.append(getImmediateParentType(property)).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType(property)).toStringHelper(forAnnotations);	  sb.append(getImmediateParentType(property));    	non-compiled	[CE]  ')'  expected	66	None	replace
306	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(nativeType));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  ')'  expected	59	None	replace
307	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  ')'  expected	31	None	replace
308	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  forAnnotations));  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  forAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
309	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getImplicitPrototypeType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  ')'  expected	63	None	replace
310	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(inferred));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(inferred));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType()).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  ')'  expected	14	None	replace
311	[BUG]  [BUGGY]  sb.append(getStringValue(property),  i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getStringValue(property),  i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getStringValue(property),  i);	  sb.append(getPropertyType(property),    i);    	non-compiled	[CE]  ')'  expected	7	None	replace
312	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	40	None	replace
313	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(i  >  0)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  ')'  expected	1	None	replace
314	[BUG]  [BUGGY]  sb.append(getImplicitReferenceType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitReferenceType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitReferenceType(property).toStringHelper(forAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(i));    	non-compiled	[CE]  ')'  expected	1	None	replace
315	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property)).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property)).toStringHelper(forAnnotations);	  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  ')'  expected	49	None	replace
316	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(localCount));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(localCount));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImmediateParentType()).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  ')'  expected	13	None	replace
317	[BUG]  [BUGGY]  sb.append(getSimpleName(property,  i));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property,  i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property,  i));	  sb.append(getSimpleName(property));    	non-compiled	[CE]  ')'  expected	25	None	replace
318	[BUG]  [BUGGY]  sb.append(getSimpleName(property)).append( ", ");  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property)).append( ", ");  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property)).append( ", ");	  sb.append(getSimpleName(property));    	non-compiled	[CE]  ')'  expected	25	None	replace
319	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(i);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(i);	  sb.append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  ')'  expected	28	None	replace
320	[BUG]  [BUGGY]  sb.append(getClassName(property));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getClassName(property));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getClassName(property));	  sb.append(getName(property));    	non-compiled	[CE]  ')'  expected	26	None	replace
321	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback(forAnnotations));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback(forAnnotations));	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
322	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback());  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback());	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
323	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property,  i));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototypeType(property,  i));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototypeType(property,  i));	  sb.append(getImplicitPrototypeType(property));    	non-compiled	[CE]  ')'  expected	57	None	replace
324	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyNames));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  ')'  expected	22	None	replace
325	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(i);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(i);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getNativeType(property).toStringHelper(i);	  sb.append(getNativeType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	62	None	replace
326	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyNames);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyNames);  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getImplicitPrototype()).toStringHelper(propertyNames);	  sb.append(getPropertyType(property).toStringHelper(propertyNames);    	non-compiled	[CE]  ')'  expected	30	None	replace
327	[BUG]  [BUGGY]  sb.append(')');  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(')');  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(')');	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  not  a  statement	64	None	replace
328	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
329	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  else  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  else  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	if(inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  }  else  {  sb.append( ", ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
330	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }      [BUGGY]  sb.append(getSimpleName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	sb.append(getSimpleName(property),  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(getSimpleName(property).toStringHelper());    	non-compiled	[CE]  not  a  statement	44	None	replace
