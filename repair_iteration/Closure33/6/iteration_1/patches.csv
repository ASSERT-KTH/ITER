bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
2	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
3	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
4	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
6	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ": ");  }	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
19	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(inferred)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  if(isNativeType(propertyNames))  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(isNativeType(propertyNames))  {  if(!inferred)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyNames))  {  if(!inferred)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  if(isNativeType(property))  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(isNativeType(property))  {  if(!inferred)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(property))  {  if(!inferred)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  if(isNativeType(propertyName))  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(isNativeType(propertyName))  {  if(!inferred)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyName))  {  if(!inferred)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
32	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
33	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
34	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
35	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
45	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
46	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
47	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
48	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
49	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
51	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
59	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
60	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
63	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
70	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(property));	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property);  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(property);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
78	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
79	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
80	[BUG]  [BUGGY]  i  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  i  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
81	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	13	None	replace
83	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
84	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
85	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
86	[BUG]  [BUGGY]  if(forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(forAnnotations)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  sb.append(propertyName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(propertyName);  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyName);	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
88	[BUG]  [BUGGY]  sb.append(nativeType.toString());  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(nativeType.toString());  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(nativeType.toString());	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
89	[BUG]  [BUGGY]  sb.append(':');  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(':');  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(':');	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
90	[BUG]  [BUGGY]  sb.append( "  }   ");  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( "  }   ");  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }   ");	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
91	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ", ");  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ", ");	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
92	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
93	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
94	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
95	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
96	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
97	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
98	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
99	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
100	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
101	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
102	[BUG]  [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	9	None	replace
103	[BUG]  [BUGGY]  sb.append( ":n ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ":n ");  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":n ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
104	[BUG]  [BUGGY]  sb.append( ": ".equals(propertyName));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ": ".equals(propertyName));  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ".equals(propertyName));	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
105	[BUG]  [BUGGY]  sb.append( ":. ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ":. ");  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":. ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
106	[BUG]  [BUGGY]  sb.append( ":? ");  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ":? ");  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":? ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
107	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
108	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
109	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
110	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
111	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
112	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
113	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
114	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
115	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  not  a  statement	12	None	replace
116	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
117	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
118	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
119	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
120	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
121	[BUG]  [BUGGY]  sb.append('  }  ');  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append('  }  ');  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append('  }  ');	      	non-compiled	[CE]  not  a  statement	8	None	replace
122	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(properties));	      	non-compiled	[CE]  not  a  statement	8	None	replace
123	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
124	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
125	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
126	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
127	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
128	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
129	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  ')'  expected	3	None	replace
130	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
131	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  0)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
132	[BUG]  [BUGGY]  i  =  0;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  i  =  0;  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  0;	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
133	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
134	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
135	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
136	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
137	[BUG]  [BUGGY]  sb.append( ",...   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ",...   ");  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",...   ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
138	[BUG]  [BUGGY]  sb.append( ": ".);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append( ": ".);  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ".);	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
139	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
140	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
141	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  not  a  statement	13	None	replace
142	[BUG]  [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
143	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  sb.append(getPropertyName(property).toStringHelper());  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper());	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
144	[BUG]  [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
145	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  localCount)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
146	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  localCount)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
147	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  localCount)  {  ++i;  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
148	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
149	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
150	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
151	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
152	[BUG]  [BUGGY]  i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	9	None	replace
153	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
154	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
155	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
156	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
157	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
158	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
159	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
160	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...   ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...   ");  }  [BUGGY]    if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...   ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
