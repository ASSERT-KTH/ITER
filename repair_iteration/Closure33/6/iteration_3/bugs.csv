bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  not  a  statement	159	None	replace
2	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  not  a  statement	159	None	replace
3	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  not  a  statement	159	None	replace
4	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  not  a  statement	159	None	replace
5	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  not  a  statement	130	None	replace
6	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  not  a  statement	130	None	replace
7	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  not  a  statement	130	None	replace
8	[BUG]  [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  not  a  statement	130	None	replace
9	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  not  a  statement	130	None	replace
10	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  not  a  statement	130	None	replace
11	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
12	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
13	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >  0)  {  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
14	[BUG]  [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
15	[BUG]  [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
16	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
17	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  not  a  statement	69	None	replace
18	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  not  a  statement	69	None	replace
19	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  not  a  statement	69	None	replace
20	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  -  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  -  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  -  1;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  not  a  statement	69	None	replace
21	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  >  0;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  >  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  >  0;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  not  a  statement	69	None	replace
22	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  *  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  *  2;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES  *  2;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  not  a  statement	69	None	replace
23	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
24	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
25	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
26	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
27	[BUG]  [BUGGY]  if(!inferred  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	117	None	replace
28	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	117	None	replace
29	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	117	None	replace
30	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	117	None	replace
31	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	117	None	replace
32	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	117	None	replace
33	[BUG]  [BUGGY]  if(!inferred  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	134	None	replace
34	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	134	None	replace
35	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	134	None	replace
36	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	134	None	replace
37	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	134	None	replace
38	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  not  a  statement	134	None	replace
39	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	85	None	replace
40	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	85	None	replace
41	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	85	None	replace
42	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	85	None	replace
43	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
44	[BUG]  [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
45	[BUG]  [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
46	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
47	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(property));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	31	None	replace
48	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	31	None	replace
49	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
50	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
51	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
52	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
53	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
54	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
55	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
56	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
57	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
58	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
59	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
60	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",...   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
62	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
63	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
64	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
65	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
66	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
67	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
68	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
69	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
70	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
71	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
72	[BUG]  [BUGGY]  if(!inferred  &&  propertyNames.length  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  propertyNames.length  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  propertyNames.length  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
73	[BUG]  [BUGGY]  sb.append( ",...n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",...n ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",...n ");	  sb.append(   ",...       ");    	non-compiled	[CE]  <identifier>  expected	137	None	replace
74	[BUG]  [BUGGY]  sb.append( ",...? ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",...? ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",...? ");	  sb.append(   ",...       ");    	non-compiled	[CE]  <identifier>  expected	137	None	replace
75	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
76	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
77	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
78	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
79	[BUG]  [BUGGY]  if(i  ==  localCount)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
80	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
81	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
82	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
83	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append(	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
84	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
85	[BUG]  [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
86	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(inferred)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
87	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!inferred)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
88	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(inferred)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
89	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
90	[BUG]  [BUGGY]  sb.append( ": ").equals(propertyName));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").equals(propertyName));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").equals(propertyName));	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
91	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").append(propertyName).append('n');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").append(propertyName).append('n');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
92	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append(':');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").append(propertyName).append(':');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").append(propertyName).append(':');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
93	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append('/');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").append(propertyName).append('/');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").append(propertyName).append('/');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
94	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
95	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
96	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
97	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
98	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
99	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
103	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
104	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
105	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
106	[BUG]  [BUGGY]  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
107	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
108	[BUG]  [BUGGY]  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
109	[BUG]  [BUGGY]  if(propertyNames  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
110	[BUG]  [BUGGY]  if(!inferred  &&  propertyNames.length  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  propertyNames.length  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  propertyNames.length  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  propertyName.length(),  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  propertyName.length(),  0);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  propertyName.length(),  0);	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
112	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
113	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(sb,  0,  propertyName.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(sb,  0,  propertyName.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(sb,  0,  propertyName.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  0);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  0);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  0);	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  0);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  0);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  0);	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
116	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
117	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
118	[BUG]  [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
119	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
120	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
121	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
122	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	11	None	replace
123	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	11	None	replace
124	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	11	None	replace
125	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	11	None	replace
126	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  ==  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  ==  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  ==  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
127	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
128	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
129	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
130	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
131	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
132	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
133	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties),  forAnnotations);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(properties),  forAnnotations);	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
134	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
135	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
136	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
137	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
138	[BUG]  [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	112	None	replace
139	[BUG]  [BUGGY]  if(!inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	112	None	replace
140	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	112	None	replace
141	[BUG]  [BUGGY]  if(!inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	112	None	replace
142	[BUG]  [BUGGY]  sb.append(className);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(className);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(className);	  sb.append(propertyName);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
143	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
144	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleType(property).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
145	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleName(property).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
146	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName()).toStringHelper(property);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName()).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
147	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	39	None	replace
148	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
149	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
150	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
151	[BUG]  [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  MAX_PRETTY_PRINTED_PROPERTIES;	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
152	[BUG]  [BUGGY]  if(inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
153	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
154	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	18	None	replace
155	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	18	None	replace
156	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
157	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
158	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
159	[BUG]  [BUGGY]  if(i  >=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
160	[BUG]  [BUGGY]  if(i!=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
161	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(property,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(property,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(property,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
162	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
163	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
164	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
165	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
166	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
167	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  property  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
168	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
169	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
170	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
171	[BUG]  [BUGGY]  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
172	[BUG]  [BUGGY]  if(inferred)  {  if(isNativeType(propertyName))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(isNativeType(propertyName))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(isNativeType(propertyName))  {  ++i;  }	  if(isNativeType(propertyName))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
173	[BUG]  [BUGGY]  if(propertyName!=  null)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName!=  null)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName!=  null)  {  if(!inferred)  {  ++i;  }	  if(isNativeType(propertyName))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
174	[BUG]  [BUGGY]  if(isNativeType(propertyName)||  isNativeType(propertyName))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyName)||  isNativeType(propertyName))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyName)||  isNativeType(propertyName))  {  ++i;  }	  if(isNativeType(propertyName))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
175	[BUG]  [BUGGY]  if(inferred)  {  if(!isNativeType(propertyName))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!isNativeType(propertyName))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!isNativeType(propertyName))  {  ++i;  }	  if(isNativeType(propertyName))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
176	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
177	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
178	[BUG]  [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
179	[BUG]  [BUGGY]  i  =  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  1;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
180	[BUG]  [BUGGY]  i  =  -1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  -1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  -1;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
181	[BUG]  [BUGGY]  inferred  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  inferred  =  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	inferred  =  0;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
182	[BUG]  [BUGGY]  i  =  0L;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  0L;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  0L;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
183	[BUG]  [BUGGY]  i  =  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  2;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  2;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
184	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
185	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
186	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
187	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
188	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
189	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
190	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
191	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
192	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
193	[BUG]  [BUGGY]  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
194	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
195	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
196	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
197	[BUG]  [BUGGY]  if(propertyNames  ==  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames  ==  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames  ==  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
199	[BUG]  [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
200	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
201	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
202	[BUG]  [BUGGY]  if(!inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
203	[BUG]  [BUGGY]  if(inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
204	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
205	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
206	[BUG]  [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.contains(propertyName))  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
207	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
208	[BUG]  [BUGGY]  if(!propertyNames.isEmpty())  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.isEmpty())  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.isEmpty())  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
209	[BUG]  [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(i  >  0)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(i  >  0)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.contains(propertyName))  {  if(i  >  0)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
210	[BUG]  [BUGGY]  if(!propertyNames.isEmpty())  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.isEmpty())  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.isEmpty())  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
211	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
212	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
213	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
214	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINT_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINT_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINT_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
215	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
216	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
217	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
218	[BUG]  [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
219	[BUG]  [BUGGY]  if(!inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
220	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
221	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
222	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
223	[BUG]  [BUGGY]  if(inferred)  {  if(isNativeType(property))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(isNativeType(property))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(isNativeType(property))  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
224	[BUG]  [BUGGY]  if(isNativeType(property)||  isNativeType(property))  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(property)||  isNativeType(property))  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(property)||  isNativeType(property))  {  if(!inferred)  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
225	[BUG]  [BUGGY]  if(inferred)  {  if(!isNativeType(property))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!isNativeType(property))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!isNativeType(property))  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
226	[BUG]  [BUGGY]  if(isNativeType(property)||  isNativeType(property))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(property)||  isNativeType(property))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(property)||  isNativeType(property))  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
227	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
228	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
229	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
230	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
231	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
232	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
233	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
234	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
235	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
236	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  localCount)  {  ++i;  }	  if(i!=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
237	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",...   ");    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
238	[BUG]  [BUGGY]  i  +=  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  2;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  2;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
239	[BUG]  [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
240	[BUG]  [BUGGY]  i  +=  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  1;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
241	[BUG]  [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  2;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  2;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
242	[BUG]  [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
243	[BUG]  [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  *  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  *  2;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  MAX_PRETTY_PRINTED_PROPERTIES  *  2;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
244	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
245	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
246	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
247	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
248	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
249	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
250	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
251	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
252	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
253	[BUG]  [BUGGY]  if(i  <  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
254	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  <  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  <  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  <  0)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
255	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
256	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
257	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
258	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
259	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }	  if(i    >=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
260	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  ++i;  }	  if(i    >=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
261	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }	  if(i!=    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
262	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
263	[BUG]  [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
264	[BUG]  [BUGGY]  if(!propertyNames.isEmpty())  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.isEmpty())  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.isEmpty())  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
265	[BUG]  [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
266	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
267	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
268	[BUG]  [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.contains(propertyName))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
269	[BUG]  [BUGGY]  sb.append( "  }   ").append(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }   ").append(i);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }   ").append(i);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
270	[BUG]  [BUGGY]  sb.append( ",  }   ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",  }   ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
271	[BUG]  [BUGGY]  sb.append( "  }  : ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }  : ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }  : ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
272	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }   ").append(i  +  1);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }   ").append(i  +  1);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
273	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }   ").append(propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }   ").append(propertyName);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
274	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(i    >=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
275	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(i    >=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
276	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
277	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":.   ");    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
278	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":.   ");    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
279	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
280	[BUG]  [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
281	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
282	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
283	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
284	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
285	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
286	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
287	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
288	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
289	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
290	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
291	[BUG]  [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
292	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
293	[BUG]  [BUGGY]  if(inferred)  {  if(isNativeType(propertyNames))  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(isNativeType(propertyNames))  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(isNativeType(propertyNames))  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
294	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!inferred)  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
295	[BUG]  [BUGGY]  if(isNativeType(propertyNames)||  isNativeType(propertyNames))  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyNames)||  isNativeType(propertyNames))  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyNames)||  isNativeType(propertyNames))  {  if(!inferred)  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
296	[BUG]  [BUGGY]  if(isNativeType(propertyNames))  {  if(inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyNames))  {  if(inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyNames))  {  if(inferred)  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
297	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
298	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  propertyName,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  propertyName,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  propertyName,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  propertyName,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  propertyName,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  propertyName,  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
301	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  propertyName,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  propertyName,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  propertyName,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(className,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(className,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(className,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  className);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  className);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  className);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
304	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
305	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
306	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
307	[BUG]  [BUGGY]  if(propertyNames  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
308	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
309	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
310	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
311	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	19	None	replace
312	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	19	None	replace
313	[BUG]  [BUGGY]  i  =  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  <  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
314	[BUG]  [BUGGY]  i  =  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
315	[BUG]  [BUGGY]  i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
316	[BUG]  [BUGGY]  i  =  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
317	[BUG]  [BUGGY]  i  =  i  +  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  +  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  +  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
318	[BUG]  [BUGGY]  i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES  -  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  >  MAX_PRETTY_PRINTED_PROPERTIES  -  1;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
319	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
320	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
321	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
322	[BUG]  [BUGGY]  if(inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
323	[BUG]  [BUGGY]  if(!propertyNames.contains( ": "))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.contains( ": "))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.contains( ": "))  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
324	[BUG]  [BUGGY]  if(!propertyNames.isEmpty())  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!propertyNames.isEmpty())  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!propertyNames.isEmpty())  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
325	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
326	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
327	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  i);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  i);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
328	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  i);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  i);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
329	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  propertyName.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  propertyName.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  propertyName.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  1);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  1);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
333	[BUG]  [BUGGY]  System.arraycopy(localCount,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(localCount,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(localCount,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
334	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
335	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
336	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
337	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
338	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
339	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
340	[BUG]  [BUGGY]  i  =  inferred;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  inferred;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  inferred;	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
341	[BUG]  [BUGGY]  if(i  ==  inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  inferred)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
342	[BUG]  [BUGGY]  if(i!=  inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  inferred)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
343	[BUG]  [BUGGY]  if(peek)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(peek)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(peek)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
344	[BUG]  [BUGGY]  if(inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
345	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
346	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
347	[BUG]  [BUGGY]  if(!padding)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!padding)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!padding)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
348	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
349	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
350	[BUG]  [BUGGY]  sb.append( ": ".equals(propertyName)?   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ".equals(propertyName)?   ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ".equals(propertyName)?   ");	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
351	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
352	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
353	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
354	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
355	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
356	[BUG]  [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
357	[BUG]  [BUGGY]  i  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
358	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	143	None	replace
359	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName(property).toStringHelper());	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	143	None	replace
360	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	143	None	replace
361	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	143	None	replace
362	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
363	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
364	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
365	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
366	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(nativeType).toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(nativeType).toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
367	[BUG]  [BUGGY]  sb.append(propertyName.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyName.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyName.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
368	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(nativeType));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(nativeType));	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
369	[BUG]  [BUGGY]  sb.append(getNativeType().toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType().toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType().toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
370	[BUG]  [BUGGY]  sb.append(getPrototypeFallback().toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPrototypeFallback().toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPrototypeFallback().toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
371	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	128	None	replace
372	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	96	None	replace
373	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
374	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append( ": ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
375	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ":. ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append( ":. ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ":. ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
376	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
377	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
378	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
379	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
380	[BUG]  [BUGGY]  if(inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
381	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	34	None	replace
382	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper());	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	34	None	replace
383	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
384	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
385	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
386	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >    0)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
387	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",n ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
388	[BUG]  [BUGGY]  sb.append(',');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(',');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(',');	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
389	[BUG]  [BUGGY]  i  >  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  >  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >  0;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
390	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES.length;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES.length;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
391	[BUG]  [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
392	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
393	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
394	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
395	[BUG]  [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(forAnnotations)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
396	[BUG]  [BUGGY]  i  =  forAnnotations;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  forAnnotations;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  forAnnotations;	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
397	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
398	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
399	[BUG]  [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
400	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
401	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
402	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(i!=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
403	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
404	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
405	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
406	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
407	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
408	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append( ": ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
409	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ".: ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append( ".: ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append( ".: ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
410	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getFunctionType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
411	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
412	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName()).toStringHelper(property));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
413	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleType(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
414	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
415	[BUG]  [BUGGY]  if(inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
416	[BUG]  [BUGGY]  if(inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
417	[BUG]  [BUGGY]  if(inferred  ||  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
418	[BUG]  [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
419	[BUG]  [BUGGY]  if(inferred  ||  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
420	[BUG]  [BUGGY]  if(inferred  ||  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
421	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...       ");    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
422	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
423	[BUG]  [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
424	[BUG]  [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
425	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
426	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
427	[BUG]  [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
428	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
429	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
430	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
431	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
432	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
433	[BUG]  [BUGGY]  sb.append( ":null ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ":null ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":null ");	  sb.append(   ":n   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
434	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getFunctionType(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getFunctionType(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
435	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getReturnType(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getReturnType(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
436	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleName(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleName(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
437	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
438	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
439	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
440	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
441	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
442	[BUG]  [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
443	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
444	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
445	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
446	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!forAnnotations)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
447	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(forAnnotations)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
448	[BUG]  [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
449	[BUG]  [BUGGY]  if(i  ==  0)  {  if(forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  if(forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  if(forAnnotations)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
450	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(!forAnnotations)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
451	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(i    <    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
452	[BUG]  [BUGGY]  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
453	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
454	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
455	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MIN_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MIN_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MIN_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
456	[BUG]  [BUGGY]  sb.toString());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.toString());	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
457	[BUG]  [BUGGY]  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i!=  MAX_PRETTY_PRINTED_PROPERTIES;	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
458	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleType(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
459	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getFunctionType(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
460	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getClassName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
461	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName()).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName()).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
462	[BUG]  [BUGGY]  sb.append( ",: ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",: ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",: ");	  sb.append(   ":   ".);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
463	[BUG]  [BUGGY]  sb.append( ".: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ".: ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ".: ");	  sb.append(   ":   ".);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
464	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
465	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
466	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
467	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
468	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
469	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	21	None	replace
470	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	120	None	replace
471	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	120	None	replace
472	[BUG]  [BUGGY]  if(i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
473	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
474	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  <identifier>  expected	159	None	replace
475	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  <identifier>  expected	159	None	replace
476	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",...	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  <identifier>  expected	159	None	replace
477	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
478	[BUG]  [BUGGY]  sb.append(getSimplePrototypeName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimplePrototypeName(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimplePrototypeName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
479	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(nativeType).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
480	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
481	[BUG]  [BUGGY]  sb.append( ".   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ".   ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ".   ");	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
482	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
483	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
484	[BUG]  [BUGGY]  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >  0)  {  ++i;  }	  if(i    >=    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
485	[BUG]  [BUGGY]  sb.append( ":   ".equals(property));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ":   ".equals(property));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":   ".equals(property));	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
486	[BUG]  [BUGGY]  sb.append( ":   ").append(propertyName).append(')');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ":   ").append(propertyName).append(')');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":   ").append(propertyName).append(')');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
487	[BUG]  [BUGGY]  if(i  <  0  ||  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0  ||  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
488	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType),  nativeType.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(nativeType),  nativeType.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(nativeType),  nativeType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
489	[BUG]  [BUGGY]  sb.append(interfaceType.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(interfaceType.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(interfaceType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
490	[BUG]  [BUGGY]  sb.append(name.toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(name.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(name.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
491	[BUG]  [BUGGY]  sb.append(type.toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(type.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(type.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
492	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
493	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
494	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
495	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
496	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
497	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
498	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
499	[BUG]  [BUGGY]  if(isNativeType(property)&&!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(property)&&!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(property)&&!inferred)  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
500	[BUG]  [BUGGY]  if(isNativeType(property)||  nativeType)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(property)||  nativeType)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(property)||  nativeType)  {  if(!inferred)  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
501	[BUG]  [BUGGY]  i  =  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i!=  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
502	[BUG]  [BUGGY]  i  =  i  >>  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  >>  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  >>  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
503	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",... ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...       ");    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
504	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",... ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...       ");    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
505	[BUG]  [BUGGY]  sb.append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append('n');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append('n');	  sb.append(propertyName);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
506	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
507	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
508	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
509	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
510	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
511	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
512	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toString());	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
513	[BUG]  [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
514	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
515	[BUG]  [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
516	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
517	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
518	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
519	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
520	[BUG]  [BUGGY]  sb.append(  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	128	None	replace
521	[BUG]  [BUGGY]  sb.append( ") ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ") ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ") ");	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	128	None	replace
522	[BUG]  [BUGGY]  i  +=  localCount;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  localCount;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  localCount;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
523	[BUG]  [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  propertyNames;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  propertyNames;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  MAX_PRETTY_PRINTED_PROPERTIES  +  propertyNames;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
524	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  localCount)  {  ++i;  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
525	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
526	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
527	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
528	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
529	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
530	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
531	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
532	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
533	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
534	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
535	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
536	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
537	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
538	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
539	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
540	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
541	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toString  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toString  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toString	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
542	[BUG]  [BUGGY]  i  <  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  0)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
543	[BUG]  [BUGGY]  if(i  <  0  ||  localCount  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0  ||  localCount  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0  ||  localCount  >  0)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
544	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >    0)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
545	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    >    0)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
546	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  ++i;  }	  if(i    >    0)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
547	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property)).toStringHelper(forAnnotations);	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
548	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
549	[BUG]  [BUGGY]  if(i!=  -1)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  -1)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  -1)  {  ++i;  }	  if(i!=    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
550	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
551	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
552	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
553	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
554	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
555	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  +  1);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
556	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >  0)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
557	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
558	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
559	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
560	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
561	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
562	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "   ");  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
563	[BUG]  [BUGGY]  i  =  localCount  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  localCount  -  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  localCount  -  1;	  if(i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	145	None	replace
564	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }	  if(i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	145	None	replace
565	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }	  if(i!=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
566	[BUG]  [BUGGY]  sb.append( ",  [ ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",  [ ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",  [ ");	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
567	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(',');  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
568	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",... ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
569	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
570	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTS,  propertyName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTS,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTS,  propertyName);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
571	[BUG]  [BUGGY]  if(inferred)  {  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  <  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    <    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
572	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "] ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
573	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
574	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".,');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".,');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".,');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
575	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
576	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  for(int  i  =  0;  i  <  localCount;  i++)  {  System.arraycopy(propertyName,  0,  sb.length(),  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  for(int  i  =  0;  i  <  localCount;  i++)  {  System.arraycopy(propertyName,  0,  sb.length(),  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  for(int  i  =  0;  i  <  localCount;  i++)  {  System.arraycopy(propertyName,  0,  sb.length(),	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
577	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  for(int  i  =  0;  i  <  localCount;  ++i)  {  System.arraycopy(propertyName,  0,  sb.length(),  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  for(int  i  =  0;  i  <  localCount;  ++i)  {  System.arraycopy(propertyName,  0,  sb.length(),  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  for(int  i  =  0;  i  <  localCount;  ++i)  {  System.arraycopy(propertyName,  0,  sb.length(),	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
578	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  System.arraycopy(propertyName,  0,  sb.length(),  0	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
579	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
580	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
581	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
582	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
583	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
584	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
585	[BUG]  [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
586	[BUG]  [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
587	[BUG]  [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
588	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
589	[BUG]  [BUGGY]  if(this.inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(this.inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(this.inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
590	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",...   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
591	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",...   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
592	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
593	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
594	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
595	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
596	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
597	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
598	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_    	non-compiled	[CE]  <identifier>  expected	100	None	replace
599	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
600	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
601	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
602	[BUG]  [BUGGY]  if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
603	[BUG]  [BUGGY]  if(forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
604	[BUG]  [BUGGY]  i  =  forAnnotations?  0  :  getPropertyType(property).toStringHelper();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  forAnnotations?  0  :  getPropertyType(property).toStringHelper();  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  forAnnotations?  0  :  getPropertyType(property).toStringHelper();	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
605	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
606	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
607	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
608	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
609	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
610	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINT_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINT_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINT_PROPERTIES,  localCount);  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
611	[BUG]  [BUGGY]  if(i!=  localCount)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i!=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
612	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
613	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  forAnnotations)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
614	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  ||  localCount  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  ||  localCount  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
615	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
616	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
617	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
618	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
619	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
620	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
621	[BUG]  [BUGGY]  i  =  i;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i;	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
622	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
623	[BUG]  [BUGGY]  if(inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
624	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
625	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
626	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
627	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
628	[BUG]  [BUGGY]  if(inferred  &&  localCount  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  localCount  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  localCount  >  0)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
629	[BUG]  [BUGGY]  if(inferred  ||  nativeType)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  nativeType)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  nativeType)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
630	[BUG]  [BUGGY]  if(inferred  &&  nativeType!=  null)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  nativeType!=  null)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  nativeType!=  null)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
631	[BUG]  [BUGGY]  if(inferred  &&  nativeType  ==  null)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  nativeType  ==  null)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  nativeType  ==  null)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
632	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
633	[BUG]  [BUGGY]  if(!inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
634	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  0)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
635	[BUG]  [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	19	None	replace
636	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
637	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
638	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ", ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
639	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
640	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "   ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
641	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ":   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ":   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ":   ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
642	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".: ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".: ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".: ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
643	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
644	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
645	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PRO	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
646	[BUG]  [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	130	None	replace
647	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	130	None	replace
648	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	130	None	replace
649	[BUG]  [BUGGY]  if(isNativeType(propertyName)&&!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyName)&&!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyName)&&!inferred)  {  ++i;  }	  if(isNativeType(propertyName))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
650	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	20	None	replace
651	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":   ");  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":   ");  }  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":   ");  }  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
652	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
653	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
654	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
655	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
656	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTE  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTE	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
657	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
658	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
659	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PRO	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
660	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  MAX_PRETTY_PRINTED_PROPER	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
661	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
662	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
663	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
664	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
665	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
666	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  s  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  s  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  s	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
667	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
668	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
669	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }   ",  inferred);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }   ",  inferred);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
670	[BUG]  [BUGGY]  sb.append( ",  inferred ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",  inferred ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",  inferred ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
671	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getReferenceName(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getReferenceName(property).toStringHelper());	  sb.append(getPropertyName(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	143	None	replace
672	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
673	[BUG]  [BUGGY]  sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
674	[BUG]  [BUGGY]  sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
675	[BUG]  [BUGGY]  sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
676	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
677	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
678	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
679	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
680	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( "  }   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append( "  }   ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
681	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
682	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
683	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
684	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
685	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
686	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
687	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
688	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
689	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
690	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
691	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(',');  }	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
692	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ",   ");  }	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
693	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
694	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
695	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	113	None	replace
696	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	113	None	replace
697	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	113	None	replace
698	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	113	None	replace
699	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	113	None	replace
700	[BUG]  [BUGGY]  if(nativeType!=  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType!=  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType!=  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length()	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	113	None	replace
701	[BUG]  [BUGGY]  if(!inferred  &&!forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&!forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&!forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
702	[BUG]  [BUGGY]  if(!inferred  &&!forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&!forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&!forAnnotations)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
703	[BUG]  [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  forAnnotations)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
704	[BUG]  [BUGGY]  i  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
705	[BUG]  [BUGGY]  i  >  MAX_PRETTY_PRINTED_PROPERTIES  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  >  MAX_PRETTY_PRINTED_PROPERTIES  -  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >  MAX_PRETTY_PRINTED_PROPERTIES  -  1;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
706	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
707	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
708	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
709	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
710	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(',');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
711	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	96	None	replace
712	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
713	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
714	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( "   ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
715	[BUG]  [BUGGY]  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName!=  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
716	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName  ==  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName  ==  null)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(propertyNames!=    null)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
717	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyName  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyName  ==  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
718	[BUG]  [BUGGY]  if(i!=  MIN_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MIN_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MIN_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
719	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTS)  {  ++i;  }	  if(i    >=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
720	[BUG]  [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":.   ");    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
721	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i!=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
722	[BUG]  [BUGGY]  if(inferred)  {  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i!=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
723	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  }	  if(i!=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
724	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  *  localCount;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  *  localCount;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  *  localCount;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
725	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  2;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  2;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
726	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +-1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +-1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  +-1;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
727	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
728	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	82	None	replace
729	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelp	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	82	None	replace
730	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelp	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	82	None	replace
731	[BUG]  [BUGGY]  sb.append( "  <   ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  <   ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  <   ");	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	34	None	replace
732	[BUG]  [BUGGY]  if(isNativeType(propertyNames)&&!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyNames)&&!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyNames)&&!inferred)  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
733	[BUG]  [BUGGY]  if(isNativeType(propertyNames)||  nativeType)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyNames)||  nativeType)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyNames)||  nativeType)  {  if(!inferred)  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
734	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
735	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
736	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
737	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
738	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
739	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_P	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
740	[BUG]  [BUGGY]  if(nativeType!=  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType!=  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType!=  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
741	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
742	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
743	[BUG]  [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
744	[BUG]  [BUGGY]  if(inferred)  {  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    >=    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
745	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
746	[BUG]  [BUGGY]  if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
747	[BUG]  [BUGGY]  if(this.inferred)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(this.inferred)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(this.inferred)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
748	[BUG]  [BUGGY]  if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  <  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  <  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  <  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
749	[BUG]  [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  i  =  0;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(forAnnotations)  {  i  =  0;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(forAnnotations)  {  i  =  0;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
750	[BUG]  [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
751	[BUG]  [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
752	[BUG]  [BUGGY]  i  =(localCount  >  0)?  localCount  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =(localCount  >  0)?  localCount  :  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =(localCount  >  0)?  localCount  :  0;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
753	[BUG]  [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
754	[BUG]  [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES.length)  {  sb.append( ", ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES.length)  {  sb.append( ", ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  0  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES.length)  {  sb.append( ", ");	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
755	[BUG]  [BUGGY]  sb.append( ":?n ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ":?n ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":?n ");	  sb.append(   ":?   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
756	[BUG]  [BUGGY]  sb.append( ":?, ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ":?, ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":?, ");	  sb.append(   ":?   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
757	[BUG]  [BUGGY]  sb.append( ":? ",  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ":? ",  i);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ":? ",  i);	  sb.append(   ":?   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
758	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
759	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ")  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ")  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ")	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
760	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleType(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleType(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
761	[BUG]  [BUGGY]  sb.append(getSimplePrototypeName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimplePrototypeName(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimplePrototypeName(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
762	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
763	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
764	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	18	None	replace
765	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	18	None	replace
766	[BUG]  [BUGGY]  if(inferred)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
767	[BUG]  [BUGGY]  if(inferred)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(propertyName!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
768	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
769	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	18	None	replace
770	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
771	[BUG]  [BUGGY]  if(i  >=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
772	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
773	[BUG]  [BUGGY]  if(i  >=  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  System.arraycopy(sb,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
774	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.toString(),  0);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.toString(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.toString(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
775	[BUG]  [BUGGY]  if(i!=  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i!=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
776	[BUG]  [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount!=  1)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount!=  1)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount!=  1)  {  ++i;  }	  if(i!=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
777	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
778	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
779	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  s  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  s  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  s	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb    	non-compiled	[CE]  <identifier>  expected	123	None	replace
780	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(propertyName).toStringHelper());	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	39	None	replace
781	[BUG]  [BUGGY]  sb.append(getPropertyName(propertyNames[i]).toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(propertyNames[i]).toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(propertyNames[i]).toString());	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	39	None	replace
782	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(propertyName));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(propertyName));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	39	None	replace
783	[BUG]  [BUGGY]  sb.append(getPropertyName(propertyNames.length));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(propertyNames.length));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(propertyNames.length));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	39	None	replace
784	[BUG]  [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount  -  1;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount  -  1;	  i    =    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
785	[BUG]  [BUGGY]  if(i!=  localCount)  {  if(inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  if(inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  if(inferred)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
786	[BUG]  [BUGGY]  i  =  sb.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  sb.length();  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  sb.length();	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
787	[BUG]  [BUGGY]  if(inferred)  {  if(i!=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i!=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i!=  localCount)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
788	[BUG]  [BUGGY]  if(inferred)  {  if(i  ==  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  ==  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  ==  localCount)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	111	None	replace
789	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
790	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
791	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
792	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(':');    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	141	None	replace
793	[BUG]  [BUGGY]  sb.append(propertyNames.toArray(new  String[propertyNames.size()  ]));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.toArray(new  String[propertyNames.size()  ]));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.toArray(new  String[propertyNames.size()  ]));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
794	[BUG]  [BUGGY]  sb.append(propertyNames.get(propertyName).toString());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.get(propertyName).toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.get(propertyName).toString());	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
795	[BUG]  [BUGGY]  sb.append(propertyNames.get(propertyName));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.get(propertyName));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.get(propertyName));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
796	[BUG]  [BUGGY]  sb.append(propertyNames.get(propertyNames.size()  -  1));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.get(propertyNames.size()  -  1));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.get(propertyNames.size()  -  1));	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	42	None	replace
797	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
798	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
799	[BUG]  [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
800	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
801	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
802	[BUG]  [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount    	non-compiled	[CE]  <identifier>  expected	66	None	replace
803	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
804	[BUG]  [BUGGY]  sb.append( "... ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "... ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "... ");	  sb.append(   ",...       ");    	non-compiled	[CE]  <identifier>  expected	137	None	replace
805	[BUG]  [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
806	[BUG]  [BUGGY]  if(inferred  &&  localCount  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  localCount  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  localCount  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
807	[BUG]  [BUGGY]  sb.append( ",...  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",...  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",...	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  <identifier>  expected	159	None	replace
808	[BUG]  [BUGGY]  sb.append(propertyNames.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.toString());	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",...    	non-compiled	[CE]  <identifier>  expected	159	None	replace
809	[BUG]  [BUGGY]  if(inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
810	[BUG]  [BUGGY]  if(i  <  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
811	[BUG]  [BUGGY]  i  <  0  ||  localCount  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  0  ||  localCount  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  0  ||  localCount  >  0)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
812	[BUG]  [BUGGY]  if(i  <=  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <=  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <=  0)  {  ++i;  }	  if(i    <    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
813	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
814	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations    	non-compiled	[CE]  <identifier>  expected	154	None	replace
815	[BUG]  [BUGGY]  if(i!=  localCount)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  if(i  >  0)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	96	None	replace
816	[BUG]  [BUGGY]  if(i!=  localCount)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	96	None	replace
817	[BUG]  [BUGGY]  if(i  <  0  ||  sb.length()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  0  ||  sb.length()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  0  ||  sb.length()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPER	  if(i    <    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
818	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
819	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  break;  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
820	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
821	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
822	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
823	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
824	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    	non-compiled	[CE]  <identifier>  expected	67	None	replace
825	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
826	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
827	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
828	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
829	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
830	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",...  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",...  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",...	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
831	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    forAnnotations)    {    if(i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
832	[BUG]  [BUGGY]  sb.append(getNativeType(NativeType.OBJECT_TYPE));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(NativeType.OBJECT_TYPE));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(NativeType.OBJECT_TYPE));	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
833	[BUG]  [BUGGY]  sb.append(getNativeType(NativeType.OBJECT_TYPE),  nativeType.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(NativeType.OBJECT_TYPE),  nativeType.toString());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(NativeType.OBJECT_TYPE),  nativeType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
834	[BUG]  [BUGGY]  sb.append(getNativeType(NativeType.STRING_TYPE));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(NativeType.STRING_TYPE));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(NativeType.STRING_TYPE));	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
835	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getNativeType(UNKNOWN_TYPE));	  sb.append(nativeType.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
836	[BUG]  [BUGGY]  if(i  ==  localCount)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  if(i  >  0)  {  ++i;  }	  if(i    >    0)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	95	None	replace
837	[BUG]  [BUGGY]  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
838	[BUG]  [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
839	[BUG]  [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES;	  i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
840	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
841	[BUG]  [BUGGY]  sb.append(getStringValue(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getStringValue(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getStringValue(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
842	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getRequiredPrototypeType(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getRequiredPrototypeType(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
843	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    >    0)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
844	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    >    0)    {    ++i;    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
845	[BUG]  [BUGGY]  i  +=  2)  {  sb.append( ", ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  2)  {  sb.append( ", ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  2)  {  sb.append( ", ");	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
846	[BUG]  [BUGGY]  i  +=  4;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  4;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  4;	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
847	[BUG]  [BUGGY]  i  +=  2)  {  sb.append(':');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  2)  {  sb.append(':');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  2)  {  sb.append(':');	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
848	[BUG]  [BUGGY]  i  +=  2)  {  sb.append('  }  ');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  +=  2)  {  sb.append('  }  ');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  +=  2)  {  sb.append('  }  ');	  i    +=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
849	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
850	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
851	[BUG]  [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ", ");  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
852	[BUG]  [BUGGY]  sb.append(i  <=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(i  <=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(i  <=  MAX_PRETTY_PRINTED_PROPERTIES);	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
853	[BUG]  [BUGGY]  if(inferred  ||  localCount  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  >  0)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
854	[BUG]  [BUGGY]  if(inferred  &&  i  <  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  i  <  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  i  <  localCount)  {  ++i;  }	  if(inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
855	[BUG]  [BUGGY]  sb.append(propertyNames.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.length);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.length);	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
856	[BUG]  [BUGGY]  sb.append(propertyNames.substring(0,  i));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(propertyNames.substring(0,  i));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(propertyNames.substring(0,  i));	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
857	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  i,  localCount);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  i,  localCount);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  i,  localCount);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
858	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.toString(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
859	[BUG]  [BUGGY]  if(isNativeType(property)||  inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(property)||  inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(property)||  inferred)  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
860	[BUG]  [BUGGY]  if(i  ==  nativeType)  {  if(!inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  nativeType)  {  if(!inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  nativeType)  {  if(!inferred)  {  ++i;  }	  if(isNativeType(property))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
861	[BUG]  [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
862	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
863	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
864	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  break;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
865	[BUG]  [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
866	[BUG]  [BUGGY]  if(inferred  &&  localCount  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  localCount  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  localCount  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
867	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(forAnnotations)  {  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append    	non-compiled	[CE]  <identifier>  expected	124	None	replace
868	[BUG]  [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  i,  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(propertyName,  0,  sb.length(),  i,  propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(propertyName,  0,  sb.length(),  i,  propertyName);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
869	[BUG]  [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  className);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  className);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  className);	  System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
870	[BUG]  [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(',');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
871	[BUG]  [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",');  }	  if(forAnnotations)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	144	None	replace
872	[BUG]  [BUGGY]  if(inferred  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
873	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
874	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ": ").append(propertyName);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ": ").append(propertyName);	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
875	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",...   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
876	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(':');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
877	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
878	[BUG]  [BUGGY]  if(i  <  localCount  ||  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount  ||  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
879	[BUG]  [BUGGY]  i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  ++i;  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
880	[BUG]  [BUGGY]  i  =  i  ==  localCount  ||  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  ==  localCount  ||  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  ==  localCount  ||  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
881	[BUG]  [BUGGY]  if(i  ==  0  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
882	[BUG]  [BUGGY]  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
883	[BUG]  [BUGGY]  i  =  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
884	[BUG]  [BUGGY]  if(inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
885	[BUG]  [BUGGY]  if(inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
886	[BUG]  [BUGGY]  sb.append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property));	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	128	None	replace
887	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(propertyName));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getSimpleType(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
888	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
889	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
890	[BUG]  [BUGGY]  sb.append(getStringValue(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getStringValue(property).toStringHelper(forAnnotations));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getStringValue(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
891	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ".,');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ".,');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ".,');  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
892	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  break;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",... ");  break;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
893	[BUG]  [BUGGY]  sb.append(name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(name);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(name);	  sb.append(propertyName);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
894	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
895	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
896	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ", ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	81	None	replace
897	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  break;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property).toStringHelper());  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	11	None	replace
898	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper();  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyType(property)).toStringHelper();	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	11	None	replace
899	[BUG]  [BUGGY]  if(isNativeType(propertyName)||  inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyName)||  inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyName)||  inferred)  {  ++i;  }	  if(isNativeType(propertyName))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
900	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
901	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
902	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  propertyName  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  propertyName  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  propertyName	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName    	non-compiled	[CE]  <identifier>  expected	59	None	replace
903	[BUG]  [BUGGY]  sb.append( "  }  n ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }  n ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }  n ");	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
904	[BUG]  [BUGGY]  sb.append( "  }  ');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }  ');  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }  ');	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
905	[BUG]  [BUGGY]  sb.append( ".prototype. ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ".prototype. ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ".prototype. ");	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
906	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	130	None	replace
907	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	130	None	replace
908	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
909	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
910	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(':');  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	125	None	replace
911	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
912	[BUG]  [BUGGY]  sb.append( "  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( "  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( "  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
913	[BUG]  [BUGGY]  sb.append(getPropertyName(propertyNames).toStringHelper());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(propertyNames).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(propertyNames).toStringHelper());	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   "    	non-compiled	[CE]  <identifier>  expected	40	None	replace
914	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
915	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
916	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
917	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	115	None	replace
918	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getName(property).toStringHelper(property);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getName(property).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
919	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property);  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getImplicitPrototype()).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
920	[BUG]  [BUGGY]  sb.append(getPropertyValue(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyValue(property).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyValue(property).toStringHelper());	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(    	non-compiled	[CE]  <identifier>  expected	31	None	replace
921	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(':');  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
922	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  break;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  break;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  break;  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
923	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",...  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",...  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",...	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
924	[BUG]  [BUGGY]  i  >=  localCount;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  >=  localCount;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  >=  localCount;	  if(i    >=    localCount)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
925	[BUG]  [BUGGY]  i  =  i  *  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  i  *  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  i  *  MAX_PRETTY_PRINTED_PROPERTIES;	  i    =    i    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
926	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
927	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
928	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break    	non-compiled	[CE]  <identifier>  expected	53	None	replace
929	[BUG]  [BUGGY]  if(isNativeType(propertyNames)||  inferred)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(isNativeType(propertyNames)||  inferred)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(isNativeType(propertyNames)||  inferred)  {  ++i;  }	  if(isNativeType(propertyNames))    {    if(!inferred)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
930	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append( ": ");  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
931	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(!inferred)    {    sb.append(   ":   ");    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
932	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".: ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".: ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".: ");  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
933	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
934	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(sb,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    >=    localCount)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
935	[BUG]  [BUGGY]  if(!inferred  &&  i  <  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  localCount)  {  ++i;  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
936	[BUG]  [BUGGY]  if(inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
937	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",... ");  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
938	[BUG]  [BUGGY]  if(!inferred  &&  i  <  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  localCount)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ",   ");  }	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ",       ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
939	[BUG]  [BUGGY]  if(i  ==  localCount)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  0);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
940	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  1);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
941	[BUG]  [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  i);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  i);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  i);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  i);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  System.arraycopy(propertyName,  0,  sb.length(),  i);  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  i);  }	  if(i    ==    0)    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    0);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
942	[BUG]  [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred)  {  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyName);  }	  if(i    ==    0)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    propertyName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
943	[BUG]  [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	19	None	replace
944	[BUG]  [BUGGY]  if(inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ": ");  }	  if(inferred)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
945	[BUG]  [BUGGY]  if(i!=  localCount)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
946	[BUG]  [BUGGY]  if(i  >  0)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
947	[BUG]  [BUGGY]  if(i  >=  localCount)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  localCount)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
948	[BUG]  [BUGGY]  if(i!=  localCount)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
949	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
950	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
951	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations)	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations)    	non-compiled	[CE]  <identifier>  expected	153	None	replace
952	[BUG]  [BUGGY]  if(i  ==  forAnnotations)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  forAnnotations)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  forAnnotations)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
953	[BUG]  [BUGGY]  if(i  ==  FOR_ANNOTATIONS)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  FOR_ANNOTATIONS)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  FOR_ANNOTATIONS)  {  ++i;  }	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
954	[BUG]  [BUGGY]  i  =  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =  ++i;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =  ++i;	  if(forAnnotations)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
955	[BUG]  [BUGGY]  if(inferred)  {  if(i  >=  localCount)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  if(i  >=  localCount)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  if(i  >=  localCount)  {  ++i;  }	  if(!inferred)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	112	None	replace
956	[BUG]  [BUGGY]  if(i  <  localCount)  {  if(i  >  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  if(i  >  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  if(i  >  0)  {  ++i;  }	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
957	[BUG]  [BUGGY]  Annotations  i  =  forAnnotations.iterator().next();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  Annotations  i  =  forAnnotations.iterator().next();  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	Annotations  i  =  forAnnotations.iterator().next();	  if(forAnnotations)    {    if(i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
958	[BUG]  [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
959	[BUG]  [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
960	[BUG]  [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(inferred)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ":. ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":.   ");    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
961	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".   ");  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ".   ");  }	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(   ":.   ");    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
962	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
963	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
964	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
965	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  ++i;  }  else  {  sb.append(getPropertyType(property).toStringHelp	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    if(i    >    0)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.    	non-compiled	[CE]  <identifier>  expected	30	None	replace
966	[BUG]  [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
967	[BUG]  [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
968	[BUG]  [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MIN_PRETTY_PRINTED_PROPERTIES,  property  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MIN_PRETTY_PRINTED_PROPERTIES,  property  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  0)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MIN_PRETTY_PRINTED_PROPERTIES,  property	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    property    	non-compiled	[CE]  <identifier>  expected	57	None	replace
969	[BUG]  [BUGGY]  sb.append( ",  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ",  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ",	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
970	[BUG]  [BUGGY]  sb.append(getPropertyName(propertyName).toStringHelper());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getPropertyName(propertyName).toStringHelper());  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getPropertyName(propertyName).toStringHelper());	  if(!inferred    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.append(   ",    	non-compiled	[CE]  <identifier>  expected	127	None	replace
971	[BUG]  [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i!=  localCount)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
972	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
973	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(propertyNames!=  null)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(propertyNames!=  null)  {  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb	  if(propertyNames!=    null)    {    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    for(int    i    =    0;    i    <    propertyNames.length;    ++i)    {    sb.    	non-compiled	[CE]  <identifier>  expected	41	None	replace
974	[BUG]  [BUGGY]  sb.append( ".. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append( ".. ");  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append( ".. ");	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
975	[BUG]  [BUGGY]  i  =(localCount  >  0)?  localCount  -  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =(localCount  >  0)?  localCount  -  1  :  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =(localCount  >  0)?  localCount  -  1  :  0;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
976	[BUG]  [BUGGY]  i  =(localCount  >  0)?  localCount  :  sb.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =(localCount  >  0)?  localCount  :  sb.toString();  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =(localCount  >  0)?  localCount  :  sb.toString();	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
977	[BUG]  [BUGGY]  i  =(localCount  +  1)  ==  0?  localCount  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  i  =(localCount  +  1)  ==  0?  localCount  :  0;  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	i  =(localCount  +  1)  ==  0?  localCount  :  0;	  i    =    0;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
978	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	sb.append(getReferenceName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
979	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	82	None	replace
980	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  0)  {  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  0)  {  ++i;  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  0)  {  ++i;  }	  if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    ++i;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
981	[BUG]  [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  >=  localCount)  {  ++i;  }  else  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
982	[BUG]  [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));      [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]      if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  ++i;  }  else  {  System.arraycopy(propertyName,  0,  sb.length(),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	  if(i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    ++i;    }    else    {    System.arraycopy(propertyName,    0,    sb.length(),    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
