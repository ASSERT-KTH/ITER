bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames.values();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames.values();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames.values();	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
2	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames.iterator().next();	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
3	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames.keySet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames.keySet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames.keySet();	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames.size();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames.size();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames.size();	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
5	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getImplicitPrototypeFallback();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getImplicitPrototypeFallback();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
6	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getownerFunction(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getownerFunction(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getownerFunction(propertyNames);	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
7	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getownerFunction().propertyNames;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getownerFunction().propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getownerFunction().propertyNames;	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
8	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getImplicitPrototype();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
9	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getInferredPrototype();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getInferredPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getInferredPrototype();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
10	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone(),  propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
11	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
12	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
13	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
14	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
15	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
16	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  forAnnotations);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  propertyNames);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  propertyNames);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getImplicitPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getImplicitPrototypeFallback(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getImplicitPrototypeFallback(propertyNames);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnImplicitPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnImplicitPrototypeFallback(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnImplicitPrototypeFallback(propertyNames);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  properties);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(properties);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(properties);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames,  propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames,  propertyNames);	  for(ObjectType    current    =    getImplicitPrototype().propertyNames);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
23	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames),  propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototype().propertyNames);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
24	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  }	  for(ObjectType    current    =    getImplicitPrototype().propertyNames);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
25	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  properties.iterator().next();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  properties.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  properties.iterator().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
26	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  properties.get(propertyName).iterator().next();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  properties.get(propertyName).iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  properties.get(propertyName).iterator().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
27	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(propertyName).iterator().next();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(propertyName).iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(propertyName).iterator().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
28	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.keySet().iterator().next();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.keySet().iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.keySet().iterator().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
29	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.values().next();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.values().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.values().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
30	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames!=  null?  properties.get(propertyName):  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames!=  null?  properties.get(propertyName):  propertyNames.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames!=  null?  properties.get(propertyName):  propertyNames.iterator().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
31	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(1);	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(2);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(2);	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0).getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(0).getImplicitPrototype();	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0).clone();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0).clone();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(0).clone();	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
35	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0).propertyNames();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0).propertyNames();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(0).propertyNames();	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
38	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	HashSet  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	List  <  String>  propertyNames  =  Sets.newArrayList();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  forAnnotations);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
43	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  inferred);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  inferred);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
44	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  forAnnotations);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
45	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  properties);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
46	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  properties);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
47	[BUG]  [BUGGY]  propertyNames.add(className);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.add(className);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.add(className);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
48	[BUG]  [BUGGY]  propertyNames.addAll(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(forAnnotations);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
49	[BUG]  [BUGGY]  propertyNames.addAll(propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(propertyName);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(propertyName);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
50	[BUG]  [BUGGY]  propertyNames.add(property);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.add(property);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.add(property);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
51	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  forAnnotations);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  inferred);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  inferred);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  properties);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  forAnnotations);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  properties);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
56	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  false);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  false);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
57	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.getNativeObjectType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.getNativeObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback.getNativeObjectType();	  for(ObjectType    current    =    implicitPrototypeFallback.getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
58	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.getNativeObjectType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.getNativeObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.getNativeObjectType();	  for(ObjectType    current    =    implicitPrototypeFallback.getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
59	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getNativeType(),  propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getNativeType(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getNativeType(),  propertyNames);	  for(ObjectType    current    =    implicitPrototypeFallback.getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
60	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getNativeType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getNativeType();	  for(ObjectType    current    =    implicitPrototypeFallback.getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
61	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getInstanceType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getInstanceType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getInstanceType();	  for(ObjectType    current    =    implicitPrototypeFallback.getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
62	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
63	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >>  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >>  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >>  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
64	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
65	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback.getImplicitPrototype();	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
66	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.getImplicitPrototype();	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
67	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype(),  propertyNames);	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
68	[BUG]  [BUGGY]  for(ObjectType  current  =  _implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  _implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  _implicitPrototypeFallback.getImplicitPrototype();	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
69	[BUG]  [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype(),  propertyNames);	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
70	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
71	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.newHashSet());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.newHashSet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.newHashSet());	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
72	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.  <  String>emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.  <  String>emptySet());	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
73	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.newHashSet());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.newHashSet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.newHashSet());	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
74	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Lists.newArrayList());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Lists.newArrayList());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Lists.newArrayList());	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
75	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SETS);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SETS);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SETS);	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
76	[BUG]  [BUGGY]  for(ObjectType  current  =  properties  ==  null?  propertyNames  :  Collections.emptySet());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties  ==  null?  propertyNames  :  Collections.emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties  ==  null?  propertyNames  :  Collections.emptySet());	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
77	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.size()  :  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.size()  :  0);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.size()  :  0);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames.size()    :    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
78	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.size()  :  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.size()  :  0);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  properties.size()  :  0);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames.size()    :    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
79	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  0)  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  0)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  0)	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames.size()    :    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
80	[BUG]  [BUGGY]  for(ObjectType  current  =  properties!=  null?  propertyNames.size()  :  0);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties!=  null?  propertyNames.size()  :  0);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties!=  null?  propertyNames.size()  :  0);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames.size()    :    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
81	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames,  propertyNames);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames,  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
82	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
83	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames,  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames,  properties);	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
85	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.size()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.size()  -  1;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.size()  -  1;	  for(ObjectType    current    =    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
86	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.get(propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.get(propertyNames.size()  -  1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.get(propertyNames.size()  -  1);	  for(ObjectType    current    =    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
87	[BUG]  [BUGGY]  for(ObjectType  current  =  properties.size();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties.size();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties.size();	  for(ObjectType    current    =    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
88	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.size()  :  0;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.size()  :  0;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  properties.size()  :  0;	  for(ObjectType    current    =    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
89	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.EMPTY_SET);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.EMPTY_SET);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.EMPTY_SET);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
90	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SET);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SET);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SET);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
91	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET)  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET)	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
92	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.EMPTY_SET);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.EMPTY_SET);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.EMPTY_SET);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
93	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SETS);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SETS);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SETS);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
94	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.EMPTY_SET;	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
95	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SET;	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
96	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.EMPTY_SET;	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
97	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.keySet().iterator().next();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.keySet().iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.keySet().iterator().next();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.values().next();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.values().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.values().next();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
99	[BUG]  [BUGGY]  for(ObjectType  current  =  properties.iterator().next();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties.iterator().next();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
100	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.entrySet().iterator().next();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.entrySet().iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.entrySet().iterator().next();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
101	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.get(propertyName).iterator().next();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.get(propertyName).iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.get(propertyName).iterator().next();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
102	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.get(propertyNames).iterator().next();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.get(propertyNames).iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.get(propertyNames).iterator().next();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
103	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames,  propertyNames)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames,  propertyNames)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames,  propertyNames)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
104	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
105	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
106	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
107	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames!=  null)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames!=  null)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames!=  null)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
108	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties,  propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties,  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
109	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties)  {  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties)  {  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties)  {  }	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
110	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames!=  null);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames!=  null);	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
111	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(forAnnotations);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
112	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback().propertyNames;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback().propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback().propertyNames;	  PropertyType    ownerFunction    =    getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
113	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getPropertyNames();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getPropertyNames();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getPropertyNames();	  PropertyType    ownerFunction    =    getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  ObjectType  current  =  properties.iterator().next();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  properties.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  properties.iterator().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
115	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.keySet().iterator().next();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.keySet().iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.keySet().iterator().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
116	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator().next()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator().next()  :  null;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator().next()  :  null;	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
117	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.values().next();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.values().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.values().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
118	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName).iterator().next();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName).iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(propertyName).iterator().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
119	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames!=  null?  properties.iterator().next()  :  propertyNames.iterator();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames!=  null?  properties.iterator().next()  :  propertyNames.iterator();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames!=  null?  properties.iterator().next()  :  propertyNames.iterator();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
120	[BUG]  [BUGGY]  for(ObjectType  current  =  properties.values();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties.values();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties.values();	  for(ObjectType    current    =    properties;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
121	[BUG]  [BUGGY]  for(ObjectType  current  =  this.properties;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.properties;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.properties;	  for(ObjectType    current    =    properties;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
122	[BUG]  [BUGGY]  for(ObjectType  current  =  getPropertyType(propertyNames));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getPropertyType(propertyNames));  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getPropertyType(propertyNames));	  for(ObjectType    current    =    properties;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
123	[BUG]  [BUGGY]  for(ObjectType  current  =  properties.keySet();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties.keySet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties.keySet();	  for(ObjectType    current    =    properties;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
124	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.keySet(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.keySet(),  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.keySet(),  forAnnotations);	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
125	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.keySet()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.keySet()  :  null;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  properties.keySet()  :  null;	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
126	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.keySet()  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.keySet()  :  Collections.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  properties.keySet()  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
127	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  properties.keySet()  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  properties.keySet()  :  null;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  properties.keySet()  :  null;	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
128	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class,  propertyNames);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class,  propertyNames);	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
129	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.class;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.class;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback.class;	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
130	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class  }  ;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class  }  ;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class  }  ;	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
131	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class,  propertyNames)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class,  propertyNames)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class,  propertyNames)  {	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
132	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.  <  String>emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.  <  String>emptySet());	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
133	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.newArrayList());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.newArrayList());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Lists.newArrayList());	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
134	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.newHashSet());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.newHashSet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.newHashSet());	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
135	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET)  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET)	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
136	[BUG]  [BUGGY]  for(ObjectType  current  =  properties  ==  null?  propertyNames  :  Collections.EMPTY_SET);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  properties  ==  null?  propertyNames  :  Collections.EMPTY_SET);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties  ==  null?  propertyNames  :  Collections.EMPTY_SET);	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
137	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.values();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.values();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.values();	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
138	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  null  :  propertyNames.values();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  null  :  propertyNames.values();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  null  :  propertyNames.values();	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
139	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.values()  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  properties.values()  :  Collections.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  properties.values()  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
140	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  properties.values()  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  properties.values()  :  Collections.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  properties.values()  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
141	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT,  propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT,  propertyNames);	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
142	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT_PROPERTY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT_PROPERTY;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT_PROPERTY;	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
143	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT_PROTOTYPE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT_PROTOTYPE;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT_PROTOTYPE;	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
144	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT_TYPE;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT_TYPE;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT_TYPE;	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
145	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(properties);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(properties);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
146	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames,  forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
147	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
148	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
149	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames!=  null);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames!=  null);	  for(ObjectType    current    =    getImplicitPrototype().propertyNames;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
150	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||!forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||!forAnnotations)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||!forAnnotations)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
151	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType(),  propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
152	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
153	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInterfaceType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInterfaceType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getInterfaceType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
154	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInstanceType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInstanceType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getInstanceType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
155	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getOwnPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getOwnPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getOwnPrototype();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
156	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getConstructor();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getConstructor();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getConstructor();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
157	[BUG]  [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype();	  for(ObjectType    current    =    inputPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
158	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototype;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototype;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototype;	  for(ObjectType    current    =    inputPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
159	[BUG]  [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.inferred;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.inferred;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  inputPrototypeFallback.inferred;	  for(ObjectType    current    =    inputPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
160	[BUG]  [BUGGY]  propertyNames.addAll(property);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(property);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(property);	  propertyNames.addAll(propertyNames);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
161	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.interfaceType;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.interfaceType;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback.interfaceType;	  for(ObjectType    current    =    implicitPrototypeFallback.interfaceType;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
162	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.class;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.class;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.class;	  for(ObjectType    current    =    implicitPrototypeFallback.interfaceType;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
163	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getInterfaceType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getInterfaceType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getInterfaceType();	  for(ObjectType    current    =    implicitPrototypeFallback.interfaceType;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
164	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().interfaceType;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().interfaceType;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().interfaceType;	  for(ObjectType    current    =    implicitPrototypeFallback.interfaceType;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
165	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.this.interfaceType;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.this.interfaceType;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.this.interfaceType;	  for(ObjectType    current    =    implicitPrototypeFallback.interfaceType;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
166	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SETS);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SETS);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.EMPTY_SETS);	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
167	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(className);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(className);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(className);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
168	[BUG]  [BUGGY]  ObjectType  current  =  properties.get(propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  properties.get(propertyName);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  properties.get(propertyName);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
169	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(name);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(name);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
170	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(property);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(property);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(property);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
171	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(propertyName,  forAnnotations);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
172	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName  +  1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(propertyName  +  1);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
173	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback,  propertyNames);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback,  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback,  propertyNames);	  for(ObjectType    current    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
174	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.propertyNames;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback.propertyNames;	  for(ObjectType    current    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
175	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
176	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  properties);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  properties);	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
177	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype()  :  propertyNames);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype()  :  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype()  :  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
178	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype());	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
179	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  propertyNames;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype(),  propertyNames;	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
180	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback.getImplicitPrototype());	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
181	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.getImplicitPrototype());	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
182	[BUG]  [BUGGY]  for(ObjectType  current  =  _implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  _implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  _implicitPrototypeFallback.getImplicitPrototype());	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
183	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype(),  properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype(),  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype(),  properties);	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
184	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
185	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
186	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  properties.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  properties.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  properties.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
187	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  forAnnotations  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	forAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
188	[BUG]  [BUGGY]  ForAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ForAnnotations  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ForAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
189	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  forAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
190	[BUG]  [BUGGY]  Annotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Annotations  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Annotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
191	[BUG]  [BUGGY]  ForAnnotations  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ForAnnotations  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ForAnnotations  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
192	[BUG]  [BUGGY]  ForAnnotations  <  String>  forAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ForAnnotations  <  String>  forAnnotations  =  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ForAnnotations  <  String>  forAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
193	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(className);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(className);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(className);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
194	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  properties.get(propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  properties.get(propertyName);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  properties.get(propertyName);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
195	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(name);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(name);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(name);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
196	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(propertyName,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(propertyName,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(propertyName,  forAnnotations);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
197	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(prettyPrint);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(prettyPrint);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(prettyPrint);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
198	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(property);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(property);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(property);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
199	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  propertyNames);	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
200	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations.values();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations.values();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations.values();	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
201	[BUG]  [BUGGY]  for(ObjectType  current  =  this.forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.forAnnotations;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.forAnnotations;	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
202	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  propertyNames;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  propertyNames;	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
203	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  properties.values());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  properties.values());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations  instanceof  ObjectType?(ObjectType)forAnnotations  :  properties.values());	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
204	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||  propertyNames!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||  propertyNames!=  null);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||  propertyNames!=  null);	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
205	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||!forAnnotations)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||!forAnnotations)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||!forAnnotations)  {	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
206	[BUG]  [BUGGY]  for(ObjectType  current  =  _implicitPrototype;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  _implicitPrototype;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  _implicitPrototype;	  for(ObjectType    current    =    this.implicitPrototype;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
207	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
208	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  &&  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  &&  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
209	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeType(),  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeType(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getNativeType(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
210	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getImplicitPrototype();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
211	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getConstructor();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getConstructor();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getConstructor();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
212	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getOwnPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getOwnPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getOwnPrototype();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
213	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getInstanceType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getInstanceType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getInstanceType();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
214	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeObjectType(),  propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeObjectType(),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getNativeObjectType(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
215	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNodeType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNodeType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getNodeType();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
216	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototypeFallback();	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
217	[BUG]  [BUGGY]  PropertyType  current  =(propertyNames  ==  null)?  getImplicitPrototype()  :  propertyNames;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =(propertyNames  ==  null)?  getImplicitPrototype()  :  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =(propertyNames  ==  null)?  getImplicitPrototype()  :  propertyNames;	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
218	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototype(propertyNames);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  getImplicitPrototype(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototype(propertyNames);	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
219	[BUG]  [BUGGY]  PropertyType  current  =  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  implicitPrototypeFallback.getImplicitPrototype();	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
220	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototypeFallback(propertyNames);	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
221	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototype().propertyNames;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  getImplicitPrototype().propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototype().propertyNames;	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
222	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
223	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.values());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.values());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.values());	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
224	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.newHashSet();	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
225	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.newHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.newHashSet();	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
226	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties);	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
227	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  }  ;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  }  ;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties  }  ;	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
228	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties)  {	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
229	[BUG]  [BUGGY]  propertyNames.add(name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.add(name);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.add(name);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
230	[BUG]  [BUGGY]  propertyNames.addAll(properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(properties);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
231	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getOwnPropertyNames();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getOwnPropertyNames();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getOwnPropertyNames();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
232	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getOwnPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getOwnPrototypeFallback();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getOwnPrototypeFallback();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
233	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(1).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(1).getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(1).getImplicitPrototype();	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
234	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(1)+  propertyNames.size());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(1)+  propertyNames.size());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(1)+  propertyNames.size());	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
235	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().values();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().values();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().values();	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
236	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
237	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
238	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype())  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype())  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype())	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
239	[BUG]  [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  inputPrototypeFallback.getImplicitPrototype());	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
240	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class)  {	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
241	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class,  propertyNames;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class,  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class,  propertyNames;	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
242	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class  --  propertyNames;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class  --  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class  --  propertyNames;	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
243	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class  ||  inferred)  {	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
244	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames)	  for(ObjectType    current    =    getImplicitPrototype().propertyNames);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
245	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.iterator();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.iterator();	  for(ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
246	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  propertyNames);	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
247	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  propertyNames  :  Collections.emptySet());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  propertyNames  :  Collections.emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames!=  null?  propertyNames  :  Collections.emptySet());	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
248	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  propertyNames;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  propertyNames;	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
249	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames  ==  null?  propertyNames  :  Collections.emptySet());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames  ==  null?  propertyNames  :  Collections.emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames  ==  null?  propertyNames  :  Collections.emptySet());	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
250	[BUG]  [BUGGY]  FunctionType  ownerFunction  =  propertyNames.get(propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  FunctionType  ownerFunction  =  propertyNames.get(propertyName);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	FunctionType  ownerFunction  =  propertyNames.get(propertyName);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
251	[BUG]  [BUGGY]  FunctionType  ownerFunction  =  properties.get(propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  FunctionType  ownerFunction  =  properties.get(propertyName);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	FunctionType  ownerFunction  =  properties.get(propertyName);	  PropertyType    ownerFunction    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
252	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  nativeType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  nativeType);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  nativeType);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
253	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames)  {  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames)  {  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames)  {  }	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
254	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.keySet());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.keySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  null  :  propertyNames.keySet());	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
255	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.keySet()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.keySet()  :  null;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.keySet()  :  null;	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
256	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInferredObjectType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInferredObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getInferredObjectType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
257	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getDefaultObjectType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getDefaultObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getDefaultObjectType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
258	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNodeType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNodeType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getNodeType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
259	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  +  1;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  +  1;	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
260	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
261	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
262	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallbacks();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallbacks();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallbacks();	  for(ObjectType    current    =    properties;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
263	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPropertyFunction();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPropertyFunction();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPropertyFunction();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
264	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getInferredPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getInferredPrototypeFallback();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getInferredPrototypeFallback();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
265	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getNativePrototypeFunction();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getNativePrototypeFunction();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getNativePrototypeFunction();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
266	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  nativeType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  nativeType);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames,  nativeType);	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
267	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  {  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  {  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  {  }	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
268	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
269	[BUG]  [BUGGY]  PropertyType  current  =  propertyNames.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  propertyNames.getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  propertyNames.getImplicitPrototype();	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
270	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototype().getNativeObjectType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  getImplicitPrototype().getNativeObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototype().getNativeObjectType();	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
271	[BUG]  [BUGGY]  FunctionType  ownerFunction  =  getOwnPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  FunctionType  ownerFunction  =  getOwnPrototypeFallback(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	FunctionType  ownerFunction  =  getOwnPrototypeFallback(propertyNames);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
272	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
273	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.size()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.size()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.size()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
274	[BUG]  [BUGGY]  propertyNames.addAll(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(getImplicitPrototypeFallback());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(getImplicitPrototypeFallback());	  propertyNames.addAll(propertyNames);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
275	[BUG]  [BUGGY]  propertyNames.addAll(propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(propertyNames,  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(propertyNames,  forAnnotations);	  propertyNames.addAll(propertyNames);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
276	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
277	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames;	  for(ObjectType    current    =    getImplicitPrototype().propertyNames;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
278	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().properties;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().properties;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().properties;	  for(ObjectType    current    =    getImplicitPrototype().propertyNames;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
279	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getNativePrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getNativePrototypeFallback();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getNativePrototypeFallback();	  PropertyType    ownerFunction    =    getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
280	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  properties.get(propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  properties.get(propertyNames.size()  -  1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  properties.get(propertyNames.size()  -  1);	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
281	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
282	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
283	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
284	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
285	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
286	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
287	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLongHashSet();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLongHashSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newLongHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
288	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitReferenceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitReferenceName();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitReferenceName();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
289	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInferredPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getInferredPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getInferredPrototype();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
290	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitInterface();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitInterface();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitInterface();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
291	[BUG]  [BUGGY]  for(ObjectType  current  =  _implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  _implicitPrototypeFallback;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  _implicitPrototypeFallback;	  for(ObjectType    current    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
292	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  propertyNames.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  propertyNames.iterator().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
293	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.get(propertyName):  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.get(propertyName):  propertyNames.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames!=  null?  propertyNames.get(propertyName):  propertyNames.iterator().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
294	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator()  :  propertyNames.next();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator()  :  propertyNames.next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator()  :  propertyNames.next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
295	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.iterator();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.iterator();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
296	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  propertyNames.add(propertyNames);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  propertyNames.add(propertyNames);  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  propertyNames.add(propertyNames);  }	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
297	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class);	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
298	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  propertyNames.addAll(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  propertyNames.addAll(current.getImplicitPrototype());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class  ||  inferred)  {  propertyNames.addAll(current.getImplicitPrototype());	  for(ObjectType    current    =    ObjectType.class;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
299	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	forAnnotations  =  Sets.newTreeSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
300	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype())  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype())  {	  for(ObjectType    current    =    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
301	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.unmodifiableSet(propertyNames));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.unmodifiableSet(propertyNames));  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.unmodifiableSet(propertyNames));	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
302	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.  <  String>emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Sets.  <  String>emptySet());	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
303	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator()  :  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator()  :  0);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator()  :  0);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames.size()    :    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
304	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  1);	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames.size()    :    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
305	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.  <  String>emptySet();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.  <  String>emptySet();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.  <  String>emptySet();	  for(ObjectType    current    =    propertyNames!=    null?    propertyNames    :    Collections.EMPTY_SET;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
306	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
307	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype();  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
308	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  Class  <?>.class)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  Class  <?>.class)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  Class  <?>.class)  {	  for(ObjectType    current    =    getImplicitPrototype().propertyNames)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
309	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
310	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.emptySet());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.emptySet());	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
311	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.EMPTY_LIST;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.values()  :  Collections.EMPTY_LIST;	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
312	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.values()  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.values()  :  Collections.EMPTY_SET;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.values()  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
313	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.values()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.values()  :  Collections.EMPTY_LIST;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames.values()  :  Collections.EMPTY_LIST;	  for(ObjectType    current    =    propertyNames.values();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
314	[BUG]  [BUGGY]  propertyNames.add(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.add(prop);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.add(prop);	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
315	[BUG]  [BUGGY]  propertyNames.addAll(getPropertyNames());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  propertyNames.addAll(getPropertyNames());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(getPropertyNames());	  propertyNames.add(propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
316	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototype().getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  getImplicitPrototype().getImplicitPrototype();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototype().getImplicitPrototype();	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
317	[BUG]  [BUGGY]  PropertyType  current  =  propertyNames.get(propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  current  =  propertyNames.get(propertyNames.size()  -  1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  propertyNames.get(propertyNames.size()  -  1);	  PropertyType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
318	[BUG]  [BUGGY]  for(ObjectType  current  =  implementationPrototypeFallback;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implementationPrototypeFallback;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implementationPrototypeFallback;	  for(ObjectType    current    =    this.implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
319	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[properties.size()  ]));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[properties.size()  ]));  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[properties.size()  ]));	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
320	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[propertyNames.size()  ]));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[propertyNames.size()  ]));  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[propertyNames.size()  ]));	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
321	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[properties.size()  ]);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[properties.size()  ]);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.toArray(new  ObjectType[properties.size()  ]);	  for(ObjectType    current    =    propertyNames.keySet();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
322	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  propertyNames.addAll(getImplicitPrototypeFallback().propertyNames);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  propertyNames.addAll(getImplicitPrototypeFallback().propertyNames);  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  propertyNames.addAll(getImplicitPrototypeFallback().propertyNames);  }	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
323	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  propertyNames.addAll(current.getOwnPrototypeNames());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  propertyNames.addAll(current.getOwnPrototypeNames());  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames)  {  propertyNames.addAll(current.getOwnPrototypeNames());  }	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
324	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
325	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  false);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames,  false);	  for(ObjectType    current    =    getImplicitPrototype(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
326	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations  {  null?  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations  {  null?  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  :  forAnnotations;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations  {  null?  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  :  forAnnotations;	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
327	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations  {  null?  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  :  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations  {  null?  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  :  forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations  {  null?  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  :  forAnnotations);	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
328	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations  {  null?  getImplicitPrototype()  :  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  forAnnotations  {  null?  getImplicitPrototype()  :  forAnnotations;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations  {  null?  getImplicitPrototype()  :  forAnnotations;	  for(ObjectType    current    =    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
329	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
330	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
331	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
332	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
333	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames  ==  null?  this.propertyNames  :  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames  ==  null?  this.propertyNames  :  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames  ==  null?  this.propertyNames  :  propertyNames);	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
334	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  properties);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames!=  null?  this.propertyNames  :  properties);	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
335	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames  ==  null?  this.propertyNames  :  propertyNames;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames  ==  null?  this.propertyNames  :  propertyNames;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames  ==  null?  this.propertyNames  :  propertyNames;	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
336	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames  >>  null?  this.propertyNames  :  propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  this.propertyNames  >>  null?  this.propertyNames  :  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames  >>  null?  this.propertyNames  :  propertyNames);	  for(ObjectType    current    =    this.propertyNames;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
337	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  FOR_ANNOTATIONS);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  FOR_ANNOTATIONS);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames,  FOR_ANNOTATIONS);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback(propertyNames);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
338	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getObjectType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getObjectType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
339	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType(propertyNames);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeType(propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
340	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames),  propertyNames);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames),  propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
341	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototypeFallback().propertyNames);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
342	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  propertyNames.addAll(current.getOwnPropertyNames());  }	  for(ObjectType    current    =    getImplicitPrototype().propertyNames);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
343	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype().propertyNames);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
344	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.unmodifiableSet(propertyNames));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.unmodifiableSet(propertyNames));  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.unmodifiableSet(propertyNames));	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.emptySet());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
345	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype())  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype())  {	  for(ObjectType    current    =    getImplicitPrototypeFallback().getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
346	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  ||  current!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  ||  current!=  null);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  ||  current!=  null);	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
347	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT)  {  propertyNames.add(current.getImplicitPrototype());  }	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
348	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  ||  current  ==  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT  ||  current  ==  null);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT  ||  current  ==  null);	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
349	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT)  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT)  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT)  {  propertyNames.addAll(propertyNames);  }	  for(ObjectType    current    =    ObjectType.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
350	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPropertyNames();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPropertyNames();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPropertyNames();	  PropertyType    ownerFunction    =    getownerFunction();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
351	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototypeFallback();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototypeFallback();	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
352	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototypeFallback(1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototypeFallback(1);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototypeFallback(1);	  for(ObjectType    current    =    getImplicitPrototypeFallback(0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
353	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.  <  String>emptySet());  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Sets.  <  String>emptySet());	  for(ObjectType    current    =    propertyNames    ==    null?    propertyNames    :    Collections.EMPTY_SET);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
354	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
355	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototypeFallback().properties;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
356	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype().propertyNames;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
357	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames  &  MAX_PRETTY_PRINTED_PROPERTIES;	  for(ObjectType    current    =    getImplicitPrototype().propertyNames;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
358	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(0);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(0);	  PropertyType    ownerFunction    =    getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
359	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getNativeType();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
360	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getObjectType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getObjectType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getObjectType();	  for(ObjectType    current    =    getImplicitPrototype().getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
361	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(propertyname);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(propertyname);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(propertyname);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
362	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames.get(forAnnotations);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(forAnnotations);	  ObjectType    current    =    propertyNames.get(propertyName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
363	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getConstructor();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getConstructor();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getConstructor();	  for(ObjectType    current    =    implicitPrototypeFallback.getNativeObjectType();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
364	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames  ==  null?  propertyNames.size()  :  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames  ==  null?  propertyNames.size()  :  propertyNames.iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames  ==  null?  propertyNames.size()  :  propertyNames.iterator().next();	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
365	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator().next()  :  new  ObjectType(propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator().next()  :  new  ObjectType(propertyNames);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames!=  null?  propertyNames.iterator().next()  :  new  ObjectType(propertyNames);	  ObjectType    current    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
366	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.entrySet().iterator().next();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  PropertyType  ownerFunction  =  propertyNames.entrySet().iterator().next();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.entrySet().iterator().next();	  PropertyType    ownerFunction    =    propertyNames.iterator().next();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
367	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype())&&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
368	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PROPERTIES);  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
369	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().interfaceType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().interfaceType();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().interfaceType();	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
370	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames();  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames();	  for(ObjectType    current    =    getImplicitPrototypeFallback().clone();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
371	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  {  [BUGGY]      current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames)  {	  for(ObjectType    current    =    getImplicitPrototypeFallback(),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
