bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  propertyNames.addAll(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  propertyNames.addAll(propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.addAll(propertyNames);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  PropertyType  current  =  getImplicitPrototype();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  current  =  getImplicitPrototype();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getOwnPrototypeFallback(propertyNames);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  inputPrototypeFallback;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  inputPrototypeFallback;	  for(ObjectType    current    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  for(ObjectType  current  =  properties;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  properties;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  properties;	  for(ObjectType    current    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames);	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().propertyNames;	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().properties;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().properties;	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback(0);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback(0);	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getImplicitPrototype();	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.values();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames.values();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.values();	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  for(ObjectType  current  =  forAnnotations;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  forAnnotations;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  forAnnotations;	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames.iterator().next();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.iterator().next();	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.size();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames.size();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.size();	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  for(ObjectType  current  =  this.propertyNames;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  this.propertyNames;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.propertyNames;	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames.keySet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames.keySet();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames.keySet();	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  0);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames.size()  :  0);	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype(),  propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype(),  propertyNames);	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames);	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames;	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeObjectType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().getNativeObjectType();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().getNativeObjectType();	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype().propertyNames)  {	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  this.implicitPrototypeFallback;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototypeFallback;	  for(ObjectType    current    =    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype();	  for(ObjectType    current    =    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  for(ObjectType  current  =  this.implicitPrototype;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  this.implicitPrototype;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  this.implicitPrototype;	  for(ObjectType    current    =    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.interfaceType;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.interfaceType;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.interfaceType;	  for(ObjectType    current    =    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getNativeObjectType();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getNativeObjectType();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getNativeObjectType();	  for(ObjectType    current    =    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.class;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  ObjectType.class;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.class;	  for(ObjectType    current    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
34	[BUG]  [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  ObjectType.DEFAULT;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  ObjectType.DEFAULT;	  for(ObjectType    current    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.emptySet());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.emptySet());  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.emptySet());	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.emptySet());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.emptySet());  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.emptySet());	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET;  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET;	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
41	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
42	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeObjectType();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeObjectType();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().getNativeObjectType();	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  PropertyType  ownerFunction  =  propertyNames.get(propertyName);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.get(propertyName);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  ObjectType  current  =  propertyNames.get(propertyName);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.get(propertyName);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  getownerFunction();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  PropertyType  ownerFunction  =  getownerFunction();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  getownerFunction();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  propertyNames.add(propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  propertyNames.add(propertyName);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	propertyNames.add(propertyName);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  implicitPrototypeFallback.getImplicitPrototype());	  for(ObjectType    current    =    implicitPrototypeFallback;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames  ==  null?  propertyNames  :  Collections.EMPTY_SET);	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  propertyNames!=  null?  propertyNames  :  Collections.EMPTY_SET);	  for(ObjectType    current    =    propertyNames;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback().clone();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback().clone();	  for(ObjectType    current    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  ObjectType  current  =  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  ObjectType  current  =  propertyNames.iterator().next();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	ObjectType  current  =  propertyNames.iterator().next();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  propertyNames.iterator().next();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  PropertyType  ownerFunction  =  propertyNames.iterator().next();  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	PropertyType  ownerFunction  =  propertyNames.iterator().next();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();    [BUGGY]  for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]    current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	for(ObjectType  current  =  getImplicitPrototype()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  for(ObjectType    current    =    getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
