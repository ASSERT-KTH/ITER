bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append( ",   ").append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",   ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",   ").append('n');	  sb.append(   ",    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	82	None	replace
2	[BUG]  [BUGGY]  sb.append( ",n ").append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",n ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",n ").append('n');	  sb.append(   ",    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	82	None	replace
3	[BUG]  [BUGGY]  sb.append( ",' ").append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",' ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",' ").append('n');	  sb.append(   ",    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	82	None	replace
4	[BUG]  [BUGGY]  sb.append( "  }  else  if(current!=  null)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current!=  null)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current!=  null)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
5	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",');  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",');  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
6	[BUG]  [BUGGY]  sb.append( "  }  else  if(forAnnotations  ==  null)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(forAnnotations  ==  null)  {  sb.append( ", ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(forAnnotations  ==  null)  {  sb.append( ", ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
7	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getReturnType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getReturnType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getReturnType());	  sb.append(   "    {       ").append(current.getPrototype());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getSimplePrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getSimplePrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getSimplePrototype());	  sb.append(   "    {       ").append(current.getPrototype());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(getPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getPropertyType(property));	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
10	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
11	[BUG]  [BUGGY]  sb.append(':').append(propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(propertyName);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(propertyName);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
12	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(getPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getPropertyName(property));	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
13	[BUG]  [BUGGY]  sb.append( ": ").append(property);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(property);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(property);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
14	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
15	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).append(':');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototype()).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype()).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
16	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property)).append(':');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeType(property)).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeType(property)).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
17	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append( ": ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).append( ": ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append( ": ");	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
18	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).append(':');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property)).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property)).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
19	[BUG]  [BUGGY]  sb.append(getSimpleType(property)).append(':');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getSimpleType(property)).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getSimpleType(property)).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
20	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(propertyNames));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(current));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(current));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
23	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
24	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(this));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
25	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
26	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
27	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
28	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getImplicitPrototype());	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
29	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
30	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnPropertyType(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnPropertyType(property));	  sb.append(   "    {       ").append(current.getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
31	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(propertyName));	  sb.append(   "    {       ").append(current.getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
32	[BUG]  [BUGGY]  sb.append( ": ").append(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(getImplicitPrototypeFallback());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getImplicitPrototypeFallback());	  sb.append(   ":   ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
33	[BUG]  [BUGGY]  sb.append(':').append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(getImplicitPrototype());	  sb.append(   ":   ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
34	[BUG]  [BUGGY]  sb.append( ": ").append(getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(getImplicitPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getImplicitPrototype()  +  1);	  sb.append(   ":   ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
35	[BUG]  [BUGGY]  sb.append( ": ".append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ".append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ".append(getImplicitPrototype());	  sb.append(   ":   ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
36	[BUG]  [BUGGY]  sb.append('  {  ').append(propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(propertyNames);	  sb.append(   "    {       ").append(propertyNames);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  sb.append( "  {   ").append(getOwnPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getOwnPropertyType(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getOwnPropertyType(propertyName));	  sb.append(   "    {       ").append(getOwnPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
38	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
39	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
40	[BUG]  [BUGGY]  sb.append( "  }  n ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  n ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  n ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
41	[BUG]  [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
42	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
43	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeName(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeName(property));	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
44	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPrototypeType(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPrototypeType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPrototypeType(property));	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
45	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(current));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeType(current));	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
46	[BUG]  [BUGGY]  sb.append('  {  ').append(getImplicitPrototypeType(property));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getImplicitPrototypeType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getImplicitPrototypeType(property));	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
47	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType());	  sb.append(   "    {       ").append(current.getPropertyName());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  sb.append('>');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('>');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('>');	  sb.append('    <    ');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
49	[BUG]  [BUGGY]  sb.append( "  <  / ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <  / ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <  / ");	  sb.append('    <    ');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
50	[BUG]  [BUGGY]  sb.append( "  <  n ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <  n ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <  n ");	  sb.append('    <    ');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
51	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getNativePrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getNativePrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getNativePrototype());	  sb.append(   "    {       ").append(current.getOwnPrototype());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toString());	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
53	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getSimpleType());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getSimpleType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getSimpleType());	  sb.append(   "    {       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
54	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getReferenceName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getReferenceName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getReferenceName());	  sb.append(   "    {       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
55	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
56	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(inferred);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
57	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype()).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype()).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototype()).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
58	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.propertyName);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.propertyName);	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
59	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.inferred)  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.inferred)  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.inferred)	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
60	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.inferred,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.inferred,  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.inferred,  forAnnotations);	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
61	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",n ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
62	[BUG]  [BUGGY]  sb.append(',');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(',');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(',');	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
63	[BUG]  [BUGGY]  sb.append( ",' ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",' ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",' ");	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
64	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getOwnPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getOwnPrototype());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
65	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getReturnType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getReturnType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getReturnType());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
66	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getSimpleType());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getSimpleType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getSimpleType());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
67	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getOwnPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getOwnPropertyName());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
68	[BUG]  [BUGGY]  sb.append(current.getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getImplicitPrototypeFallback());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getImplicitPrototypeFallback());	  sb.append(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
69	[BUG]  [BUGGY]  sb.append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getImplicitPrototype());	  sb.append(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
70	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallback()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallback()  +  1);	  sb.append(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
71	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallbackType());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallbackType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallbackType());	  sb.append(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
72	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallbackName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallbackName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallbackName());	  sb.append(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
73	[BUG]  [BUGGY]  sb.append( "  {   ").append(getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getName());	  sb.append(   "    {       ").append(name);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
74	[BUG]  [BUGGY]  sb.append('  {  ').append(name);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(name);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(name);	  sb.append(   "    {       ").append(name);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
75	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getOwnPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getOwnPrototype());	  sb.append(   "    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
76	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getReturnType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getReturnType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getReturnType());	  sb.append(   "    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
77	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getSimpleType());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getSimpleType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getSimpleType());	  sb.append(   "    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
78	[BUG]  [BUGGY]  sb.append('  }  ').append(current.getNativeType());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(current.getNativeType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(current.getNativeType());	  sb.append(   "    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
79	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnLocalName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnLocalName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnLocalName());	  sb.append(   "    {       ").append(current.getLocalName());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
80	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnName());	  sb.append(   "    {       ").append(current.getLocalName());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
81	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyNames.toString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(propertyNames.toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(propertyNames.toString());	  sb.append(   "    {       ").append(current.toString());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
82	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(current).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(current).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(current).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(current.toString());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
83	[BUG]  [BUGGY]  sb.append('  {  ').append(current.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.toString());	  sb.append(   "    {       ").append(current.toString());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
84	[BUG]  [BUGGY]  sb.append(':').append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current.getImplicitPrototype());	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
86	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
87	[BUG]  [BUGGY]  sb.append(':').append(current.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current.getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current.getName());	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  sb.append(':').append(current.getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current.getPropertyType(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current.getPropertyType(propertyName));	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  sb.append( ": ".equals(propertyName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ".equals(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ".equals(propertyName));	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	78	None	replace
90	[BUG]  [BUGGY]  sb.append( ": ".);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ".);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ".);	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	78	None	replace
91	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
92	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property).toStringHelper());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
93	[BUG]  [BUGGY]  sb.append(getOwnPropertyName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getOwnPropertyName(property).toStringHelper());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getOwnPropertyName(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
94	[BUG]  [BUGGY]  sb.append(current.getPropertyType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getPropertyType(property).toStringHelper());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getPropertyType(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
95	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(ifAnnotations));	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
96	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(propertyNames);	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
97	[BUG]  [BUGGY]  sb.append('  }  ').append(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(forAnnotations);	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
98	[BUG]  [BUGGY]  sb.append( "  }  n ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  n ").append(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  n ").append(forAnnotations);	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
99	[BUG]  [BUGGY]  sb.append( "  }   ").append(inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(inferred);	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
100	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).toStringHelper(propertyNames);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
101	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).toStringHelper(this);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
102	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(properties);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).toStringHelper(properties);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
103	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(current);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).toStringHelper(current);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
104	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
105	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
106	[BUG]  [BUGGY]  sb.append('  }  ').append(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(propertyName);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(propertyName);	  sb.append(   "    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
107	[BUG]  [BUGGY]  sb.append( "  }   ").append(className);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(className);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(className);	  sb.append(   "    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
108	[BUG]  [BUGGY]  sb.append( "  }   ").append(name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(name);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(name);	  sb.append(   "    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
109	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyName(property));	  sb.append(   "    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
110	[BUG]  [BUGGY]  sb.append( ",  {   ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  {   ").append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  {   ").append(current.getImplicitPrototype());	  sb.append(   "    {       ").append(current.getImplicitPrototype()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
111	[BUG]  [BUGGY]  sb.append( ".append(current.getImplicitPrototype()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ".append(current.getImplicitPrototype()));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ".append(current.getImplicitPrototype()));	  sb.append(   "    {       ").append(current.getImplicitPrototype()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
112	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPROtotype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getImplicitPROtotype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPROtotype());	  sb.append(   "    {       ").append(current.getImplicitPrototype()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
113	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getImplicitPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getImplicitPrototype()  +  1);	  sb.append(   "    {    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
114	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getPrototype());	  sb.append(   "    {    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
115	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getInferredPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getInferredPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getInferredPrototype());	  sb.append(   "    {    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
116	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
117	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(current));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toStringHelper(current));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
118	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
119	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getName()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getName()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getName()  +  1);	  sb.append(   "    {    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
120	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getPropertyName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getPropertyName());	  sb.append(   "    {    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
121	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getLocalName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getLocalName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getLocalName());	  sb.append(   "    {    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
122	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property));	  sb.append('    {    ').append(propertyName);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
123	[BUG]  [BUGGY]  sb.append('  {  ').append(className);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(className);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(className);	  sb.append('    {    ').append(propertyName);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
124	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyName(property));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyName(property));	  sb.append('    {    ').append(propertyName);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
125	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')/  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')/  1;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')/  1;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
126	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')+  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')+  2;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')+  2;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
127	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')/  2  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')/  2  +  1;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')/  2  +  1;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
128	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')+  4;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')+  4;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')+  4;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
129	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')+  3;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')+  3;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')+  3;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
130	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
131	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(inferred));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(inferred));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
132	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype()).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototype()).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
133	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
134	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this));	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
135	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this,  forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this,  forAnnotations));	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
136	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(properties));	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
137	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(current));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(current));	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
138	[BUG]  [BUGGY]  sb.append(getPropertyName(property));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property));	  sb.append(getPropertyType(propertyName));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
139	[BUG]  [BUGGY]  sb.append(current.getPropertyType(property));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getPropertyType(property));	  sb.append(getPropertyType(propertyName));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
140	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties,  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties,  forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(properties);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
141	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyValue(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyValue(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyValue(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
142	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper());	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
143	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
144	[BUG]  [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
145	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
146	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
147	[BUG]  [BUGGY]  sb.append( ":   ".equals(current.getImplicitPrototype()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":   ".equals(current.getImplicitPrototype()));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":   ".equals(current.getImplicitPrototype()));	  sb.append(   ":   ".equals(current.getName()));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
148	[BUG]  [BUGGY]  sb.append( ":   ".equals(current.getName()  + "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":   ".equals(current.getName()  + "));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":   ".equals(current.getName()  + "));	  sb.append(   ":   ".equals(current.getName()));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
149	[BUG]  [BUGGY]  sb.append('  {  ').append(current);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current);	  sb.append('    {    ').append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
150	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(propertyNames).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(propertyNames).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(propertyNames).toStringHelper(forAnnotations));	  sb.append('    {    ').append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
151	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
152	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
153	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnn  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnn	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
154	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
155	[BUG]  [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
156	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
157	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
158	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(current).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(propertyNames));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
159	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(current).toStringHelper(properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(properties));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
160	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(current).toStringHelper(this));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(this));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
161	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(current).toStringHelper(localCount));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(localCount));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
162	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getOwnPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getOwnPropertyName());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
163	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getSimpleName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getSimpleName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getSimpleName());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
164	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getLocalName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getLocalName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getLocalName());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
165	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getName()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getName()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getName()  +  1);	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
166	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getOwnPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getOwnPrototype());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
167	[BUG]  [BUGGY]  sb.append( ",  {   ").append(current.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  {   ").append(current.getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  {   ").append(current.getName());	  sb.append(   "    {       ").append(current.getName()    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
168	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnPrototype().getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnPrototype().getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnPrototype().getName());	  sb.append(   "    {       ").append(current.getName()    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
169	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  properties));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
170	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  propertyNames));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
171	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  current);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  current);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
172	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  propertyNames);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
173	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  inferred));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  inferred));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  inferred));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
174	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getFunctionName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getFunctionName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getFunctionName());	  sb.append(   "    {       ").append(current.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
175	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getNativeName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getNativeName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getNativeName());	  sb.append(   "    {       ").append(current.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
176	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(propertyNames);	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
177	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(properties);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(properties);	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
178	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
179	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getName()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getName()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getName()  +  1);	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
180	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getOwnPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getOwnPropertyName());	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
181	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getSimpleName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getSimpleName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getSimpleName());	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
182	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getLocalName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getLocalName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getLocalName());	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
183	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getPropertyName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getPropertyName());	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
184	[BUG]  [BUGGY]  sb.append( "  {   ").append(forAnnotations)  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(forAnnotations)  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(forAnnotations)	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
185	[BUG]  [BUGGY]  sb.append( "  {   ").append(forAnnotations).append('n')  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(forAnnotations).append('n')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(forAnnotations).append('n')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
186	[BUG]  [BUGGY]  sb.append( "  {   ").append('N')  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('N')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('N')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
187	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyNames).append('n')  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(propertyNames).append('n')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(propertyNames).append('n')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
188	[BUG]  [BUGGY]  sb.append( "  {   ").append('0')  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('0')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('0')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
189	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
190	[BUG]  [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
191	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
192	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
193	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativePrototype())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativePrototype())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativePrototype())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
194	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
195	[BUG]  [BUGGY]  sb.append( ": ").append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getOwnPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getOwnPropertyName());	  sb.append(   ":   ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
196	[BUG]  [BUGGY]  sb.append( ": ").append(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getOwnPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getOwnPrototype());	  sb.append(   ":   ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
197	[BUG]  [BUGGY]  sb.append( ": ").append(current.getSimpleName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getSimpleName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getSimpleName());	  sb.append(   ":   ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
198	[BUG]  [BUGGY]  sb.append( ": ").append(current.getPropertyName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getPropertyName());	  sb.append(   ":   ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
199	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototypeFallback());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPrototypeFallback());	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
200	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback());	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
201	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.interfaceType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.interfaceType);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.interfaceType);	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
202	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.intermediatePrototypeFallback);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.intermediatePrototypeFallback);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.intermediatePrototypeFallback);	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
203	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.internalPrototypeFallback);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.internalPrototypeFallback);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.internalPrototypeFallback);	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
204	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
205	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnn  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnn	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
206	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnno  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnno	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
207	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
208	[BUG]  [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(!current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
209	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnn  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnn	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
210	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  properties);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  properties);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
211	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  propertyNames);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
212	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this,  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this,  forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
213	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(current,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(current,  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(current,  forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
214	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append('n');  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append('n');	  sb.append(getPropertyType(property)).append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
215	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append('/');  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).append('/');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append('/');	  sb.append(getPropertyType(property)).append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
216	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append(',');  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).append(',');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append(',');	  sb.append(getPropertyType(property)).append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
217	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getImplicitPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getImplicitPrototype()  +  1);	  sb.append(   "    <       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
218	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getInferredPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getInferredPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getInferredPrototype());	  sb.append(   "    <       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
219	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getPrototype());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getPrototype());	  sb.append(   "    <       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
220	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getSimplePrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getSimplePrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getSimplePrototype());	  sb.append(   "    <       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
221	[BUG]  [BUGGY]  sb.append( "  {   ").append(getStringPropertyName(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getStringPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getStringPropertyName(property));	  sb.append(   "    {       ").append(getOwnPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
222	[BUG]  [BUGGY]  sb.append( "  {   ").append(getName(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getName(property));	  sb.append(   "    {       ").append(getOwnPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
223	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(getPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(getPropertyType(property));	  sb.append(   "    {    }       ").append(propertyNames);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
224	[BUG]  [BUGGY]  sb.append( "  {   ").append(nativeType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(nativeType);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(nativeType);	  sb.append(   "    {       ").append(inferred);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
225	[BUG]  [BUGGY]  sb.append( "  {   ").append(annotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(annotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(annotations);	  sb.append(   "    {       ").append(inferred);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
226	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getNativePropertyName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getNativePropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getNativePropertyName());	  sb.append(   "    {       ").append(current.getOwnPropertyName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
227	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getDeclaredPropertyName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getDeclaredPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getDeclaredPropertyName());	  sb.append(   "    {       ").append(current.getOwnPropertyName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
228	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototypeName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPrototypeName());	  sb.append(   "    {       ").append(current.getOwnPropertyName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
229	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnObjectType());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnObjectType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnObjectType());	  sb.append(   "    {       ").append(current.getNativeObjectType());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
230	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getInferredObjectType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getInferredObjectType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getInferredObjectType());	  sb.append(   "    {       ").append(current.getNativeObjectType());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
231	[BUG]  [BUGGY]  sb.append( ": ").append(current.getPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getPrototype());	  sb.append(   ":   ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
232	[BUG]  [BUGGY]  sb.append( ": ").append(current.getInferredPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getInferredPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getInferredPrototype());	  sb.append(   ":   ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
233	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeType(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
234	[BUG]  [BUGGY]  sb.append(getSimpleType(property));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getSimpleType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getSimpleType(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
235	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
236	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
237	[BUG]  [BUGGY]  sb.append( "  }  n ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  n ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  n ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
238	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
239	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
240	[BUG]  [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
241	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(forAnnotations);	  sb.append(   "    {    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	60	None	replace
242	[BUG]  [BUGGY]  sb.append( ",  }   ").append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  }   ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  }   ").append('n');	  sb.append(   "    {    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	60	None	replace
243	[BUG]  [BUGGY]  sb.append( "  {   ").append(getOwnPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getOwnPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getOwnPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(current));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
244	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(current).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(current).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(current).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(current));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
245	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
246	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isNativeObjectType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isNativeObjectType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isNativeObjectType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
247	[BUG]  [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(!current.isNativeObjectType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(!current.isNativeObjectType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
248	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
249	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isInterface())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
250	[BUG]  [BUGGY]  sb.append( "  }  else  if(forAnnotations!=  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(forAnnotations!=  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(forAnnotations!=  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
251	[BUG]  [BUGGY]  sb.append( "  }  else  if(forAnnotations  ==  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(forAnnotations  ==  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(forAnnotations  ==  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
252	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  >=  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  >=  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  >=  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
253	[BUG]  [BUGGY]  sb.append( "  }  if(current!=  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  if(current!=  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  if(current!=  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
254	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getImplicitPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getImplicitPrototype()  +  1);	  sb.append(   "    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
255	[BUG]  [BUGGY]  sb.append('  }  ').append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(current.getImplicitPrototype());	  sb.append(   "    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
256	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getPrototype());	  sb.append(   "    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
257	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getImplicitPrototype())  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getImplicitPrototype())  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getImplicitPrototype())	  sb.append(   "    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
258	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype()  +  1);	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
259	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).append('n');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototype()).append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype()).append('n');	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
260	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).append('[');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototype()).append('[');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype()).append('[');	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
261	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(property).toStringHelper(propertyNames);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(propertyNames);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
262	[BUG]  [BUGGY]  sb.append( "  {   ").append(getNativeType(NativeType.OBJECT_TYPE));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getNativeType(NativeType.OBJECT_TYPE));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getNativeType(NativeType.OBJECT_TYPE));	  sb.append(   "    {       ").append('N');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
263	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getNativePrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getNativePrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getNativePrototype());	  sb.append(   "    }       ").append(current.getInferredPrototype());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
264	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getInferredPrototype()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getInferredPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getInferredPrototype()  +  1);	  sb.append(   "    }       ").append(current.getInferredPrototype());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
265	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getSimpleName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getSimpleName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getSimpleName());	  sb.append(   "    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
266	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getOwnPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getOwnPropertyName());	  sb.append(   "    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
267	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getPropertyName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getPropertyName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getPropertyName());	  sb.append(   "    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
268	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getLocalName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getLocalName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getLocalName());	  sb.append(   "    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
269	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getName()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getName()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getName()  +  1);	  sb.append(   "    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
270	[BUG]  [BUGGY]  sb.append( "  }   ").append('n')  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append('n')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append('n')	  sb.append(   "    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	83	None	replace
271	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(current));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(current));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
272	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(current,  property));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(current,  property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(current,  property));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
273	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(propertyName));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(propertyName));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
274	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(property,  forAnnotations));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(property,  forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(property,  forAnnotations));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
275	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(property),  forAnnotations);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(property),  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(property),  forAnnotations);	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
276	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(propertyNames));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
277	[BUG]  [BUGGY]  sb.append( "  {   ").append(getSimpleName(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getSimpleName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getSimpleName(property));	  sb.append(   "    {       ").append(getPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
278	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyValue(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyValue(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyValue(property));	  sb.append(   "    {       ").append(getPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
279	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(className);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(className);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(className);	  sb.append(   "    {    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
280	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(name);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(name);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(name);	  sb.append(   "    {    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
281	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  current.isNativeObjectType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  current.isNativeObjectType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null  ||  current.isNativeObjectType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
282	[BUG]  [BUGGY]  sb.append( ",  }  else  if(current  ==  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  }  else  if(current  ==  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  }  else  if(current  ==  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
283	[BUG]  [BUGGY]  sb.append( "  }  if(current  ==  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  if(current  ==  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  if(current  ==  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
284	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype()  +  1);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototype()  +  1);	  sb.append(   "    {       ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
285	[BUG]  [BUGGY]  sb.append('  {  ').append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getImplicitPrototype());	  sb.append(   "    {       ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
286	[BUG]  [BUGGY]  sb.append( "  {   ").append(getOwnPrototype());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getOwnPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getOwnPrototype());	  sb.append(   "    {       ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
287	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeName());	  sb.append(   "    {       ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
288	[BUG]  [BUGGY]  sb.append('  }  ').append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(getPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(getPropertyType(property));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
289	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeType(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getImplicitPrototypeType(property));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
290	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getImplicitPrototype());	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
291	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(propertyName));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
292	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getPropertyType(property));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getPropertyType(property));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
293	[BUG]  [BUGGY]  sb.append( "  }   ").append(getNativeType(property));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getNativeType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getNativeType(property));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
294	[BUG]  [BUGGY]  sb.append( "  }  n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  n ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  n ");	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
295	[BUG]  [BUGGY]  sb.append( "  }  : ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  : ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  : ");	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
296	[BUG]  [BUGGY]  sb.append('  }  ').append(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(propertyNames);	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
297	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(propertyNames);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
298	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(properties);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(properties);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
299	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(this);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(this);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
300	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(properties));	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
301	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ".  }   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ".  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ".  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
302	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  propertyNames  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  propertyNames  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  propertyNames  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
303	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototype()  + "  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototype()  + "  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPrototype()  + "  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
304	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  forAnnotations  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  forAnnotations  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  forAnnotations  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
305	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  properties  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  properties  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  properties  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
306	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.implicitPrototypeFallback);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.implicitPrototypeFallback);	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
307	[BUG]  [BUGGY]  sb.append('  {  ').append(this.implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(this.implicitPrototypeFallback);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(this.implicitPrototypeFallback);	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
308	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.toString());	  sb.append(   "    {    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
309	[BUG]  [BUGGY]  sb.append( "  }   ").append('N');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append('N');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append('N');	  sb.append(   "    {       ").append('N');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
310	[BUG]  [BUGGY]  sb.append( "  {   ").append('N')+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('N')+  1;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('N')+  1;	  sb.append(   "    {       ").append('N');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
311	[BUG]  [BUGGY]  sb.append( "  {   ").append('N',  '/');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('N',  '/');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('N',  '/');	  sb.append(   "    {       ").append('N');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
312	[BUG]  [BUGGY]  sb.append( "  }   ").append(current);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current);	  sb.append(   "    {       ").append(current);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
313	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(property).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeType(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
314	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback()).append(':');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallback()).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallback()).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
315	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType)).append(':');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getNativeType(nativeType)).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getNativeType(nativeType)).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
316	[BUG]  [BUGGY]  sb.append(current.getImplicitPrototype()).append(':');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getImplicitPrototype()).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getImplicitPrototype()).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
317	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
318	[BUG]  [BUGGY]  sb.append( "  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
319	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
320	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(property).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
321	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isInferred())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isInferred())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isInferred())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
322	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback()).append(forAnnotations);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallback()).append(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallback()).append(forAnnotations);	  sb.append(getPropertyType(property)).append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
323	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append( ", ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property)).append( ", ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append( ", ");	  sb.append(getPropertyType(property)).append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
324	[BUG]  [BUGGY]  sb.append(current.getImplicitPrototype()).append(forAnnotations);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getImplicitPrototype()).append(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getImplicitPrototype()).append(forAnnotations);	  sb.append(getPropertyType(property)).append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
325	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
326	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
327	[BUG]  [BUGGY]  sb.append( "  <   ").append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append('n');	  sb.append(   ",    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	82	None	replace
328	[BUG]  [BUGGY]  sb.append( "],  {   ").append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "],  {   ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "],  {   ").append('n');	  sb.append(   ",    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	82	None	replace
329	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(current);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(current);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
330	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(inferred);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
331	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(this,  forAnnotations);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
332	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(nativeType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(nativeType);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(nativeType);	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
333	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
334	[BUG]  [BUGGY]  sb.append( "  }   ").append('#');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append('#');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append('#');	  sb.append(   "    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	83	None	replace
335	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getNativeType(nativeType));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getNativeType(nativeType));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
336	[BUG]  [BUGGY]  sb.append( ",  {   ").append('n')  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  {   ").append('n')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  {   ").append('n')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
337	[BUG]  [BUGGY]  sb.append( "  {   ").append('/')  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('/')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('/')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
338	[BUG]  [BUGGY]  sb.append( "  {   ").append('$')  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('$')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('$')	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
339	[BUG]  [BUGGY]  sb.append( "  }   ").append(getOwnPropertyType(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getOwnPropertyType(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getOwnPropertyType(property));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
340	[BUG]  [BUGGY]  sb.append( "  }   ").append(getOwnPropertyName(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getOwnPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getOwnPropertyName(property));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
341	[BUG]  [BUGGY]  sb.append('  {  ').append(localCount);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(localCount);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(localCount);	  sb.append('    {    ').append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
342	[BUG]  [BUGGY]  sb.append( ": ").append(current.getName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getName()));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getName()));	  sb.append(   ":   ".equals(current.getName()));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
343	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName())+ "  }   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName())+ "  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName())+ "  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
344	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
345	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  propertyName  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  propertyName  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  propertyName  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
346	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnClass());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnClass());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnClass());	  sb.append(   "    {       ").append(current.getClass());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
347	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getDeclaringClass());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getDeclaringClass());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getDeclaringClass());	  sb.append(   "    {       ").append(current.getClass());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
348	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toString());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyName(property).toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toString());	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
349	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ", ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ", ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
350	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getReturnType());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getReturnType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getReturnType());	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
351	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPrototypeName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPrototypeName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPrototypeName());	  sb.append(   "    {       ").append(current.getLocalName());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
352	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  nativeType));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  nativeType));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
353	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations),  inferred);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
354	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.toString()  + "  }   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.toString()  + "  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.toString()  + "  }   ");	  sb.append(   "    {       ").append(current.toString());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
355	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.toString());	  sb.append(   "    {       ").append(current.toString());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
356	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",n ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",n ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",n ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
357	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  forAnnotations)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  forAnnotations)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null  ||  forAnnotations)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
358	[BUG]  [BUGGY]  sb.append( "  }  else  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  {  sb.append( ", ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  {  sb.append( ", ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
359	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
360	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(current));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(current));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
361	[BUG]  [BUGGY]  sb.append( "  {   ").append(className).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(className).append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(className).append('n');	  sb.append(   "    {       ").append(className);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
362	[BUG]  [BUGGY]  sb.append( "  {   ").append(className).append('/');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(className).append('/');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(className).append('/');	  sb.append(   "    {       ").append(className);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
363	[BUG]  [BUGGY]  sb.append( "  {   ").append(className).append(',');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(className).append(',');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(className).append(',');	  sb.append(   "    {       ").append(className);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
364	[BUG]  [BUGGY]  sb.append( ",  {   ").append('n')+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  {   ").append('n')+  1;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  {   ").append('n')+  1;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
365	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(inferred);	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
366	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(this);	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
367	[BUG]  [BUGGY]  sb.append( ":? ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":? ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":? ");	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	78	None	replace
368	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
369	[BUG]  [BUGGY]  sb.append( "  {   ").append(getNativeType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getNativeType(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getNativeType(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
370	[BUG]  [BUGGY]  sb.append('  <  ').append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  <  ').append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  <  ').append(current.getImplicitPrototype());	  sb.append('    <    ');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
371	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(current).toStringHelper(inferred));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(inferred));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
372	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(current).toStringHelper(nativeType));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(nativeType));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
373	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getImplicitName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getImplicitName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getImplicitName());	  sb.append(   "    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
374	[BUG]  [BUGGY]  sb.append('  }  ')  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ')	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
375	[BUG]  [BUGGY]  sb.append('  }'+  propertyNames);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }'+  propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }'+  propertyNames);	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
376	[BUG]  [BUGGY]  sb.append('  {  ').append(this.inferred);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(this.inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(this.inferred);	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
377	[BUG]  [BUGGY]  sb.append( "  }   ").append(this.inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(this.inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(this.inferred);	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
378	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.nativeType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(this.nativeType);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.nativeType);	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
379	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getName()  + "> ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getName()  + "> ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getName()  + "> ");	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
380	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.toString());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
381	[BUG]  [BUGGY]  sb.append( "  {   ").append(getReferenceName(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getReferenceName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getReferenceName(property));	  sb.append(   "    {       ").append(getOwnPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
382	[BUG]  [BUGGY]  sb.append( ": ").append(className);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(className);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(className);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
383	[BUG]  [BUGGY]  sb.append(current.getImplicitPrototype()).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getImplicitPrototype()).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getImplicitPrototype()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
384	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  inferred);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  inferred);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
385	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
386	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeFallback(current));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeFallback(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getImplicitPrototypeFallback(current));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
387	[BUG]  [BUGGY]  sb.append('  {  ').append(getImplicitPrototypeFallback(current));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getImplicitPrototypeFallback(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getImplicitPrototypeFallback(current));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
388	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeFallback(property));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeFallback(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getImplicitPrototypeFallback(property));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
389	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getNativeObjectType());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getNativeObjectType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getNativeObjectType());	  sb.append(   "    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
390	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
391	[BUG]  [BUGGY]  sb.append( ": ").append(current.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.toString());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.toString());	  sb.append(   ":   ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
392	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
393	[BUG]  [BUGGY]  sb.append(getReferenceName(current).toStringHelper());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getReferenceName(current).toStringHelper());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getReferenceName(current).toStringHelper());	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
394	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallbackText());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeFallbackText());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallbackText());	  sb.append(getImplicitPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
395	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getNativeObjectType());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getNativeObjectType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getNativeObjectType());	  sb.append(   "    {    }       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
396	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append('  }  ');  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append('  }  ');  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
397	[BUG]  [BUGGY]  sb.append( "  }  else  if(nativeType  ==  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(nativeType  ==  null)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(nativeType  ==  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
398	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append( ",  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
399	[BUG]  [BUGGY]  sb.append(':').append(current  ==  null?  null  :  current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current  ==  null?  null  :  current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current  ==  null?  null  :  current.getImplicitPrototype());	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
400	[BUG]  [BUGGY]  sb.append(':').append(current);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current);	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
401	[BUG]  [BUGGY]  sb.append(':').append(current!=  null?  null  :  current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current!=  null?  null  :  current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current!=  null?  null  :  current.getImplicitPrototype());	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
402	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
403	[BUG]  [BUGGY]  sb.append( "  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
404	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
405	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativePrototype())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativePrototype())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativePrototype())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
406	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInterface())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
407	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType()  ||  current.isInterface())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType()  ||  current.isInterface())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType()  ||  current.isInterface())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
408	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isUnknownType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isUnknownType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isUnknownType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
409	[BUG]  [BUGGY]  sb.append('  }  ').append(current.getInferredPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ').append(current.getInferredPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ').append(current.getInferredPrototype());	  sb.append(   "    }       ").append(current.getInferredPrototype());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
410	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getReferenceName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getReferenceName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getReferenceName());	  sb.append(   "    }       ").append(current.getInferredPrototype());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
411	[BUG]  [BUGGY]  sb.append( "  <   ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(getImplicitPrototype());	  sb.append(   "    {       ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
412	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
413	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(current));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(current));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
414	[BUG]  [BUGGY]  sb.append( ",  {  }   ").append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  {  }   ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  {  }   ").append('n');	  sb.append(   "    {    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	60	None	replace
415	[BUG]  [BUGGY]  sb.append( "  {  }   ").append('n')  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append('n')  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append('n')	  sb.append(   "    {    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	60	None	replace
416	[BUG]  [BUGGY]  sb.append( "  {  }   ").append('#');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append('#');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append('#');	  sb.append(   "    {    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	60	None	replace
417	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getReferenceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getReferenceName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getReferenceName());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
418	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeName());	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
419	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeType());	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
420	[BUG]  [BUGGY]  sb.append( ":n ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":n ").append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":n ").append(getImplicitPrototype());	  sb.append(   ":   ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
421	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current);	  sb.append(   "    {    }       ").append(propertyNames);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
422	[BUG]  [BUGGY]  sb.append( ":null ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":null ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":null ");	  sb.append(   ":n   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
423	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  forAnnotations)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  forAnnotations)  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null  ||  forAnnotations)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
424	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(inferred));	  sb.append(   "    {       ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
425	[BUG]  [BUGGY]  sb.append( "  }   ").append(annotationNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(annotationNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(annotationNames);	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
426	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(localCount);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(localCount);	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
427	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getNativeObjectType());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getNativeObjectType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getNativeObjectType());	  sb.append(   "    <       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
428	[BUG]  [BUGGY]  sb.append( ".   ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ".   ").append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ".   ").append(current.getImplicitPrototype());	  sb.append(   "    {       ").append(current.getImplicitPrototype()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
429	[BUG]  [BUGGY]  sb.append('  {  ',  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ',  forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ',  forAnnotations);	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
430	[BUG]  [BUGGY]  sb.append('  {'+  propertyNames.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {'+  propertyNames.size());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {'+  propertyNames.size());	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
431	[BUG]  [BUGGY]  sb.append('  {  ').append('  }  ');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append('  }  ');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append('  }  ');	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
432	[BUG]  [BUGGY]  sb.append('  {  ').append(':');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(':');	  sb.append('    {    ');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
433	[BUG]  [BUGGY]  sb.append( ": ").append(current.getNativeObjectType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getNativeObjectType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getNativeObjectType());	  sb.append(   ":   ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
434	[BUG]  [BUGGY]  sb.append( ".prototype. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ".prototype. ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ".prototype. ");	  sb.append('    <    ');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
435	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append(':');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
436	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName)).append(':');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(propertyName)).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyName)).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
437	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).append(':');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototypeType()).append(':');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeType()).append(':');	  sb.append(getPropertyType(property)).append(':');    	non-compiled	[CE]  <identifier>  expected	99	None	replace
438	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
439	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
440	[BUG]  [BUGGY]  sb.append( "  {   ").append(getReferenceName(current).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getReferenceName(current).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getReferenceName(current).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
441	[BUG]  [BUGGY]  sb.append( "  {   ").append(getRequiredPrototype()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getRequiredPrototype()).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getRequiredPrototype()).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
442	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInferred())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInferred())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInferred())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
443	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInstanceType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInstanceType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  current.isInstanceType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
444	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isUnknownType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
445	[BUG]  [BUGGY]  sb.append( ",  inferred ").append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ",  inferred ").append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  inferred ").append('n');	  sb.append(   "    }       ").append('n');    	non-compiled	[CE]  <identifier>  expected	83	None	replace
446	[BUG]  [BUGGY]  sb.append( ":. ".equals(current.getName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":. ".equals(current.getName()));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":. ".equals(current.getName()));	  sb.append(   ":   ".equals(current.getName()));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
447	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getImplicitPrototypeName());	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
448	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeType(current));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototypeType(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getImplicitPrototypeType(current));	  sb.append(   "    }       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
449	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.inferred);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.inferred);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.inferred);	  sb.append(   "    {       ").append(this.inferred);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
450	[BUG]  [BUGGY]  sb.append( "  {   ").append(getRequiredPrototypeName(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getRequiredPrototypeName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getRequiredPrototypeName(property));	  sb.append(   "    {       ").append(getPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
451	[BUG]  [BUGGY]  sb.append( "  {   ").append(getClassName(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getClassName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getClassName(property));	  sb.append(   "    {       ").append(getPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
452	[BUG]  [BUGGY]  sb.append('n');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('n');  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('n');	  sb.append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
453	[BUG]  [BUGGY]  sb.append( ", ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ", ").append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ", ").append(getImplicitPrototype());	  sb.append(   "    {       ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
454	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append('    {    ').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
455	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototype()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototype()).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPrototype()).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
456	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyNames).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(propertyNames).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyNames).toStringHelper(forAnnotations));	  sb.append(getPropertyType(current).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
457	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  current.isUnknownType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null  ||  current.isUnknownType())  {  sb.append( "  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null  ||  current.isUnknownType())  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(current    ==    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
458	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getLanguage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getLanguage());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getLanguage());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
459	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getInstanceType());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getInstanceType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getInstanceType());	  sb.append(   "    {    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
460	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append('  }   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append('  }   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append('  }   ");  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
461	[BUG]  [BUGGY]  sb.append( "  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }	  sb.append(   "    }    else    if(current!=    null)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
462	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getNativeType(UNKNOWN_TYPE));	  sb.append(getPropertyType(propertyName));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
463	[BUG]  [BUGGY]  sb.append(current.getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getPropertyType(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getPropertyType(propertyName));	  sb.append(getPropertyType(propertyName));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
464	[BUG]  [BUGGY]  sb.append( ", ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ", ").append(current.getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ", ").append(current.getImplicitPrototype());	  sb.append(   "    <       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
465	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyNames)  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(propertyNames)  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(propertyNames)	  sb.append(   "    {       ").append('n')    	non-compiled	[CE]  <identifier>  expected	81	None	replace
466	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getInstanceType());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getInstanceType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getInstanceType());	  sb.append(   "    {       ").append(current);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
467	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
468	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
469	[BUG]  [BUGGY]  sb.append( "  <   ").append(getImplicitPrototypeFallback(current));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(getImplicitPrototypeFallback(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(getImplicitPrototypeFallback(current));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
470	[BUG]  [BUGGY]  sb.append( ", ").append(getImplicitPrototypeFallback(current));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ", ").append(getImplicitPrototypeFallback(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ", ").append(getImplicitPrototypeFallback(current));	  sb.append(   "    {       ").append(getImplicitPrototypeFallback(property));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
471	[BUG]  [BUGGY]  sb.append(':').append(current.getNativeType());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current.getNativeType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current.getNativeType());	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
472	[BUG]  [BUGGY]  sb.append(':').append(current.getInstanceType());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':').append(current.getInstanceType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':').append(current.getInstanceType());	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
473	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getClass());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getClass());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getClass());	  sb.append(   "    {    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
474	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getLocalPart());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {  }   ").append(current.getLocalPart());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getLocalPart());	  sb.append(   "    {    }       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
475	[BUG]  [BUGGY]  sb.append( "  {   ").append(getRequiredPrototypeName(current).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getRequiredPrototypeName(current).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getRequiredPrototypeName(current).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
476	[BUG]  [BUGGY]  sb.append('  }  ',  getPropertyType(propertyNames));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  }  ',  getPropertyType(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ',  getPropertyType(propertyNames));	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
477	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(propertyNames));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(getPropertyType(propertyNames));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(propertyNames));	  sb.append('    {    ').append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
478	[BUG]  [BUGGY]  sb.append( ", ").append(current.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ", ").append(current.getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ", ").append(current.getName());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
479	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getClass());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  <   ").append(current.getClass());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getClass());	  sb.append(   "    <       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
480	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getLanguage());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getLanguage());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getLanguage());	  sb.append(   "    {       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
481	[BUG]  [BUGGY]  sb.append( "  }   ").append(this.implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(this.implicitPrototypeFallback);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(this.implicitPrototypeFallback);	  sb.append(   "    {       ").append(this.implicitPrototypeFallback);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
482	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(this));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(this));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
483	[BUG]  [BUGGY]  sb.append( ":. ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ":. ").append(getImplicitPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":. ").append(getImplicitPrototype());	  sb.append(   ":   ").append(getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
484	[BUG]  [BUGGY]  sb.append(className).append(propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(className).append(propertyName);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(className).append(propertyName);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
485	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')/  10  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')/  10  +  1;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')/  10  +  1;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
486	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')-  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')-  1;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')-  1;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
487	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')/  2.0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append('n')/  2.0;  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')/  2.0;	  sb.append(   "    {       ").append('n')+    1;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
488	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
489	[BUG]  [BUGGY]  sb.append(getImplicitPrototype().toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(getImplicitPrototype().toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype().toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
490	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(propertyName));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(propertyName));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeType(propertyName));	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
491	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeName(current));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeName(current));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeName(current));	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
492	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototypeType());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototypeType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPrototypeType());	  sb.append(   "    {       ").append(getImplicitPrototypeType(property));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
493	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getInstanceType());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getInstanceType());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getInstanceType());	  sb.append(   "    }       ").append(current.getNativeType());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
494	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnSimpleName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnSimpleName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnSimpleName());	  sb.append(   "    {       ").append(current.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
495	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(propertyName).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getPropertyType(propertyName).toStringHelper(this,  forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(propertyName).toStringHelper(this,  forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
496	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
497	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getDeclaringClass().getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getDeclaringClass().getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getDeclaringClass().getName());	  sb.append(   "    {       ").append(current.getPropertyName());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
498	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
499	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
500	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString()	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toString());    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
501	[BUG]  [BUGGY]  sb.append( ": ").append(current.getReferenceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ": ").append(current.getReferenceName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getReferenceName());	  sb.append(   ":   ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
502	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getAnnotations());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }   ").append(current.getAnnotations());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getAnnotations());	  sb.append(   "    }       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
503	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getDeclaredPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getDeclaredPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getDeclaredPrototype());	  sb.append(   "    {       ").append(current.getOwnPrototype());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
504	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isUnknownType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ",   ");  }	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
505	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType()  ||  forAnnotations)  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelp	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
506	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnno  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnno	  sb.append(   "    }    else    if(current.isNativeObjectType())    {    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    sb.append(propertyNames.get(i).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
507	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
508	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(propertyNames);  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType()).toStringHelper(propertyNames);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(propertyNames);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
509	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnPropertyName(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getOwnPropertyName(property));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnPropertyName(property));	  sb.append(   "    {       ").append(getOwnPropertyName(property));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
510	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('  {  ').append(current.getOwnPrototype());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getOwnPrototype());	  sb.append('    {    ').append(current.getName());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
511	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(current).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(current).toStringHelper(forAnnotations));  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(current).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(current));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
512	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  inferred> ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  inferred> ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  inferred> ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
513	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  property  names  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getName()  + ",  property  names  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + ",  property  names  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
514	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getClass().getName()  + "  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( "  {   ").append(current.getClass().getName()  + "  }   ");  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getClass().getName()  + "  }   ");	  sb.append(   "    {       ").append(current.getName()    +   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
515	[BUG]  [BUGGY]  sb.append(current.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(current.getName());  [BUGGY]        int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(current.getName());	  sb.append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
