bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getOwnPropertyName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnPropertyName());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getName()  +  1);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  +  1);	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getSimpleName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getSimpleName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getSimpleName());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getOwnPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getOwnPrototype());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getPropertyName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyName());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyNames);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(propertyNames);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(propertyNames);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  sb.append('  {  ').append(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  {  ').append(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(forAnnotations);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  sb.append( "  {   ").append(current);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(current));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(current));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(current));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getImplicitPrototype()  +  1);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getImplicitPrototype()  +  1);	  sb.append(   "    {       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPrototype());	  sb.append(   "    {       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getInferredPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getInferredPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getInferredPrototype());	  sb.append(   "    {       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  sb.append( "  {   ").append(className);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(className);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(className);	  sb.append(   "    {       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  sb.append( "  {   ").append(property);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(property);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(property);	  sb.append(   "    {       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  sb.append( "  {   ").append(name);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(name);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(name);	  sb.append(   "    {       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  sb.append('  {  ').append(propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  {  ').append(propertyName);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(propertyName);	  sb.append(   "    {       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  sb.append(':');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(':');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(':');	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  sb.append( ":n ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ":n ");  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":n ");	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  sb.append( ": ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ": ").append(current.getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getImplicitPrototype());	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ": ").append(propertyName);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(propertyName);	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  sb.append( ": ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ": ").append(getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(getImplicitPrototype());	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  sb.append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
29	[BUG]  [BUGGY]  sb.append(getPropertyType(current).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(current).toStringHelper(forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(current).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(propertyName));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(propertyName));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(property)).append(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toString());  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  sb.append('  }  ');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  }  ');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  }  ');	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(propertyNames.get(i).toStringHelper(forAnnotations);  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
37	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  sb.append( "  }   ");  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations);  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ", ");  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current.isNativeObjectType())  {  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  sb.append( ", ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ", ");  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ", ");	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  <   ").append(current.getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getImplicitPrototype());	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  sb.append( "  <   ").append(current.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  <   ").append(current.getName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  <   ").append(current.getName());	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getPropertyType(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getPropertyType(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeType(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeType(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyName(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototype());	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(propertyName));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(propertyName));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getImplicitPrototypeFallback(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getImplicitPrototypeFallback(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  sb.append( "  {   ").append('N');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append('N');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('N');	  sb.append(   "    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {  }   ").append(current.getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getImplicitPrototype());	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  sb.append('  {  ');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  {  ');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ');	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {  }   ").append(propertyNames);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(propertyNames);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {  }   ").append(propertyName);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(propertyName);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getNativeObjectType());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getNativeObjectType());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getNativeObjectType());	  sb.append(   "    {       ").append(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
60	[BUG]  [BUGGY]  sb.append( "  {  }   ").append('n');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {  }   ").append('n');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append('n');	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  sb.append( ",  }   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ",  }   ");  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  }   ");	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
63	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this,  forAnnotations);	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.toString());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.toString());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.toString());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getName()  + "  }   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getName()  + "  }   ");  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getName()  + "  }   ");	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  sb.append('  {  ').append(current.getName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  {  ').append(current.getName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  {  ').append(current.getName());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
68	[BUG]  [BUGGY]  sb.append( "  {   ").append(inferred);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(inferred);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(inferred);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(this.implicitPrototypeFallback);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.implicitPrototypeFallback);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  sb.append( "  {   ").append(this.inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(this.inferred);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(this.inferred);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
71	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getImplicitPrototypeFallback());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototypeFallback());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).toStringHelper(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
73	[BUG]  [BUGGY]  sb.append(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getImplicitPrototype());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(getPropertyType(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
75	[BUG]  [BUGGY]  sb.append( "  {   ").append(getOwnPropertyType(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getOwnPropertyType(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getOwnPropertyType(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  sb.append( "  {   ").append(getOwnPropertyName(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getOwnPropertyName(property));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getOwnPropertyName(property));	  sb.append(   "    {       ").append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
77	[BUG]  [BUGGY]  sb.append('  <  ');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('  <  ');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append('  <  ');	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
78	[BUG]  [BUGGY]  sb.append( ":. ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ":. ");  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ":. ");	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
79	[BUG]  [BUGGY]  sb.append( ": ").append(current.getName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ": ").append(current.getName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ").append(current.getName());	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
80	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append('n')  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')	  sb.append(   "    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  sb.append( ",  {   ").append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ",  {   ").append('n');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ",  {   ").append('n');	  sb.append(   "    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
83	[BUG]  [BUGGY]  sb.append( "  }   ").append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append('n');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append('n');	  sb.append(   "    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
84	[BUG]  [BUGGY]  sb.append( "  {   ").append('n')+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append('n')+  1;  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append('n')+  1;	  sb.append(   "    {       ").append('n');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
85	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(current.getImplicitPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getImplicitPrototype());	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
86	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(propertyName);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(propertyName);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
87	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getNativeType());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(current.getNativeType());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getNativeType());	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
88	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getInferredPrototype());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(current.getInferredPrototype());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getInferredPrototype());	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
89	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getNativeType());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getNativeType());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getNativeType());	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
90	[BUG]  [BUGGY]  sb.append( "  }   ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(forAnnotations);  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(forAnnotations);	  sb.append(   "    {       ").append(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
91	[BUG]  [BUGGY]  sb.append( ": ".equals(current.getName()));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( ": ".equals(current.getName()));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( ": ".equals(current.getName()));	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
92	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
93	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( "  }   ");  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
94	[BUG]  [BUGGY]  sb.append( "  }   ").append(current.getName());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }   ").append(current.getName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }   ").append(current.getName());	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  sb.append( "  }  else  if(current!=  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current!=  null)  {  sb.append( "  }   ");  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current!=  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  }  else  if(current  ==  null)  {  sb.append( ", ");  }  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  }  else  if(current  ==  null)  {  sb.append( ", ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
97	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getName());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {  }   ").append(current.getName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getName());	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(current.getNativeType());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {  }   ").append(current.getNativeType());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {  }   ").append(current.getNativeType());	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
99	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).append(':');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(property)).append(':');  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property)).append(':');	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
100	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append(getPropertyType(property).toStringHelper());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getClass());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getClass());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getClass());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
102	[BUG]  [BUGGY]  sb.append( "  {   ").append(current.getLocalName());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append( "  {   ").append(current.getLocalName());  [BUGGY]      int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	sb.append( "  {   ").append(current.getLocalName());	  sb.append(   "    {       ").append(current.getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
