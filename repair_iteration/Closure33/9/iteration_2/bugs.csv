bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_PROPERTY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_PROPERTY);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop));  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop));  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).restrictByNotNullOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
35	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
45	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  typeToInfer.getType();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getType();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getRecordType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  typeToInfer.getRecordType();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getRecordType();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
54	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  constraintObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  null);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
59	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
63	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
65	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
68	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
69	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
70	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getOwnPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
75	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
79	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
80	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
81	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
82	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
83	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
84	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
85	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
88	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
89	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
90	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
91	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
92	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
94	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
95	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
97	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
98	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length()  -  1);  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length()  -  1);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
99	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPrototypeType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  typeToInfer.getPrototypeType();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPrototypeType();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
100	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
101	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
102	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  forAnnotations);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
106	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
108	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
109	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
110	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
111	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  inferred);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thisInterface);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thisInterface);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
113	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
114	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  typeToInfer);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
115	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
116	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
117	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
118	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  thatObj.getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
119	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
120	[BUG]  [BUGGY]  JSType  propType  =  getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  JSType  propType  =  getPropertyType(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  getPropertyType(prop);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
121	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
122	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  1;  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
123	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  0);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  0);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
124	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
125	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(prop);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
126	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName());  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
127	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
128	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  1;  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
129	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
130	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
131	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]    .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
