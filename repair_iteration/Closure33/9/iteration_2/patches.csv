bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getOwnPropertyType(prop));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getOwnPropertyType(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getOwnPropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
2	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType,  constraintObj.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType,  constraintObj.getOwnPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType,  constraintObj.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
3	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getOwnPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
4	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
5	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
6	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getPropertyType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
7	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
8	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
9	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
10	[BUG]  [BUGGY]  propType  =  propertyName.toLowerCase();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  propType  =  propertyName.toLowerCase();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	propType  =  propertyName.toLowerCase();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
11	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
12	[BUG]  [BUGGY]  propType  =  typeToInfer.toLowerCase();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  propType  =  typeToInfer.toLowerCase();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	propType  =  typeToInfer.toLowerCase();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
13	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getRecordPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getRecordPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getRecordPropertyNames())  {  propType  =  propertyName.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
14	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROP).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROP).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROP).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTY);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROTOTYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROTOTYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROTOTYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
21	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
22	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
23	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
24	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID,  prop).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
25	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
26	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
27	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
28	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
29	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPrototype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPrototype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPrototype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
30	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
31	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
32	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
33	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer,  0);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
34	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
35	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
36	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_PROPERTY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
37	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_OBJECT_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_OBJECT_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
39	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
40	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
41	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
42	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getProperty(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
43	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getProperty(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
44	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
45	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  typeToInfer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
46	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getPropertyType(prop));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getPropertyType(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getPropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
47	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
48	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop)+  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop)+  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop)+  1);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
49	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getReferenceName());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getReferenceName());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getReferenceName());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
50	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  thisInterface);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop),  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
51	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
52	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
53	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).constructType(type);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).constructType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).constructType(type);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
54	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(type);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(type);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
55	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).constructType(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
56	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
59	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
60	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
61	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
62	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
63	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
64	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
65	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getProperty(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
66	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  prop.getProperty(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  prop.getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  prop.getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
67	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
68	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
69	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
70	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPropertyCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
71	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
72	[BUG]  [BUGGY]  typeToInfer.putProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer.putProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer.putProperty(prop,  typeToInfer);	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
73	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
74	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getPropertyCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getPropertyCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getPropertyCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
75	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)/  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)/  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)/  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
76	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  2;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  2;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
77	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(propType)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
78	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)-  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)-  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)-  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
79	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  3;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  3;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
80	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
81	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
82	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
83	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  0);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
84	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  false);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  false);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
85	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  true);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer,  true);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
86	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
87	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
88	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(type);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(type);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
89	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).constructType(type);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).constructType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).constructType(type);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
90	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
91	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getFirstSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getFirstSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getFirstSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
92	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
93	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
94	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
95	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
96	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
97	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
98	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
99	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
100	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(propType)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
101	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
102	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
103	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  PROPERTY_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  PROPERTY_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  PROPERTY_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
104	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
105	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  null);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
106	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  2;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  2;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
107	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  0;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  0;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
108	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  4;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  4;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
109	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  3;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  3;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
110	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)/  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)/  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)/  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
111	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  prop;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  prop;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  prop;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
112	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  0);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
113	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  false);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer,  false);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
114	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
115	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
116	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
117	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
118	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  null);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
119	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  thisInterface);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
120	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop)+  1;	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
121	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  propertyName);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
122	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  false);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  false);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  false);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
123	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  className);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  className);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  className);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
124	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
125	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  name);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  name);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
126	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeName);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
127	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
128	[BUG]  [BUGGY]  ObjectType  propType  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  typeToInfer.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  typeToInfer.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
129	[BUG]  [BUGGY]  ObjectType  propType  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  constraintsObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  constraintsObj.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
130	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  thatObj.getPropertyType(prop,  typeToInfer);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
131	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
132	[BUG]  [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  null;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  null;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  null;	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
133	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
134	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
135	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
136	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
137	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
138	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
139	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  propertyName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
140	[BUG]  [BUGGY]  typeToInfer  =  getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
141	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
142	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
143	[BUG]  [BUGGY]  PropertyType  typeToInfer  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  PropertyType  typeToInfer  =  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	PropertyType  typeToInfer  =  constraintObj.getPropertyType(prop);	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
144	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  typeToInfer  =  propType;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  typeToInfer  =  propType;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  typeToInfer  =  propType;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
145	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer;	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
146	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
147	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getProperty(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
148	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
149	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
150	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
151	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
152	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
153	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
154	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop),  p.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop),  p.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop),  p.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
155	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
156	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(type);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(type);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
157	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
158	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType),  constraintObj.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType),  constraintObj.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType),  constraintObj.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
159	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
160	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
161	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPrototype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPrototype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPrototype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
162	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
163	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
164	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
165	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
166	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
167	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_PROPERTY,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_PROPERTY,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_PROPERTY,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
168	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_PROPERTY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
169	[BUG]  [BUGGY]  typeToInfer  =  prop.getPrototypeType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.getPrototypeType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.getPrototypeType();	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
170	[BUG]  [BUGGY]  typeToInfer  =  propType.getPrototypeType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  propType.getPrototypeType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  propType.getPrototypeType();	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
171	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPrototypeFallback();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPrototypeFallback();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPrototypeFallback();	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
172	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPrototype();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPrototype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPrototype();	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
173	[BUG]  [BUGGY]  typeToInfer  =  thatObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  thatObj.getPrototypeType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  thatObj.getPrototypeType();	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
174	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
175	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
176	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
177	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
178	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmpty();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmpty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmpty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
179	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
180	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
181	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
182	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
183	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
184	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
185	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getProperty(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
186	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).constructType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).constructType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).constructType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
187	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
188	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
189	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  0);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
190	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
191	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
192	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
193	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop,  null);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
194	[BUG]  [BUGGY]  typeToInfer  =  prop.getPropertyType(type);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.getPropertyType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.getPropertyType(type);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
195	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.declareType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.declareType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.declareType(prop);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
196	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop,  propertyName);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
197	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.findPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.findPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.findPropertyType(prop);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
198	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
199	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
200	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
201	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEXES).getPropertyName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEXES).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEXES).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
202	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX).getPropertyName();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
203	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
204	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
205	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(type);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(type);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
206	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
207	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop,  propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
208	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
209	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
210	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
211	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
212	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
213	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getPrototype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getPrototype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getPrototype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
214	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(prototype);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(prototype);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(prototype);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
215	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(type);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(type);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
216	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
217	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
218	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
219	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
220	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
221	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propType).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
222	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
223	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(type);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  prop.getPropertyType(type);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
224	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  prop.getPropertyType(prop);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
225	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
226	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
227	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
228	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getProperty(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
229	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
230	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
231	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatCtor);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
232	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
233	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
234	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
235	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer,  0);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
236	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
237	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
238	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
239	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getRawClass());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getRawClass());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getRawClass());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
240	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getReturnType());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getReturnType());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getReturnType());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
241	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
242	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thatCtor);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
243	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thisInterface);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
244	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  0);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
245	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  typeToInfer.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  typeToInfer.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  typeToInfer.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
246	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  PROPERTY).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  PROPERTY).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  PROPERTY).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
247	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  this);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
248	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
249	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thatCtor);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
250	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  p);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  p);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
251	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
252	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
253	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
254	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  null);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
255	[BUG]  [BUGGY]  typeToInfer  =  getType(JSTypeNative.TYPE_PROPERTY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getType(JSTypeNative.TYPE_PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getType(JSTypeNative.TYPE_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
256	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
257	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  0);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
258	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
259	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
260	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  false);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  false);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
261	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
262	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
263	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  type);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  type);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
264	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
265	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  prop.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  prop.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  prop.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    prop);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
266	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
267	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
268	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
269	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  PROPERTY).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
270	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
271	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
272	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
273	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
274	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
275	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
276	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
277	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
278	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
279	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  1);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    0);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
280	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  0);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    0);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
281	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  PROPERTY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    0);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
282	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
283	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getImplicitPrototype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getImplicitPrototype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
284	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getImmutablePrototype(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getImmutablePrototype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getImmutablePrototype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
285	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getOwnPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
286	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getRawClass();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getRawClass();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getRawClass();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
287	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  prop.getPropertyType();	  JSType    typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
288	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  propType.getPropertyType();	  JSType    typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
289	[BUG]  [BUGGY]  JSType  typeToInfer  =  this.typeToInfer.getPropertyType();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  this.typeToInfer.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  this.typeToInfer.getPropertyType();	  JSType    typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
290	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
291	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
292	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
293	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
294	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
295	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
296	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
297	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
298	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
299	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
300	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
301	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
302	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType).getProperty(propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
303	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
304	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
305	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
306	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
307	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
308	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getProperty(propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
309	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
310	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
311	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
312	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(this.typeToInfer,  prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(this.typeToInfer,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(this.typeToInfer,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
313	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
314	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)/  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)/  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)/  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
315	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  2;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  2;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
316	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)-  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)-  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)-  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
317	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY),  propType.getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY),  propType.getLeastSupertype(propType)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY),  propType.getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
318	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  3;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  3;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  3;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
319	[BUG]  [BUGGY]  JSType  propType  =  getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  getPropertyType(prop,  typeToInfer);	  JSType    propType    =    getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
320	[BUG]  [BUGGY]  JSType  propType  =  getPropertyType(prop.toString());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  getPropertyType(prop.toString());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  getPropertyType(prop.toString());	  JSType    propType    =    getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
321	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
322	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
323	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
324	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
325	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
326	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
327	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  false);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  false);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
328	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineProperty(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineProperty(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineProperty(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
329	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
330	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
331	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  typeToInfer,  0);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
332	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
333	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getProperty(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
334	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getProperty(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
335	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
336	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
337	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(propType));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(propType));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(propType));	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
338	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(prop));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(prop));	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
339	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType,  constraintObj.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType,  constraintObj.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType,  constraintObj.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
340	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getName());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getName());	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
341	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
342	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getPropertyType());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getPropertyType());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getPropertyType());	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
343	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(prop));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(prop));	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
344	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getPropertyType(prop));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getPropertyType(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getPropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
345	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
346	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
347	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getName());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getName());	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
348	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
349	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)?  null  :  prop.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)?  null  :  prop.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)?  null  :  prop.restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
350	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
351	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).propertyName.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).propertyName.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).propertyName.restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
352	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatCtor);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    thatObj);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
353	[BUG]  [BUGGY]  typeToInfer  =  prop.getType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.getType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.getType();	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
354	[BUG]  [BUGGY]  typeToInfer  =  propType.getType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  propType.getType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  propType.getType();	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
355	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getProperty(prop);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getProperty(prop);	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
356	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getProperty();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getProperty();	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
357	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
358	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
359	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
360	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
361	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
362	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
363	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  0);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
364	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
365	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  propertyName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
366	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
367	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getProperty(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
368	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
369	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getProperty(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
370	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  this);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
371	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  propertyName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
372	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  thatCtor);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
373	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
374	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
375	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
376	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getProperty(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
377	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
378	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getProperty(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
379	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getPrototype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getPrototype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getPrototype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
380	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
381	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
382	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
383	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
384	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
385	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
386	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  p.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  p.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  p.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
387	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
388	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.isConstructor()?  null  :  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.isConstructor()?  null  :  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.isConstructor()?  null  :  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
389	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.equals(typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.equals(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.equals(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
390	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getProperty(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
391	[BUG]  [BUGGY]  typeToInfer  =  prop.getRecordType();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.getRecordType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.getRecordType();	  typeToInfer    =    typeToInfer.getRecordType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
392	[BUG]  [BUGGY]  typeToInfer  =  propType.getRecordType();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  propType.getRecordType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  propType.getRecordType();	  typeToInfer    =    typeToInfer.getRecordType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
393	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
394	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROTOTYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
395	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
396	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROP);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROP);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROP);	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
397	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
398	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType,  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType,  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType,  constraintObj.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
399	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  prop,  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  prop,  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  prop,  constraintObj.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
400	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
401	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
402	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
403	[BUG]  [BUGGY]  propType  =  propertyName.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  propType  =  propertyName.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	propType  =  propertyName.restrictByNotNullOrUndefined();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
404	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
405	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  typeToInfer  =  propType.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  typeToInfer  =  propType.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  typeToInfer  =  propType.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
406	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  properties.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  properties.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  properties.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
407	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
408	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
409	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(thisInterface,  prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(thisInterface,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(thisInterface,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
410	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatInterface);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
411	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
412	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
413	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
414	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  props.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  props.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  props.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
415	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.setProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.setProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.setProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
416	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
417	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  typeToInfer,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
418	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
419	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
420	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
421	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraints);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraints);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraints);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
422	[BUG]  [BUGGY]  typeToInfer  =  prop.getPropertyType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.getPropertyType();	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
423	[BUG]  [BUGGY]  typeToInfer  =  propType.getPropertyType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  propType.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  propType.getPropertyType();	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
424	[BUG]  [BUGGY]  typeToInfer  =  thatObj.getPropertyType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  thatObj.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  thatObj.getPropertyType();	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
425	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyName();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyName();	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
426	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
427	[BUG]  [BUGGY]  propType  =  propertyName.substring(0,  propType.length()  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  propType  =  propertyName.substring(0,  propType.length()  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	propType  =  propertyName.substring(0,  propType.length()  -  1);	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
428	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
429	[BUG]  [BUGGY]  propType  =  propType.substring(0,  typeToInfer.length()  -  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  propType  =  propType.substring(0,  typeToInfer.length()  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	propType  =  propType.substring(0,  typeToInfer.length()  -  1);	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
430	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
431	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
432	[BUG]  [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  typeToInfer.length());  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  typeToInfer.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	For(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  typeToInfer.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
433	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(UNKNOWN_TYPE,  prop);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
434	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(PROPERTY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(PROPERTY);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
435	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_PROPERTY);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(UNKNOWN_PROPERTY);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
436	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(UNKNOWN_TYPE,  propertyName);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
437	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE,  PROPERTY);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(UNKNOWN_TYPE,  PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(UNKNOWN_TYPE,  PROPERTY);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
438	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(prop);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(prop);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
439	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  inferred);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
440	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thatCtor);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
441	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thisInterface);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
442	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  thatCtor);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
443	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  0);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
444	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
445	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
446	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
447	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTIES);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTIES);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
448	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
449	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
450	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
451	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
452	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
453	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(type);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(type);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
454	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)?  null  :  prop.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)?  null  :  prop.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)?  null  :  prop.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
455	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop),  typeToInfer.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop),  typeToInfer.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop),  typeToInfer.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
456	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
457	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  constraintObj.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  constraintObj.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  constraintObj.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
458	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  p.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  p.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType),  p.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
459	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPrototype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPrototype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPrototype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
460	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).strictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).strictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).strictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
461	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotEmpty();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotEmpty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotEmpty();	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
462	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE)?  null  :  getNativeType(JSTypeNative.TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE)?  null  :  getNativeType(JSTypeNative.TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE)?  null  :  getNativeType(JSTypeNative.TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
463	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
464	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getSimplePropertyType(prop));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getSimplePropertyType(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getSimplePropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
465	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  constraintObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
466	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
467	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
468	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
469	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatCtor);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatCtor);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatCtor);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
470	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatObj,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatObj,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  thatObj,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
471	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(thatObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
472	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
473	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
474	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
475	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
476	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
477	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  PROPERTY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
478	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
479	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
480	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
481	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getLeastSupertype(prop));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getLeastSupertype(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getLeastSupertype(prop));	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
482	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
483	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)&&  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)&&  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)&&  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
484	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getName());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getName());	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
485	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getProperty();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
486	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
487	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
488	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getProperty();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
489	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getProperty();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
490	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(propType));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(propType));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(propType));	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
491	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType,  constraintObj.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType,  constraintObj.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType,  constraintObj.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
492	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
493	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getPropertyType());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getPropertyType());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getPropertyType());	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
494	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
495	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getRawClass();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getRawClass();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getRawClass();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
496	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getRestrictedProperty(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getRestrictedProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getRestrictedProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
497	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
498	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
499	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getFirstSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getFirstSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getFirstSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
500	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
501	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
502	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
503	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
504	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
505	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
506	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop),  typeToInfer.getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop),  typeToInfer.getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop),  typeToInfer.getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
507	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
508	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
509	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
510	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
511	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
512	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
513	[BUG]  [BUGGY]  typeToInfer.addProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer.addProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer.addProperty(prop,  typeToInfer);	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
514	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  typeToInfer.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
515	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.removeProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.removeProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.removeProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
516	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
517	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  props.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  props.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  props.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
518	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
519	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  null);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
520	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  propertyName);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
521	[BUG]  [BUGGY]  Type  typeToInfer  =  prop.getPropertyType(type);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  prop.getPropertyType(type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  prop.getPropertyType(type);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
522	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  thisInterface);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
523	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getType(prop);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getType(prop);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
524	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyName());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyName());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
525	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.toString());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.toString());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
526	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
527	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
528	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
529	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
530	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
531	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
532	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
533	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
534	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
535	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propType);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
536	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
537	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).internalGetProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).internalGetProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).internalGetProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
538	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  thisInterface);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
539	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
540	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
541	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getProperty();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
542	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getProperty();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
543	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getLeastSupertype(prop);	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
544	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getReferenceNames())  {  propType  =  propertyName.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getReferenceNames())  {  propType  =  propertyName.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getReferenceNames())  {  propType  =  propertyName.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
545	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toUpperCase();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toUpperCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.toUpperCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
546	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  properties.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  properties.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  properties.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
547	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
548	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
549	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
550	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  inferred);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
551	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  nativeType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  nativeType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  nativeType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
552	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
553	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintsObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintsObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintsObj);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
554	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
555	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
556	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
557	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  typeToInfer  -  1);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
558	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
559	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getReferenceNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getReferenceNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getReferenceNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
560	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.restrictByNotNullOrUndefined();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
561	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getRecordPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getRecordPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getRecordPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
562	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
563	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
564	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  node);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  node);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
565	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  constraintsObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  constraintsObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  constraintsObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
566	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  p);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  p);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
567	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
568	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getPropertyType()  :  prop;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getPropertyType()  :  prop;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getPropertyType()  :  prop;	  JSType    typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
569	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getPropertyType()  :  null;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getPropertyType()  :  null;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getPropertyType()  :  null;	  JSType    typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
570	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).strictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).strictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).strictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
571	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
572	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).internal();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).internal();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).internal();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
573	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getOwnPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
574	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  constraintObj.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  constraintObj.getOwnPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  constraintObj.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
575	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
576	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
577	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
578	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTY).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
579	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).constructType(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
580	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getImplicitPrototype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getImplicitPrototype();	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
581	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
582	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  property);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  property);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  property);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
583	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
584	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
585	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLastSupertype(prop));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLastSupertype(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLastSupertype(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
586	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getFirstSupertype(prop));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getFirstSupertype(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getFirstSupertype(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
587	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getImplicitPrototype());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getImplicitPrototype());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
588	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getPropertyType(prop));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getPropertyType(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getPropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
589	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID,  propType.getPropertyType(prop));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID,  propType.getPropertyType(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID,  propType.getPropertyType(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
590	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
591	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
592	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propPrototype,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propPrototype,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propPrototype,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
593	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
594	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
595	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  nativeType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  nativeType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  nativeType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
596	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  boolean  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  boolean  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  boolean  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
597	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
598	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  prop.getImplicitPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
599	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  inferred);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
600	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPrototype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPrototype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPrototype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
601	[BUG]  [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
602	[BUG]  [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  thisInterface.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  thisInterface.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  thisInterface.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
603	[BUG]  [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  getNativeType(UNKNOWN_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  typeToInfer!=  null?  thatObj.getPropertyType(prop):  getNativeType(UNKNOWN_TYPE);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
604	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  typeToInfer);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
605	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  thatObj);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
606	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
607	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
608	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
609	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
610	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
611	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
612	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  typeToInfer.getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  typeToInfer.getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  typeToInfer.getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
613	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
614	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(this);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
615	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(nativeType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(nativeType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(nativeType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
616	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
617	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
618	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
619	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getOwnPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getOwnPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
620	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
621	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
622	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
623	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
624	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
625	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
626	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
627	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLeastSupertype(this);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
628	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
629	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  propType.getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
630	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
631	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
632	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
633	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_STRING).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_STRING).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_STRING).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
634	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
635	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop,  0);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
636	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
637	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,  typeToInfer  -  1);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
638	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
639	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer  ==  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
640	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
641	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
642	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)||  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)||  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)||  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
643	[BUG]  [BUGGY]  Type  typeToInfer  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  constraintObj.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  constraintObj.getPropertyType(prop);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
644	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.declareType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.declareType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.declareType(prop);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
645	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(propType);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
646	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  propertyName;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  propertyName;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)+  propertyName;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
647	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length()  -  1);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length()  -  1);  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
648	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
649	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length()  -  1);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length()  -  1);  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
650	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  propType.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
651	[BUG]  [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length()  -  1);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName.substring(0,  propType.length()  -  1);  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
652	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  0;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  0;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
653	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  4;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+  4;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
654	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
655	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
656	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&!propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&!propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&!propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
657	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
658	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
659	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
660	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(prop,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
661	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
662	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  PROPERTY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
663	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  -  1);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
664	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
665	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  &  0xFFFF);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  &  0xFFFF);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  &  0xFFFF);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
666	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(thisInterface,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(thisInterface,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(thisInterface,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
667	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thisInterface);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    thisInterface);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
668	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
669	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).setPropertyType(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).setPropertyType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).setPropertyType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
670	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).setPropertyName(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).setPropertyName(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).setPropertyName(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
671	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  0;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  0;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
672	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  4;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  4;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+  4;	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType)+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
673	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
674	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
675	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  constraintObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
676	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
677	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPrototypeType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPrototypeType(prop);	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
678	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
679	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
680	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NOT_OBJECT_TYPE).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
681	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
682	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
683	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  -1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  -1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  -1);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    0);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
684	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
685	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).constructType(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).constructType(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).constructType(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
686	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
687	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
688	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propertyName;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
689	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  typeToInfer;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  typeToInfer;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  typeToInfer;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
690	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  typeToInfer;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  typeToInfer;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer  ==  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  typeToInfer;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
691	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
692	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).strictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).strictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).strictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
693	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
694	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  property);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  property);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  property);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
695	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  property);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  property);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  property);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
696	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
697	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  thatObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  thatObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    thatObj);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
698	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
699	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getFirstSupertype(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getFirstSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getFirstSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
700	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getImplicitPrototype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getImplicitPrototype();	  typeToInfer    =    typeToInfer.getRecordType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
701	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  thatObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  thatObj);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
702	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  thisInterface);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
703	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getType()  :  prop;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer!=  null?  typeToInfer.getType()  :  prop;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer!=  null?  typeToInfer.getType()  :  prop;	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
704	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
705	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
706	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getUpperCase(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getUpperCase(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getUpperCase(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
707	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
708	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
709	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).defineInferredProperty(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).defineInferredProperty(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).defineInferredProperty(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
710	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
711	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
712	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
713	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
714	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
715	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
716	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).toLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
717	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).toLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
718	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPrototype(typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPrototype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPrototype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
719	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
720	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyType();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
721	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  property);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  property);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  property);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
722	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE  +  prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE  +  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE  +  prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
723	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintsObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintsObj);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintsObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
724	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
725	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
726	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).constructType(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
727	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPrototype(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPrototype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPrototype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
728	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
729	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getProperty(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
730	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
731	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPrototype(typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPrototype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPrototype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
732	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
733	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
734	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
735	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
736	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getPropertyName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getPropertyName();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getPropertyName();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getPropertyName();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
737	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
738	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
739	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  PROPERTY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
740	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
741	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  propertyName);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(prop,  propertyName);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
742	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.cloneTree();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.cloneTree();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.cloneTree();	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
743	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
744	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).strictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).strictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).strictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
745	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
746	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(propType)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
747	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
748	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getOwnPropertyNames();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
749	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer.setProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer.setProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototypeCount();  i++)  {  typeToInfer.setProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
750	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE).getProperty(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
751	[BUG]  [BUGGY]  JSType  propType  =  getPropertyType(prop  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  getPropertyType(prop  +  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  getPropertyType(prop  +  1);	  JSType    propType    =    getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
752	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPrototype(typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPrototype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPrototype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
753	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
754	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
755	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType  +  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType  +  1);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
756	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
757	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
758	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
759	[BUG]  [BUGGY]  JSType  propType  =  propertyName.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  propertyName.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  propertyName.restrictByNotNullOrUndefined();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
760	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.restrictByNotNullOrUndefined();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
761	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
762	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  prop.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  prop.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  prop.getPropertyNames())  {  propType  =  propertyName.restrictByNotNullOrUndefined();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.restrictByNotNullOrUndefined();    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
763	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  null,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  null,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  null,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
764	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  prop).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
765	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
766	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  PROPERTY).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
767	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
768	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
769	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
770	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
771	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
772	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
773	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT_OBJECT);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT_OBJECT);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT_OBJECT);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
774	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  typeToInfer.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  typeToInfer.length());  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType.substring(0,  typeToInfer.length());  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
775	[BUG]  [BUGGY]  JSType  propType  =  propertyName.substring(0,  propType.length()  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  propertyName.substring(0,  propType.length()  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  propertyName.substring(0,  propType.length()  -  1);	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
776	[BUG]  [BUGGY]  JSType  propType  =  propType.substring(0,  propType.length()  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  propType.substring(0,  propType.length()  -  1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  propType.substring(0,  propType.length()  -  1);	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.substring(0,    propType.length()    -    1);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
777	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
778	[BUG]  [BUGGY]  Type  propTypeToInfer  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  propTypeToInfer  =  typeToInfer.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  propTypeToInfer  =  typeToInfer.getPropertyType(prop);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
779	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
780	[BUG]  [BUGGY]  Type  typeToInfer  =  prop.getTypeToInfer();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  prop.getTypeToInfer();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  prop.getTypeToInfer();	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
781	[BUG]  [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop)+  1;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  Type  typeToInfer  =  typeToInfer.getPropertyType(prop)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	Type  typeToInfer  =  typeToInfer.getPropertyType(prop)+  1;	  Type    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
782	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  0);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  0);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propType);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
783	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
784	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).propertyName;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).propertyName;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).propertyName;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
785	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  this);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    thatObj);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
786	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType),  constraintObj.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType),  constraintObj.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType),  constraintObj.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
787	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
788	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
789	[BUG]  [BUGGY]  ObjectType  propType  =  this.typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  this.typeToInfer.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  this.typeToInfer.getPropertyType(prop);	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
790	[BUG]  [BUGGY]  ObjectType  propType  =  typeToInfer  ==  null?  thatObj.getPropertyType(prop):  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  ObjectType  propType  =  typeToInfer  ==  null?  thatObj.getPropertyType(prop):  null;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	ObjectType  propType  =  typeToInfer  ==  null?  thatObj.getPropertyType(prop):  null;	  ObjectType    propType    =    thatObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
791	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
792	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
793	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
794	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).getLeastSupertype(typeToInfer);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
795	[BUG]  [BUGGY]  JSType  propTypeToInfer  =  typeToInfer.getPropertyType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propTypeToInfer  =  typeToInfer.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propTypeToInfer  =  typeToInfer.getPropertyType();	  JSType    typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
796	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined(1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined(1);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined(1);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
797	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getRestrictedProperty(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getRestrictedProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getRestrictedProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
798	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).typeToInfer();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).typeToInfer();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).typeToInfer();	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
799	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_IMPLEMENTED).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
800	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName,  inferred);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,  propertyName,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
801	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
802	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototype();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
803	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getName();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getName();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getName();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
804	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getProperty();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getProperty();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getProperty();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
805	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop).restrictByNotNullOrUndefined());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop).restrictByNotNullOrUndefined());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyType(prop).restrictByNotNullOrUndefined());	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
806	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyName(prop));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyName(prop));  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getPropertyName(prop));	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getPropertyType(prop));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
807	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getPropertyType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
808	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  thisInterface);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  thisInterface);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).constructType(propType);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
809	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
810	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType)?  typeToInfer  :  propType;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType)?  typeToInfer  :  propType;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType)?  typeToInfer  :  propType;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
811	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(this);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
812	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY)+  1;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
813	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    null);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
814	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getRecordPrototypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
815	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertypeCount();  i++)  {  typeToInfer.putProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototypeCount();    i++)    {    typeToInfer.putProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
816	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  PROTOTYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  PROTOTYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
817	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
818	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
819	[BUG]  [BUGGY]  typeToInfer  =  prop.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.getPropertyType(prop);	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
820	[BUG]  [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  typeToInfer.getPropertyType(prop)+  1;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  typeToInfer.getPropertyType(prop)+  1;	  typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
821	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  this.typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,  this.typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    this.typeToInfer);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
822	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop)?  typeToInfer  :  propType;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop)?  typeToInfer  :  propType;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop)?  typeToInfer  :  propType;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
823	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).findTypeToInfer(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).findTypeToInfer(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).findTypeToInfer(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
824	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).declareType(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).declareType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).declareType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
825	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).declareType(typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).declareType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop).declareType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    prop).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
826	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY_PROPERTY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY_PROPERTY);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
827	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
828	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
829	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
830	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
831	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getImplicitPrototype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getImplicitPrototype();	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
832	[BUG]  [BUGGY]  typeToInfer  =  this.typeToInfer.getRecordType();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  this.typeToInfer.getRecordType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  this.typeToInfer.getRecordType();	  typeToInfer    =    typeToInfer.getRecordType();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
833	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getLeastSupertype(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getLeastSupertype(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)||  propType.getLeastSupertype(prop,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)||    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
834	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1,  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1,  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1,  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
835	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)&&  propType.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)&&  propType.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)&&  propType.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
836	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
837	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
838	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
839	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
840	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPrototype();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  prop).getPrototype();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    prop).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
841	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROTECTED).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROTECTED).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_PROTECTED).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
842	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_NOT_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
843	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).constructType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).constructType(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.NO_TYPE).constructType(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
844	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROTOTYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROTOTYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
845	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_PROTOTYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
846	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
847	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
848	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(this);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE,    propType).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
849	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  forAnnotations);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  forAnnotations);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
850	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  this);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    inferred);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
851	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
852	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getPropertyType(propType);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
853	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  PROPERTY).getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  PROPERTY).getRestrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  PROPERTY).getRestrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
854	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_ROOT).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_ROOT).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_ROOT).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_VOID).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
855	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getProperty(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
856	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop)[0].getProperty(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop)[0].getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop)[0].getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
857	[BUG]  [BUGGY]  typeToInfer  =  this.typeToInfer.getPrototypeType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  this.typeToInfer.getPrototypeType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  this.typeToInfer.getPrototypeType();	  typeToInfer    =    typeToInfer.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
858	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
859	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).constructType(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
860	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getLeastSupertype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
861	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(int  i  =  0;  i  <  propType.getImplicitPrototype();  i++)  {  typeToInfer.addProperty(prop,  typeToInfer);  }  }	  if(typeToInfer!=    null)    {    for(int    i    =    0;    i    <    propType.getImplicitPrototype();    i++)    {    typeToInfer.addProperty(prop,    typeToInfer);    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
862	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
863	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
864	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType,  null);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
865	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toString();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).toString();	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
866	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
867	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  propType).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
868	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  prop).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  prop).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  prop).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
869	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  PROPERTY).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROP,  PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROP).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
870	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
871	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).propertyName;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).propertyName;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).propertyName;	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
872	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
873	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  PROPERTY).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  PROPERTY).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
874	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  PROPERTY_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  PROPERTY_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  PROPERTY_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
875	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).restrictByNotNullOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).restrictByNotNullOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
876	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  PROPERTY).restrictByNotEmptyOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  PROPERTY).restrictByNotEmptyOrUndefined();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  PROPERTY).restrictByNotEmptyOrUndefined();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
877	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullable();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullable();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).restrictByNotNullable();	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
878	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop),  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop),  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getLeastSupertype(prop),  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getLeastSupertype(prop));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
879	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
880	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
881	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
882	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
883	[BUG]  [BUGGY]  JSType  propType  =  propertyName.toLowerCase();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  propertyName.toLowerCase();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  propertyName.toLowerCase();	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
884	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  prop.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  prop.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  prop.getPropertyNames())  {  propType  =  propertyName.toLowerCase();  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
885	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
886	[BUG]  [BUGGY]  JSType  propTypeToInfer  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propTypeToInfer  =  typeToInfer.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propTypeToInfer  =  typeToInfer.getPropertyType(prop);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
887	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
888	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getTypeToInfer();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getTypeToInfer();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  typeToInfer  =  prop.getTypeToInfer();	  JSType    typeToInfer    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
889	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
890	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  inferred);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  inferred);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
891	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  propType;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
892	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop;  }  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	if(typeToInfer!=  null)  {  for(String  propertyName  :  constraintObj.getPropertyNames())  {  propType  =  prop;  }	  if(typeToInfer!=    null)    {    for(String    propertyName    :    constraintObj.getPropertyNames())    {    propType    =    propertyName;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
893	[BUG]  [BUGGY]  JSType  propType  =  getPropertyType(prop.getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  getPropertyType(prop.getName());  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  getPropertyType(prop.getName());	  JSType    propType    =    getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
894	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
895	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getProperty(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
896	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(PROTOTYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(PROTOTYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(PROTOTYPE);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
897	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(PROPERTY_TYPE);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(PROPERTY_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(PROPERTY_TYPE);	  typeToInfer    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
898	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  typeToInfer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType.getName(),  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
899	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType.getName());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
900	[BUG]  [BUGGY]  typeToInfer  =  this.typeToInfer.getPropertyType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  this.typeToInfer.getPropertyType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  this.typeToInfer.getPropertyType();	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
901	[BUG]  [BUGGY]  typeToInfer  =  this.typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  this.typeToInfer.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  this.typeToInfer.getPropertyType(prop);	  typeToInfer    =    typeToInfer.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
902	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraints);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraints);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraints);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
903	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
904	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getProperty(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY).getProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
905	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
906	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  prop.getLeastSupertype(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  prop.getLeastSupertype(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  prop.getLeastSupertype(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
907	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.hasProperty(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.hasProperty(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)&&  propType.hasProperty(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)&&    propType.getLeastSupertype(prop);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
908	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  propType.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  propType.getPropertyType(prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  prop  :  propType.getPropertyType(prop);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE),    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
909	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY  +  prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY  +  prop);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY  +  prop);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
910	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY_OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY_OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY_OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
911	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
912	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1,  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1,  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)+  1,  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
913	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)||  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)||  propType.getLeastSupertype(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)||  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE),    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
914	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY).getLeastSupertype(typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    PROPERTY).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
915	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(propType,  typeToInfer);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getProperty(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
916	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getProperty(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getProperty(propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  PROPERTY).getProperty(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getProperty(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
917	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraints.type);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraints.type);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraints.type);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
918	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)?  null  :  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  this);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE)?    null    :    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,    constraintObj);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
919	[BUG]  [BUGGY]  typeToInfer  =  prop.typeToInfer.getType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.typeToInfer.getType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.typeToInfer.getType();	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
920	[BUG]  [BUGGY]  typeToInfer  =  this.typeToInfer.getType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  this.typeToInfer.getType();  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  this.typeToInfer.getType();	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
921	[BUG]  [BUGGY]  typeToInfer  =  prop.typeToInfer;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  prop.typeToInfer;  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  prop.typeToInfer;	  typeToInfer    =    typeToInfer.getType();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
922	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  propType);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).defineInferredProperty(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
923	[BUG]  [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {      [BUGGY]  JSType  propType  =  typeToInfer.getPropertyType(prop,  this);  [BUGGY]      .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	JSType  propType  =  typeToInfer.getPropertyType(prop,  this);	  JSType    propType    =    typeToInfer.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
