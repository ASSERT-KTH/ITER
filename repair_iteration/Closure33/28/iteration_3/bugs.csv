bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)&&  typeToInfer.isConstructor())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)&&  typeToInfer.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)&&  typeToInfer.isConstructor())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isVarArgs())  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isVarArgs())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isVarArgs())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
4	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isInterface())  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isInterface())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isInterface())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
5	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isFunctionType())  {  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isFunctionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isFunctionType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
7	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
8	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
9	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
10	[BUG]  [BUGGY]  if(propType  ==  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
11	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!isFunctionTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!isFunctionTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!isFunctionTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
12	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!isFunctionTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!isFunctionTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!isFunctionTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
13	[BUG]  [BUGGY]  if(propType  ==  null  ||!isFunctionTypeDeclared(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!isFunctionTypeDeclared(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!isFunctionTypeDeclared(typeToInfer))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
14	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!isFunctionTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!isFunctionTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!isFunctionTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
15	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVarArgsTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVarArgsTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVarArgsTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
16	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
19	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
20	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isVarArgsType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isVarArgsType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isVarArgsType())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
21	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  typeToInfer.isUnionType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  typeToInfer.isUnionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  typeToInfer.isUnionType())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
22	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isFunctionType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isFunctionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isFunctionType())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
23	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType.isUnionType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType.isUnionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType.isUnionType())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
24	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasPropertyType(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasPropertyType(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasPropertyType(propType))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
25	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasPropertyType(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasPropertyType(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasPropertyType(propType))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
26	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!hasPropertyType(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!hasPropertyType(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!hasPropertyType(propType))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
27	[BUG]  [BUGGY]  if(propType  ==  null  ||!hasPropertyType(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!hasPropertyType(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!hasPropertyType(typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
28	[BUG]  [BUGGY]  if(propType!=  null  ||!hasPropertyType(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasPropertyType(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasPropertyType(typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
29	[BUG]  [BUGGY]  if(propType  ==  null  &&!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  &&!hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  &&!hasProperty(prop))  {	  if(typeToInfer    ==    null    &&!hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  if  (typeToInfer!=  null  ||!typeToInfer.hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  ||!typeToInfer.hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  ||!typeToInfer.hasProperty(prop))  {	  if    (typeToInfer    ==    null    ||!typeToInfer.hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
31	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(propType))  {	  if    (typeToInfer    ==    null    ||!typeToInfer.hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
32	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
33	[BUG]  [BUGGY]  if(propType  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
34	[BUG]  [BUGGY]  if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
35	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isUnknownType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
36	[BUG]  [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isNativeType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isNativeType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)&&!typeToInfer.isNativeType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
37	[BUG]  [BUGGY]  if  (!hasProperty(propType)||!typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)||!typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)||!typeToInfer.isUnknownType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
38	[BUG]  [BUGGY]  if  (!hasProperty(propType)||  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)||  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)||  typeToInfer.isUnknownType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
39	[BUG]  [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)&&!typeToInfer.isVoidType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
40	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isNativeType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isNativeType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isNativeType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
41	[BUG]  [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isFunctionType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isFunctionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)&&!typeToInfer.isFunctionType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
42	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!isVoidType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
43	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!isVoidType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
44	[BUG]  [BUGGY]  if(propType  ==  null  ||!isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
45	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!isVoidType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
46	[BUG]  [BUGGY]  if(propType!=  null  ||!isVoidType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
47	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isUnknownType())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isUnknownType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
48	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
49	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  null);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
50	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
51	[BUG]  [BUGGY]  if  (typeToInfer!=  null  ||  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  ||  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  ||  typeToInfer.isUnknownType())  {	  if    (typeToInfer    ==    null    ||    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
52	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  &&  typeToInfer.isUnknownType())  {	  if    (typeToInfer    ==    null    ||    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
53	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&  typeToInfer.isUnknownType())  {	  if    (typeToInfer    ==    null    ||    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
54	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&!hasProperty(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&!hasProperty(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&!hasProperty(propType,  typeToInfer))  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
55	[BUG]  [BUGGY]  if  (!hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(prop,  typeToInfer))  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
56	[BUG]  [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.equals(getNativeType(JSTypeNative.VOID_TYPE)))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.equals(getNativeType(JSTypeNative.VOID_TYPE)))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.equals(getNativeType(JSTypeNative.VOID_TYPE)))  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
57	[BUG]  [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
58	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
59	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
60	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(propType,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
61	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(propType,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
62	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType,  propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(propType,  propType))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
63	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType,  propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType,  propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(propType,  propType))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
64	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
65	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(prop))  {	  if(propType    ==    null    ||!hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  if(propType!=  null  &&!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&!hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&!hasProperty(prop))  {	  if(propType    ==    null    ||!hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(propType))  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  &&!typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  &&!typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  &&!typeToInfer.hasProperty(propType))  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)||!typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)||!typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)||!typeToInfer.hasProperty(propType))  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
71	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isConstructor())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isConstructor())  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
72	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isNativeType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isNativeType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isNativeType())  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
73	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isFunctionTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isFunctionTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isFunctionTypeDeclared(propType))  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
74	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isInterface())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isInterface())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isInterface())  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
75	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(prop,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
76	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop,  propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(prop,  propType))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
77	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!hasProperty(prop,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
78	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop,  propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(prop,  propType))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
79	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
80	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)&&  typeToInfer!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)&&  typeToInfer!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)&&  typeToInfer!=  null)  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
81	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer  ==  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer  ==  null)  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
82	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  propType!=  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  propType!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  propType!=  null)  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
83	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!isVoidTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!isVoidTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
84	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!isVoidTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!isVoidTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
85	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!isVoidTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!isVoidTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!isVoidTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
86	[BUG]  [BUGGY]  if(propType  ==  null  ||!isVoidTypeDeclared(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!isVoidTypeDeclared(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!isVoidTypeDeclared(typeToInfer))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
87	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
88	[BUG]  [BUGGY]  if(propType!=  null  ||!isVoidTypeDeclared(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!isVoidTypeDeclared(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!isVoidTypeDeclared(typeToInfer))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
89	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  typeToInfer.isVoidType())  {	  if(typeToInfer!=    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
90	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  typeToInfer.isVoidType())  {	  if(typeToInfer!=    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
91	[BUG]  [BUGGY]  if(propType!=  null  ||  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||  typeToInfer.isVoidType())  {	  if(typeToInfer!=    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
92	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(prop,  typeToInfer))  {	  if(typeToInfer!=    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
93	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
94	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!isPropertyTypeDeclared(propType))  {	  if(typeToInfer!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
95	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!isPropertyTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!isPropertyTypeDeclared(propType))  {	  if(typeToInfer!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
96	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(typeToInfer))  {	  if(typeToInfer!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
97	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
98	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
100	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
101	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
102	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
103	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
104	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
105	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(propType))  {	  if(propType    ==    null    ||!hasProperty(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
106	[BUG]  [BUGGY]  if(propType  ==  null  ||!hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!hasProperty(propType))  {	  if(propType    ==    null    ||!hasProperty(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  if(propType!=  null  &&!hasProperty(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&!hasProperty(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&!hasProperty(typeToInfer))  {	  if(propType    ==    null    ||!hasProperty(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
108	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
109	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.equals(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.equals(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.equals(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
110	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.equals(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.equals(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.equals(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
111	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
112	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.equals(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
113	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
114	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!isPropertyTypeDeclared(typeToInfer))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
115	[BUG]  [BUGGY]  if(propType  ==  null  ||  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||  typeToInfer.isVoidType())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
116	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  propType.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  propType.isVoidType())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
117	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType.isFunctionType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType.isFunctionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType.isFunctionType())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
118	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType.isConstructor())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType.isConstructor())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
119	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isSubtype(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
120	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
121	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isSubtype(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
122	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
123	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
124	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(propType))  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
125	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)&&  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)&&  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)&&  typeToInfer.isVoidType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
126	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isUnknownType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
127	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  propType.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  propType.isVoidType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
128	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isLeastSupertype())  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isLeastSupertype())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isLeastSupertype())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
129	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
130	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
131	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(propType)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
132	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
133	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
134	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  typeToInfer  >=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  typeToInfer  >=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(propType)&&  typeToInfer  >=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
135	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
136	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
137	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
138	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
139	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
140	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
141	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
142	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  null);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
143	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
144	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
145	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(prop)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
146	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
147	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!hasProperty(prop)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!hasProperty(prop)&&  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
148	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
149	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
150	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VOID_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
151	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
152	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
153	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VAR_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_VAR_TYPE).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_VAR_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
154	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
155	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
156	[BUG]  [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
157	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
158	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
159	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
160	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
161	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(typeToInfer)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
162	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.equals(propType))  {	  if    (!hasProperty(propType)&&!typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
163	[BUG]  [BUGGY]  if  (!hasProperty(propType)||!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)||!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)||!typeToInfer.equals(propType))  {	  if    (!hasProperty(propType)&&!typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
164	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)||!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)||!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)||!typeToInfer.equals(propType))  {	  if    (!hasProperty(propType)&&!typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
165	[BUG]  [BUGGY]  if  (!typeToInfer.equals(propType)&&!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.equals(propType)&&!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.equals(propType)&&!typeToInfer.equals(propType))  {	  if    (!hasProperty(propType)&&!typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
166	[BUG]  [BUGGY]  if(propType!=  null  &&!hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&!hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&!hasProperty(propType))  {	  if(typeToInfer    ==    null    &&!hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
167	[BUG]  [BUGGY]  if(propType  ==  null  &&!hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  &&!hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  &&!hasProperty(propType))  {	  if(typeToInfer    ==    null    &&!hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
168	[BUG]  [BUGGY]  if(propType!=  null  ||!hasProperty(typeToInfer))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!hasProperty(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!hasProperty(typeToInfer))  {	  if(typeToInfer!=    null    ||!hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
169	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer!=  null)  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
170	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.equals(propType))  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
171	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isNativeType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isNativeType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isNativeType())  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
172	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
173	[BUG]  [BUGGY]  if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
174	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
175	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&!isPropertyTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
176	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&!isPropertyTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&!isPropertyTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
177	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVoidTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
178	[BUG]  [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||!isPropertyTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
179	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVarArgsTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVarArgsTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVarArgsTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
180	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
181	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isUnknownType())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
182	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isLeastSupertype())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isLeastSupertype())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isLeastSupertype())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
183	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.isUnknownType())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
184	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
185	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null  &&  typeToInfer.isUnknownType())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
186	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
187	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
188	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
189	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&  typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&  typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&  typeToInfer.hasProperty(propType))  {	  if    (typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
190	[BUG]  [BUGGY]  if  (typeToInfer.hasProperty(propType)||  typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer.hasProperty(propType)||  typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer.hasProperty(propType)||  typeToInfer.hasProperty(propType))  {	  if    (typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
191	[BUG]  [BUGGY]  if  (typeToInfer.hasProperty(propType)||  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer.hasProperty(propType)||  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer.hasProperty(propType)||  typeToInfer.isVoidType())  {	  if    (typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
192	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
193	[BUG]  [BUGGY]  if(propType  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  typeToInfer)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  typeToInfer)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  typeToInfer)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
194	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
195	[BUG]  [BUGGY]  if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  typeToInfer)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  typeToInfer)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  typeToInfer)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
196	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  propType)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
197	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
198	[BUG]  [BUGGY]  if(propType  ==  null  ||  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType  ==  null  ||  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType  ==  null  ||  typeToInfer.isUnknownType())  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
199	[BUG]  [BUGGY]  if(propType!=  null  ||  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||  typeToInfer.isUnknownType())  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
200	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  propType.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  propType.isUnknownType())  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
201	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  propType.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  propType.isUnknownType())  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
202	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  propType.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  propType.isUnknownType())  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
203	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType.isUnknownType()  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType.isUnknownType()  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType.isUnknownType()  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
204	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
205	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
206	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType,  null);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
207	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
208	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop,  typeToInfer))  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
209	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  &&!typeToInfer.hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  &&!typeToInfer.hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  &&!typeToInfer.hasProperty(prop,  typeToInfer))  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
210	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop,  propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop,  propType))  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
211	[BUG]  [BUGGY]  if  (typeToInfer.hasProperty(prop,  propType))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer.hasProperty(prop,  propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer.hasProperty(prop,  propType))  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
212	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
213	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
214	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
215	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
216	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isConstructor())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isConstructor())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
217	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isInterfaceType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isInterfaceType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isInterfaceType())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
218	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer  ==  null)  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
219	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  typeToInfer  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  typeToInfer  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  typeToInfer  ==  null)  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
220	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(propType,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
221	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
222	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPrototypeTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
223	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  typeToInfer!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  typeToInfer!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  typeToInfer!=  null)  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
224	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
225	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).setLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).setLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).setLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
226	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
227	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
228	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
229	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer!=  null)  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
230	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
231	[BUG]  [BUGGY]  if  (typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer.hasProperty(prop)||  typeToInfer.isConstructor())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
232	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!hasProperty(propType)&&!typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!hasProperty(propType)&&!typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!hasProperty(propType)&&!typeToInfer.isUnknownType())  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
233	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  propType.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  propType.isVoidType())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
234	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)!=  propType)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)!=  propType)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)!=  propType)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
235	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  propType)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  propType)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  propType)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
236	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  propType)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  propType)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)  ==  propType)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    propType)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
237	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  }  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  }	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
238	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
239	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
240	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(prop)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
241	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
242	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(prop)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
243	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop,  typeToInfer))  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
244	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop,  typeToInfer)||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop,  typeToInfer)||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop,  typeToInfer)||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
245	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isFunctionType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isFunctionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isFunctionType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
246	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPrototypeDeclared(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
247	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||  typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||  typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||  typeToInfer.hasProperty(propType))  {	  if    (typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
248	[BUG]  [BUGGY]  if  (typeToInfer.hasProperty(propType)||  typeToInfer.isRecordType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer.hasProperty(propType)||  typeToInfer.isRecordType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer.hasProperty(propType)||  typeToInfer.isRecordType())  {	  if    (typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
249	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
250	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
251	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||  typeToInfer.isUnionType())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||  typeToInfer.isUnionType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||  typeToInfer.isUnionType())  {	  if(typeToInfer    ==    null    ||    typeToInfer.isUnionType())    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
252	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.hasLeastSupertype(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.hasLeastSupertype(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.hasLeastSupertype(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
253	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
254	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(prop,  typeToInfer)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
255	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPrototypeDeclared(propType))  {	  if(typeToInfer!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
256	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isLeastSupertype())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isLeastSupertype())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isLeastSupertype())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
257	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isUnknownType())  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
258	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE),.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE),.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE),.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
259	[BUG]  [BUGGY]  if  (!hasProperty(propType,  typeToInfer)||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType,  typeToInfer)||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType,  typeToInfer)||  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
260	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(propType)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
261	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
262	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!hasProperty(propType)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!hasProperty(propType)&&  typeToInfer  ==  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    typeToInfer!=    getNativeType(JSTypeNative.VOID_TYPE))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
263	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  prop);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
264	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_OBJECT_TYPE);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_OBJECT_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
265	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE)!=  null  &&  typeToInfer.equals(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
266	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
267	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)||  typeToInfer.isVoidType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
268	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isRecordType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isRecordType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop)||  typeToInfer.isRecordType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
269	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isRecordType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isRecordType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)||  typeToInfer.isRecordType())  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
270	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!hasProperty(propType)&&!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!hasProperty(propType)&&!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!hasProperty(propType)&&!typeToInfer.equals(propType))  {	  if    (!hasProperty(propType)&&!typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
271	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isFunctionTypeDeclared(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isFunctionTypeDeclared(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isFunctionTypeDeclared(propType,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
272	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasPropertyType(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasPropertyType(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasPropertyType(propType,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
273	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
274	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE).getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
275	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
276	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
277	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  typeToInfer);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
278	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPrototypeTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPrototypeTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
279	[BUG]  [BUGGY]  if(typeToInfer!=  null  ||!isVoidTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  ||!isVoidTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  ||!isVoidTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
280	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isFunctionTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isFunctionTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isFunctionTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
281	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(prop,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
282	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType.isSubtype(typeToInfer))  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
283	[BUG]  [BUGGY]  if  (typeToInfer!=  null  ||!typeToInfer.hasProperty(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  ||!typeToInfer.hasProperty(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  ||!typeToInfer.hasProperty(propType))  {	  if    (typeToInfer    ==    null    ||!typeToInfer.hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
284	[BUG]  [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer  ==  null  ||!typeToInfer.hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if    (typeToInfer    ==    null    ||!typeToInfer.hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
285	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
286	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
287	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
288	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSuper  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSuper  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSuper	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
289	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
290	[BUG]  [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.equals(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.equals(propType))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
291	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isLocal())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isLocal())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isLocal())  {	  if(typeToInfer!=    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
292	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isAllType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isAllType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isAllType())  {	  if(typeToInfer!=    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
293	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isPrototypeType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isPrototypeType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isPrototypeType())  {	  if(typeToInfer!=    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
294	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.getLeastSupertype(propType)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
295	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
296	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)!=  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
297	[BUG]  [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  propType.getLeastSupertype(propType)  ==  null)  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
298	[BUG]  [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop)||  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop)||  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (typeToInfer!=  null  &&!typeToInfer.hasProperty(prop)||  typeToInfer.isVoidType())  {	  if    (!typeToInfer.hasProperty(prop)||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
299	[BUG]  [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType)&&!typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType)&&!typeToInfer.isSubtype(typeToInfer))  {	  if    (!hasProperty(propType)&&!typeToInfer.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
300	[BUG]  [BUGGY]  if(prop!=  null  &&!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(prop!=  null  &&!hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(prop!=  null  &&!hasProperty(prop))  {	  if(typeToInfer!=    null    &&!hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
301	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!typeToInfer.equals(propType))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
302	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(prop))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(prop))  {	  if(typeToInfer    ==    null    ||!isPropertyTypeDeclared(prop))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
303	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasPropertyType(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasPropertyType(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasPropertyType(propType)&&  getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
304	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasPropertyType(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasPropertyType(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasPropertyType(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!hasPropertyType(propType))    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
305	[BUG]  [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.isUnknownType())  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
306	[BUG]  [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.isSubtype(typeToInfer))  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
307	[BUG]  [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!hasProperty(propType,  typeToInfer)&&!typeToInfer.equals(propType))  {	  if    (!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
308	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
309	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  getType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  getType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(prop)&&  getType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
310	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(prop)&&  getNativeType(JSTypeNative.VOID_TYPE)  >=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(prop)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
311	[BUG]  [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  ||!isPropertyTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  ||!isPropertyTypeDeclared(propType))  {	  if(typeToInfer!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
312	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isTypeDeclared(propType))  {	  if(typeToInfer!=    null    ||!isPropertyTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
313	[BUG]  [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.hasSupertype(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.hasSupertype(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.hasSupertype(propType))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.getLeastSupertype(propType)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
314	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isConstructorTypeDeclared(propType))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isConstructorTypeDeclared(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isConstructorTypeDeclared(propType))  {	  if(typeToInfer    ==    null    ||!isFunctionTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
315	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
316	[BUG]  [BUGGY]  if(propType!=  null  &&  typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  typeToInfer.isVoidType())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
317	[BUG]  [BUGGY]  if(propType!=  null  &&  propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  propType.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  propType.isVoidType())  {	  if(typeToInfer    ==    null    ||    propType.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
318	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(prop,  typeToInfer)&&!typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(prop,  typeToInfer)&&!typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(prop,  typeToInfer)&&!typeToInfer.isUnknownType())  {	  if    (!typeToInfer.hasProperty(prop,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
319	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)&&  typeToInfer!=  getNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
320	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)||  typeToInfer  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)||  typeToInfer  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isVoidTypeDeclared(propType)||  typeToInfer  ==  null)  {	  if(typeToInfer    ==    null    ||!isVoidTypeDeclared(propType))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
321	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType!=  null)  {	  if(typeToInfer    ==    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
322	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NOT_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NOT_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NOT_TYPE)!=  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
323	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  typeToInfer.isSubtype(typeToInfer))  {	  if(typeToInfer    ==    null    ||    typeToInfer.isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
324	[BUG]  [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if  (!typeToInfer.hasProperty(propType)&&!typeToInfer.isVoidType())  {	  if    (!typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
325	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  getLeastSupertype(propType)!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!hasProperty(propType)&&  getLeastSupertype(propType)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!hasProperty(propType)&&  getLeastSupertype(propType)!=  null)  {	  if(typeToInfer    ==    null    ||!hasProperty(propType)&&    getNativeType(JSTypeNative.VOID_TYPE)!=    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
326	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_PROTOTYPE);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
327	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_STRING_TYPE);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.EMPTY_STRING_TYPE);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.EMPTY_STRING_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.EMPTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
328	[BUG]  [BUGGY]  if(typeToInfer  ==  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null)  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
329	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getL	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
330	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  }  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  }	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
331	[BUG]  [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer!=  null)  {  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  }  else  {  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
332	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE),.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE),.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE),.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
333	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE),  propType.getLeastSupertype(propType);  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
334	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType,  typeToInfer))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType,  typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!isPropertyTypeDeclared(propType,  typeToInfer))  {	  if(typeToInfer    ==    null    ||!hasProperty(propType,    typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
335	[BUG]  [BUGGY]  if(typeToInfer.hasProperty(propType)||  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer.hasProperty(propType)||  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer.hasProperty(propType)||  typeToInfer.isUnknownType())  {	  if    (typeToInfer.hasProperty(propType))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
336	[BUG]  [BUGGY]  if(prop!=  null  ||!hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(prop!=  null  ||!hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(prop!=  null  ||!hasProperty(prop))  {	  if(typeToInfer!=    null    ||!hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
337	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!propType.hasProperty(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!propType.hasProperty(prop))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!propType.hasProperty(prop))  {	  if(propType    ==    null    ||!hasProperty(prop))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
338	[BUG]  [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)  ==  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
339	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE)  ==  null)  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
340	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  isNativeType(JSTypeNative.VOID_TYPE))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  isNativeType(JSTypeNative.VOID_TYPE))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  isNativeType(JSTypeNative.VOID_TYPE))  {	  if(typeToInfer!=    null    ||    getNativeType(JSTypeNative.VOID_TYPE)    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
341	[BUG]  [BUGGY]  if(propType!=  null  &&  typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  typeToInfer.isUnknownType())  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
342	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||  propType.isUnknownType()  ||  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||  propType.isUnknownType()  ||  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||  propType.isUnknownType()  ||  typeToInfer.equals(propType))  {	  if(typeToInfer    ==    null    ||    propType.isUnknownType())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
343	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!propType.isVoidType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!propType.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!propType.isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
344	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!propType.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!propType.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!propType.isUnknownType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
345	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!typeToInfer.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!typeToInfer.isUnknownType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!typeToInfer.isUnknownType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
346	[BUG]  [BUGGY]  if(typeToInfer  ==  null  ||!typeToInfer.isVoidType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(typeToInfer  ==  null  ||!typeToInfer.isVoidType())  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(typeToInfer  ==  null  ||!typeToInfer.isVoidType())  {	  if(typeToInfer    ==    null    ||!isVoidType())    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
347	[BUG]  [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  getNativeType(JSTypeNative.VOID_TYPE)!=  null  &&  typeToInfer.isSubtype(typeToInfer))  {	  if(typeToInfer!=    null    &&    getNativeType(JSTypeNative.VOID_TYPE)!=    null    &&    typeToInfer.isSubtype(typeToInfer))    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
348	[BUG]  [BUGGY]  if(propType!=  null  &&  typeToInfer.getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  typeToInfer.getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  typeToInfer.getNativeType(JSTypeNative.VOID_TYPE)!=  null)  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
349	[BUG]  [BUGGY]  if(propType!=  null  &&  typeToInfer.equals(propType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  typeToInfer.equals(propType))  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  typeToInfer.equals(propType))  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
350	[BUG]  [BUGGY]  if(propType!=  null  &&  typeToInfer  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;      [BUGGY]  if(propType!=  null  &&  typeToInfer  ==  null)  {  [BUGGY]      typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	if(propType!=  null  &&  typeToInfer  ==  null)  {	  if(propType!=    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
