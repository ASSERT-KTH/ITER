bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  propertyNames.addAll(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  propertyNames.addAll(current.getImplicitPrototype());  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.addAll(current.getImplicitPrototype());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  propertyNames.addAll(current.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  propertyNames.addAll(current.getOwnPropertyNames());  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.addAll(current.getOwnPropertyNames());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  propertyNames.add(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  propertyNames.add(current.getImplicitPrototype());  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.add(current.getImplicitPrototype());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototype();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPrototype();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  propertyNames.addAll(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  propertyNames.addAll(current.getOwnPrototype());  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.addAll(current.getOwnPrototype());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.contains(propertyName);  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.contains(propertyName);  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.contains(propertyName);  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    &&    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    &&    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    &&    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    &&    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    &&    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getImplicitPrototype();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototypeFallback();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPrototypeFallback();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  propertyNames.addAll(current.getOwnPrototypeFallback());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  propertyNames.addAll(current.getOwnPrototypeFallback());  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.addAll(current.getOwnPrototypeFallback());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getownerFunction();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  PropertyType  ownerFunction  =  current.getownerFunction();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getownerFunction();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  ObjectType  current  =  current.getImplicitPrototype();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype();  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  current!=  null  &&!current.isConstructor()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isConstructor()  &&  propertyNames.contains(propertyName);  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isConstructor()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeObjectType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;    [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.contains(propertyName);  [BUGGY]    propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
