bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
2	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
3	[BUG]  [BUGGY]  current  ==  null  &&!current.isUnknownType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isUnknownType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isUnknownType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    &&    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current!=  null?  null  :  current.getOwnPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current!=  null?  null  :  current.getOwnPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current!=  null?  null  :  current.getOwnPrototype();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getOwnPrototype();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getOwnPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getOwnPrototype();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getInferredPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getInferredPrototype();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getPrototype();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getPrototype();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPropertyType();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPropertyType();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPropertyType();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
12	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
13	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
14	[BUG]  [BUGGY]  ObjectType  current  =  current!=  null?  null  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current!=  null?  null  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current!=  null?  null  :  current.getImplicitPrototype();	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
15	[BUG]  [BUGGY]  ObjectType  current  =  current  ==  null?  null  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current  ==  null?  null  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current  ==  null?  null  :  current.getImplicitPrototype();	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
16	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototypeFallback();	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
17	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||  forAnnotations;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype()  ||  forAnnotations;	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
18	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  +  1;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype()  +  1;	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
19	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    &&    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
22	[BUG]  [BUGGY]  current  ==  null  &&!current.isUnknownType()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isUnknownType()  &&  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isUnknownType()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
23	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeType()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeType()    ||    propertyNames.size()    <    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
24	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current!=  null?  null  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current!=  null?  null  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current!=  null?  null  :  current.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
25	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current  ==  null?  null  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current  ==  null?  null  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current  ==  null?  null  :  current.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
26	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current  instanceof  ObjectType?(ObjectType)current  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current  instanceof  ObjectType?(ObjectType)current  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current  instanceof  ObjectType?(ObjectType)current  :  current.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
27	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype()  ||  forAnnotations;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype()  ||  forAnnotations;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype()  ||  forAnnotations;	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
28	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getInferredPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current.getInferredPrototype();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
29	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  ||  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
30	[BUG]  [BUGGY]  current  ==  null  &&!current.isInterface()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isInterface()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isInterface()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
31	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isInterface()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  properties.contains(propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  &&  properties.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  properties.contains(propertyName);	  current!=    null    &&!current.isInterface()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  current  ==  null  &&!current.isInterface()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isInterface()  &&  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isInterface()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isInterface()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  propertyNames.addAll(current.getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.addAll(current.getImplicitPrototypeFallback());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.addAll(current.getImplicitPrototypeFallback());	  propertyNames.addAll(current.getOwnPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
35	[BUG]  [BUGGY]  propertyNames.add(current.getOwnPrototypeFallback());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.add(current.getOwnPrototypeFallback());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.add(current.getOwnPrototypeFallback());	  propertyNames.addAll(current.getOwnPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
36	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPropertyNames();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPropertyNames();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPropertyNames();	  PropertyType    ownerFunction    =    current.getownerFunction();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
37	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getPropertyType(propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getPropertyType(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getPropertyType(propertyName);	  PropertyType    ownerFunction    =    current.getownerFunction();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
38	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getPropertyType();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getPropertyType();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getPropertyType();	  PropertyType    ownerFunction    =    current.getownerFunction();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
39	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;	  current    ==    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
40	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES;	  current    ==    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
41	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current    ==    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
42	[BUG]  [BUGGY]  propertyNames.addAll(current.getPropertyNames());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.addAll(current.getPropertyNames());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.addAll(current.getPropertyNames());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  propertyNames.add(current.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.add(current.getOwnPropertyNames());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.add(current.getOwnPropertyNames());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  propertyNames.add(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.add(current.getOwnPrototype());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.add(current.getOwnPrototype());	  propertyNames.addAll(current.getOwnPrototype());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isUnknownType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isUnknownType()    &&    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
46	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newHashSet(forAnnotations);	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newTreeSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newTreeSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newStringSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newStringSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newStringSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newLinkedHashSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newArrayList();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newArrayList();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newSingletonSet();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newSingletonSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newSingletonSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  ||  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isImplicitPrototype()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isImplicitPrototype()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  &&  properties.contains(propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  &&  properties.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isImplicitPrototype()  &&  properties.contains(propertyName);	  current!=    null    &&!current.isImplicitPrototype()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  current  ==  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isImplicitPrototype()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
55	[BUG]  [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.containsKey(propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.containsKey(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.containsKey(propertyName);	  current!=    null    &&!current.isImplicitPrototype()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
56	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	List  <  String>  propertyNames  =  Sets.newArrayList();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	HashSet  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  propertyNames.add(current.getImplicitPrototype(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.add(current.getImplicitPrototype(),  forAnnotations);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.add(current.getImplicitPrototype(),  forAnnotations);	  propertyNames.add(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  propertyNames.add(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  propertyNames.add(current.getOwnPropertyName());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	propertyNames.add(current.getOwnPropertyName());	  propertyNames.add(current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current!=  null?  null  :  current.getOwnPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current!=  null?  null  :  current.getOwnPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current!=  null?  null  :  current.getOwnPrototypeFallback();	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
65	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getPrototypeFallback();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getPrototypeFallback();	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
66	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototypeFallback(propertyNames);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPrototypeFallback(propertyNames);	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
67	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototypeFallback(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototypeFallback(forAnnotations);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPrototypeFallback(forAnnotations);	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
68	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getImplicitPrototypeFallback();	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
69	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
70	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  null;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  null;	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
71	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current!=  null?  null  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current!=  null?  null  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current!=  null?  null  :  current.getImplicitPrototype();	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
72	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getImplicitPrototype();	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
73	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  propertyNames;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  propertyNames;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  propertyNames;	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
74	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype(),  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype(),  forAnnotations);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getImplicitPrototype(),  forAnnotations);	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
75	[BUG]  [BUGGY]  current!=  null  &&!current.isConstructor()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isConstructor()  ||  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isConstructor()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isConstructor()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
76	[BUG]  [BUGGY]  current!=  null  &&!current.isConstructor()  &&  properties.contains(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isConstructor()  &&  properties.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isConstructor()  &&  properties.contains(propertyName);	  current!=    null    &&!current.isConstructor()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
77	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isNativeType()  ||  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
78	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeType()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeType()  &&  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeType()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
79	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.contains(propertyName);	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
80	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
81	[BUG]  [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  ||!current.isNativeObjectType()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
82	[BUG]  [BUGGY]  if(current!=  null)  {  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  if(current!=  null)  {  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  }  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	if(current!=  null)  {  current!=  null  &&!current.isImplicitPrototype()  &&  propertyNames.contains(propertyName);  }	  current!=    null    &&!current.isImplicitPrototype()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
83	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  ||  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
84	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getOwnPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getOwnPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  ==  null?  null  :  current.getOwnPrototypeFallback();	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
85	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnImplicitPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnImplicitPrototypeFallback();	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
86	[BUG]  [BUGGY]  FunctionType  ownerFunction  =  current.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  FunctionType  ownerFunction  =  current.getImplicitPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	FunctionType  ownerFunction  =  current.getImplicitPrototypeFallback();	  PropertyType    ownerFunction    =    current.getOwnPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
87	[BUG]  [BUGGY]  properties.addAll(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  properties.addAll(current.getImplicitPrototype());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	properties.addAll(current.getImplicitPrototype());	  propertyNames.addAll(current.getOwnPrototype());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
88	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getUserFunction();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getUserFunction();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getUserFunction();	  PropertyType    ownerFunction    =    current.getownerFunction();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
89	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  current.getImplicitPrototype();	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
90	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  getImplicitPrototype();	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
91	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  ||  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isNativeObjectType()    ||    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
92	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
93	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLongHashSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLongHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	Set  <  String>  propertyNames  =  Sets.newLongHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
94	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitOwnPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitOwnPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitOwnPrototype();	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
95	[BUG]  [BUGGY]  ObjectType  current  =  current.getOwnPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getOwnPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getOwnPrototype();	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
96	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  properties.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  &&  properties.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  properties.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current!=    null    &&!current.isInterface()    ||    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
97	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getimplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getimplicitPrototypeFallback();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current.getimplicitPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
98	[BUG]  [BUGGY]  current!=  null  &&!current.isNativeType()  &&  properties.contains(propertyName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isNativeType()  &&  properties.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isNativeType()  &&  properties.contains(propertyName);	  current!=    null    &&!current.isNativeType()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
99	[BUG]  [BUGGY]  properties.addAll(current.getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  properties.addAll(current.getImplicitPrototypeFallback());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	properties.addAll(current.getImplicitPrototypeFallback());	  propertyNames.addAll(current.getOwnPrototypeFallback());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
100	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newHashSet(propertyNames);	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
101	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newNumberSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newNumberSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newNumberSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
102	[BUG]  [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.containsKey(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInterface()  &&  propertyNames.containsKey(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInterface()  &&  propertyNames.containsKey(propertyName);	  current!=    null    &&!current.isInterface()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
103	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  current.getOwnPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  current.getOwnPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getImplicitPrototype()  :  current.getOwnPrototype();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
104	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getOwnPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getOwnPrototype()  :  null;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current  instanceof  ObjectType?((  ObjectType)current).getOwnPrototype()  :  null;	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
105	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  current    ==    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
106	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  ||  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;	  current    ==    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
107	[BUG]  [BUGGY]  ObjectType  actualPrototypeFallback  =  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  actualPrototypeFallback  =  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  actualPrototypeFallback  =  current.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
108	[BUG]  [BUGGY]  ObjectType  currentPrototypeFallback  =  current.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  currentPrototypeFallback  =  current.getImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  currentPrototypeFallback  =  current.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
109	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype()  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype()  +  1;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  implicitPrototypeFallback  =  current.getImplicitPrototype()  +  1;	  ObjectType    implicitPrototypeFallback    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
110	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet(propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newHashSet(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newHashSet(propertyName);	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
111	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashMap();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  String  propertyNames  =  Sets.newHashMap();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	String  propertyNames  =  Sets.newHashMap();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
112	[BUG]  [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current  ==  null  &&!current.isNativeObjectType()  &&  propertyNames.contains(propertyName);	  current    ==    null    &&!current.isNativeObjectType()    &&    propertyNames.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
113	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnImplicitPrototype();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnImplicitPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnImplicitPrototype();	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
114	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototype(propertyNames);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getOwnPrototype(propertyNames);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getOwnPrototype(propertyNames);	  PropertyType    ownerFunction    =    current.getOwnPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
115	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
116	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.getImplicitPrototype().isInterface()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.getImplicitPrototype().isInterface()));  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.getImplicitPrototype().isInterface()));	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.getImplicitPrototype()).hasOwnPropertyNames();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.getImplicitPrototype()).hasOwnPropertyNames();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.getImplicitPrototype()).hasOwnPropertyNames();	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
118	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype())  {  propertyNames.add(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype())  {  propertyNames.add(current.getOwnPrototype());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype())  {  propertyNames.add(current.getOwnPrototype());	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
119	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.hasOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.hasOwnPropertyNames());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.hasOwnPropertyNames());	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
120	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.isInterface()));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.isInterface()));  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype()  ||(current!=  null  &&  current.isInterface()));	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
121	[BUG]  [BUGGY]  ObjectType  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  ObjectType  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPrototype());  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	ObjectType  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPrototype());	  ObjectType    current    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
122	[BUG]  [BUGGY]  current!=  null  &&!current.isInferred()  &&  propertyNames.contains(propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  current!=  null  &&!current.isInferred()  &&  propertyNames.contains(propertyName);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	current!=  null  &&!current.isInferred()  &&  propertyNames.contains(propertyName);	  current!=    null    &&!current.isImplicitPrototype()    &&    propertyNames.contains(propertyName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
123	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype(),  propertyNames);  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getImplicitPrototype(),  propertyNames);	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
124	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitOwnPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitOwnPrototype();  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getImplicitOwnPrototype();	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
125	[BUG]  [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype(),  propertyNames;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;      [BUGGY]  PropertyType  ownerFunction  =  current.getImplicitPrototype(),  propertyNames;  [BUGGY]      propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	PropertyType  ownerFunction  =  current.getImplicitPrototype(),  propertyNames;	  PropertyType    ownerFunction    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
